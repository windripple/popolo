<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Popolo.Utility</name>
    </assembly>
    <members>
        <member name="T:Popolo.Utility.Property.Controls.MoistAirTable">
            <summary>湿り空気状態表示テーブル</summary>
        </member>
        <member name="F:Popolo.Utility.Property.Controls.MoistAirTable.properties">
            <summary>空気状態の種類と列番号の対応</summary>
        </member>
        <member name="F:Popolo.Utility.Property.Controls.MoistAirTable.initializing">
            <summary>初期化中フラグ</summary>
        </member>
        <member name="F:Popolo.Utility.Property.Controls.MoistAirTable.editColsList">
            <summary>編集中の列番号リスト（行の数だけ存在）</summary>
        </member>
        <member name="F:Popolo.Utility.Property.Controls.MoistAirTable.barometricPressure">
            <summary>気圧[kPa]</summary>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.dgAirTable_CellValueChanged(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>セル編集イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.dgAirTable_RowsAdded(System.Object,System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
            <summary>列追加イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.dgAirTable_RowsRemoved(System.Object,System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
            <summary>列削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.dgAirTable_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>キーダウンイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.updateRow(System.Int32,System.Int32)">
            <summary>行を更新する</summary>
            <param name="rowIndex">更新に利用するセルの列方向番号</param>
            <param name="colIndex">更新に利用するセルの行方向番号</param>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.PasteClipboardData">
            <summary>クリップボードの値を貼り付ける</summary>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.GetClipboardContent">
            <summary>選択されたテーブルの内容を取得する</summary>
            <returns>選択されたテーブルの内容</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.OutputDataToCSVFile(System.String)">
            <summary>データをCSVファイルに書き出す</summary>
            <param name="filePath">CSVファイルへのパス</param>
        </member>
        <member name="F:Popolo.Utility.Property.Controls.MoistAirTable.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Utility.Property.Controls.MoistAirTable.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Property.Controls.MoistAirTable.BarometricPressure">
            <summary>気圧[kPa]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Window">
            <summary>窓クラス</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableWindow">
            <summary>読み取り専用の窓</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWindow.GetSurface(System.Boolean)">
            <summary>窓表面を取得する</summary>
            <param name="isOutSide">外部か否か</param>
            <returns>窓表面</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.ShadowRate">
            <summary>日影面積率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.Sun">
            <summary>太陽を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.OutSideIncline">
            <summary>屋外側傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.TransmissionHeatGain">
            <summary>透過日射による熱取得[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.AbsorbedHeatGain">
            <summary>吸収日射による熱取得[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.TransferHeatGain">
            <summary>温度差による貫流熱取得[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.RadiativeHeatGain">
            <summary>熱取得の内、放射成分[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.ConvectiveHeatGain">
            <summary>熱取得の内、対流成分[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.FI">
            <summary>FIを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.FO">
            <summary>FOを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.Glass">
            <summary>複層ガラスを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.Shade">
            <summary>日除けを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.SurfaceArea">
            <summary>窓面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.NocturnalRadiation">
            <summary>夜間放射[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.OutSideSurfaceTemperature">
            <summary>室外側表面温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.InSideSurfaceTemperature">
            <summary>室内側表面温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.OutdoorDrybulbTemperature">
            <summary>屋外の窓近傍の乾球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWindow.IndoorDrybulbTemperature">
            <summary>屋内の窓近傍の乾球温度[C]を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.hasChanged">
            <summary>状態値変更フラグ</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.outsideSurface">
            <summary>室外側表面</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.insideSurface">
            <summary>室内側表面</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.sunRev">
            <summary>太陽編集番号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.glassPanes">
            <summary>ガラス層</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.incline">
            <summary>屋外側の傾斜面</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.transmissionHeatGain">
            <summary>透過日射による熱取得[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.absorbedHeatGain">
            <summary>吸収日射による熱取得[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.transferHeatGain">
            <summary>温度差による貫流熱取得[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.shadowRate">
            <summary>日影面積率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.sun">
            <summary>太陽オブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.radiativeHeatGain">
            <summary>熱取得の内、放射成分[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.convectiveHeatGain">
            <summary>熱取得の内、対流成分[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.sunShade">
            <summary>日除け</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.surfaceArea">
            <summary>窓面積[m2]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.nocturnalRadiation">
            <summary>夜間放射[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.outdoorSurfaceTemperature">
            <summary>室外側表面温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Window.indoorSurfaceTemperature">
            <summary>室内側表面温度[C]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.#ctor(Popolo.Utility.LoadCalculation.ImmutableGlassPanes)">
            <summary>コンストラクタ</summary>
            <param name="glassPanes">ガラス層</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.#ctor(Popolo.Utility.LoadCalculation.ImmutableGlassPanes,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>コンストラクタ</summary>
            <param name="glassPanes">ガラス層</param>
            <param name="incline">屋外側の傾斜面</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.#ctor(Popolo.Utility.LoadCalculation.ImmutableGlassPanes,Popolo.Utility.Weather.ImmutableIncline,Popolo.Utility.LoadCalculation.ImmutableSunShade)">
            <summary>コンストラクタ</summary>
            <param name="glassPanes">ガラス層</param>
            <param name="incline">屋外側の傾斜面情報</param>
            <param name="sunShade">日除け</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.#ctor(Popolo.Utility.LoadCalculation.ImmutableGlassPanes,System.String)">
            <summary>コンストラクタ</summary>
            <param name="glassPanes">ガラス層</param>
            <param name="name">窓名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.#ctor(Popolo.Utility.LoadCalculation.ImmutableGlassPanes,Popolo.Utility.Weather.ImmutableIncline,System.String)">
            <summary>コンストラクタ</summary>
            <param name="glassPanes">ガラス層</param>
            <param name="incline">屋外側の傾斜面</param>
            <param name="name">窓名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.#ctor(Popolo.Utility.LoadCalculation.ImmutableGlassPanes,Popolo.Utility.Weather.ImmutableIncline,Popolo.Utility.LoadCalculation.ImmutableSunShade,System.String)">
            <summary>コンストラクタ</summary>
            <param name="glassPanes">ガラス層</param>
            <param name="incline">屋外側の傾斜面情報</param>
            <param name="sunShade">日除け</param>
            <param name="name">窓名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.initialize(Popolo.Utility.LoadCalculation.ImmutableGlassPanes,Popolo.Utility.Weather.ImmutableIncline,Popolo.Utility.LoadCalculation.ImmutableSunShade,System.String)">
            <summary>初期化する</summary>
            <param name="glassPanes">ガラス層</param>
            <param name="incline">屋外側の傾斜面情報</param>
            <param name="sunShade">日除け</param>
            <param name="name">窓名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.makeSurface">
            <summary>表面を作成する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.Initialize(Popolo.Utility.LoadCalculation.ImmutableGlassPanes)">
            <summary>ガラス層を初期化する</summary>
            <param name="glassPanes">ガラス層</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.GetSurface(System.Boolean)">
            <summary>窓表面を取得する</summary>
            <param name="isOutSide">外部か否か</param>
            <returns>窓表面</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.GetStandardIncidentAngleCharacteristic(System.Double)">
            <summary>ガラスの標準入射角特性[-]を計算する</summary>
            <param name="cosineIncidentAngle">入射角の余弦（cosθ）</param>
            <returns>ガラスの標準入射角特性[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.setOutsideOverallHeatTransferCoefficient(System.Double)">
            <summary>外表面総合熱伝達率[W/m2-K]を設定する</summary>
            <param name="outsideOverallHeatTransferCoefficient">外表面総合熱伝達率[W/m2-K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.setInsideOverallHeatTransferCoefficient(System.Double)">
            <summary>内表面総合熱伝達率[W/m2-K]を設定する</summary>
            <param name="insideOverallHeatTransferCoefficient">内表面総合熱伝達率[W/m2-K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.GetSolAirTemperature(System.Boolean)">
            <summary>放射[W/m2]を考慮した相当温度[C]を計算する</summary>
            <param name="isOutside">外壁か否か</param>
            <returns>相当温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Window.updateState">
            <summary>状態を更新する</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.Window.FIOChangeEvent">
            <summary>FIおよびFO変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.Window.AreaChangeEvent">
            <summary>面積変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.ShadowRate">
            <summary>日影面積率[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.Sun">
            <summary>太陽を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.OutSideIncline">
            <summary>屋外側の傾斜面情報を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.TransmissionHeatGain">
            <summary>透過日射による熱取得[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.AbsorbedHeatGain">
            <summary>吸収日射による熱取得[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.TransferHeatGain">
            <summary>温度差による貫流熱取得[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.RadiativeHeatGain">
            <summary>熱取得の内、放射成分[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.ConvectiveHeatGain">
            <summary>熱取得の内、対流成分[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.FI">
            <summary>FIを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.FO">
            <summary>FOを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.Glass">
            <summary>ガラスの特性を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.Shade">
            <summary>日除けを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.SurfaceArea">
            <summary>窓面積[m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.NocturnalRadiation">
            <summary>夜間放射[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.OutSideSurfaceTemperature">
            <summary>室外側表面温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.InSideSurfaceTemperature">
            <summary>室内側表面温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.OutdoorDrybulbTemperature">
            <summary>屋外の窓近傍の乾球温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Window.IndoorDrybulbTemperature">
            <summary>屋内の窓近傍の乾球温度[C]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Zone">
            <summary>ゾーンクラス</summary>
            <remarks>平均周壁温度を利用する方法</remarks>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableZone">
            <summary>読み取り専用のゾーンinterface</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableZone.GetHeatStorage(System.Double)">
            <summary>蓄熱量[kJ]を取得する</summary>
            <param name="initialTemperature">初期温度[C]</param>
            <returns>熱量[kJ]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.Volume">
            <summary>室容積[m3]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.TimeStep">
            <summary>計算時間間隔[sec]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.SensibleHeatCapacity">
            <summary>空気以外の顕熱容量[J/K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.SensibleHeatSupply">
            <summary>顕熱供給[W]（暖房を正とする）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.LatentHeatCapacity">
            <summary>空気以外の水蒸気容量[kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.LatentHeatSupply">
            <summary>潜熱供給[W]（加湿を正とする）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.HeatTransferCoefficient">
            <summary>壁面の総合熱伝達率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.VentilationVolume">
            <summary>換気量[m3/h]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.VentilationAirState">
            <summary>換気空気状態を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.ControlDrybulbTemperature">
            <summary>乾球温度[C]を制御するか否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.ControlAbsoluteHumidity">
            <summary>絶対湿度[kg/kg(DA)]を制御するか否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.DrybulbTemperatureSetPoint">
            <summary>乾球温度設定値[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.AbsoluteHumiditySetPoint">
            <summary>絶対湿度設定値[kg/kg(DA)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.Surfaces">
            <summary>表面リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.HeatGains">
            <summary>発熱要素を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.AtmosphericPressure">
            <summary>大気圧[kPa]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.CurrentDrybulbTemperature">
            <summary>現在の乾球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.CurrentAbsoluteHumidity">
            <summary>現在の絶対湿度[kg/kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.CurrentSensibleHeatLoad">
            <summary>現在の顕熱負荷[kW]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.CurrentLatentHeatLoad">
            <summary>現在の潜熱負荷[kW]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.CurrentMeanRadiantTemperature">
            <summary>現在の平均放射温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableZone.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.drybulbTemperature">
            <summary>現在の乾球温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.absoluteHumidity">
            <summary>現在の絶対湿度[kg/kg(DA)]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.timeStep">
            <summary>計算時間間隔[sec]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.volume">
            <summary>室容積[m3]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.sensibleHeatCapacity">
            <summary>空気以外の顕熱容量[J/K]</summary>
            <remarks>
            事務所の場合、室容積あたり12000[J/m3-K]程度
            木村健一, 事務所建築の家具の熱容量, 日本建築学会関東支部第29会研究発表会, 1961.01
            住宅の場合は事務所の半分程度
            </remarks>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.latentHeatCapacity">
            <summary>空気以外の水蒸気容量[kg]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.heatGains">
            <summary>発熱要素リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.ar">
            <summary>室温計算用係数</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.heatTransferCoefficient">
            <summary>壁面の総合熱伝達率[W/m2-K]</summary>
            <remarks>
            全壁面で一定の値とする
            屋内で9.3[W/m2-K], 屋外で23[W/m2-K] 程度
            </remarks>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.convectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.radiativeRate">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.allSurfaceArea">
            <summary>壁面積合算値[m2]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.ventilationVolume">
            <summary>換気量[m3/h]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.ventilationAirState">
            <summary>換気空気状態</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.afiSum">
            <summary>AFI積算</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.sdt">
            <summary>SDT</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.brm">
            <summary>状態保持用の実数</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.brc">
            <summary>状態保持用の実数</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.brmx">
            <summary>状態保持用の実数</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.brcx">
            <summary>状態保持用の実数</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.firstCalculation">
            <summary>初回の計算か否か</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.aft">
            <summary>AFT</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.surfaces">
            <summary>室に属する表面リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.windowSurfaces">
            <summary>室に属する窓表面リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.shortWaveRadiationToSurface">
            <summary>表面への短波長放射成分入射比率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.longWaveRadiationToSurface">
            <summary>表面への長波長放射成分入射比率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.shortWaveRadiationRate">
            <summary>表面への短波長放射成分入射比率[-]：合算して1.0になるように調整済み</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.longWaveRadiationRate">
            <summary>表面への短波長放射成分入射比率[-]：合算して1.0になるように調整済み</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Zone.hasChanged">
            <summary>状態値に変更がある場合は真</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="name">ゾーン名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.AddSurface(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>表面を追加する</summary>
            <param name="surface">追加する表面</param>
            <returns>追加成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.RemoveSurface(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>表面を削除する</summary>
            <param name="surface">削除する表面</param>
            <returns>削除成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.AddWindow(Popolo.Utility.LoadCalculation.Window)">
            <summary>窓を追加する</summary>
            <param name="window">窓</param>
            <returns>追加成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.RemoveWindow(Popolo.Utility.LoadCalculation.Window)">
            <summary>窓を削除する</summary>
            <param name="window">削除する窓</param>
            <returns>削除成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.AddHeatGain(Popolo.Utility.LoadCalculation.IHeatGain)">
            <summary>発熱要素を追加する</summary>
            <param name="heatGain">発熱要素</param>
            <returns>追加成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.RemoveHeatGain(Popolo.Utility.LoadCalculation.IHeatGain)">
            <summary>発熱要素を削除する</summary>
            <param name="heatGain">削除する発熱要素</param>
            <returns>削除成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.InitializeAirState(System.Double,System.Double)">
            <summary>温湿度を初期化する</summary>
            <param name="drybulbTemperature">乾球温度[C]</param>
            <param name="absoluteHumidity">絶対湿度[kg/kg(DA)]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.initializeParameters">
            <summary>計算用の各種パラメータを初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.SetConvectiveRate(System.Double)">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を設定する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.SetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow,System.Double)">
            <summary>窓面の短波長放射成分入射比率[-]を設定する</summary>
            <param name="window">窓面</param>
            <param name="rate">窓面の短波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow)">
            <summary>窓面の短波長放射成分入射比率[-]を取得する</summary>
            <param name="window">窓面</param>
            <returns>窓面の短波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.SetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow,System.Double)">
            <summary>窓面の長波長放射成分入射比率[-]を設定する</summary>
            <param name="window">窓面</param>
            <param name="rate">窓面の長波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow)">
            <summary>窓面の長波長放射成分入射比率[-]を取得する</summary>
            <param name="window">窓面</param>
            <returns>窓面の長波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.SetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface,System.Double)">
            <summary>短波長放射成分入射比率[-]を設定する</summary>
            <param name="surface">表面</param>
            <param name="rate">短波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>短波長放射成分入射比率[-]を取得する</summary>
            <param name="surface">表面</param>
            <returns>短波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.SetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface,System.Double)">
            <summary>長波長放射成分入射比率[-]を設定する</summary>
            <param name="surface">表面</param>
            <param name="rate">長波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>長波長放射成分入射比率[-]を取得する</summary>
            <param name="surface">表面</param>
            <returns>長波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.initializeShortWaveRadiationRate">
            <summary>短波長放射成分入射比率[-]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.initializeLongWaveRadiationRate">
            <summary>長波長放射成分入射比率[-]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetNextDrybulbTemperature(System.Double)">
            <summary>室の乾球温度[C]を取得する</summary>
            <param name="sensibleHeatSupply">顕熱供給[W]（暖房を正とする）</param>
            <returns>室の乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetNextAbsoluteHumidity(System.Double)">
            <summary>絶対湿度[kg/kg(DA)]を取得する</summary>
            <param name="latentHeatSupply">潜熱供給[W]（加湿を正とする）</param>
            <returns>室の絶対湿度[kg/kg(DA)]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetNextMeanRadiantTemperature">
            <summary>周壁平均温度[C]を計算する</summary>
            <returns>周壁平均温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetNextSensibleHeatLoad(System.Double)">
            <summary>顕熱負荷[W]を計算する</summary>
            <param name="drybulbTemperatureSetPoint">室温設定値[C]</param>
            <returns>顕熱負荷[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetNextLatentHeatLoad(System.Double)">
            <summary>潜熱負荷[W]を計算する</summary>
            <param name="absoluteHumiditySetPoint">絶対湿度設定値[kg/kg]</param>
            <returns>潜熱負荷[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.preprocess">
            <summary>前処理を行う</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.isTimeStepCorrect">
            <summary>計算時間間隔が正常か否か</summary>
            <returns>正常の場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.Update">
            <summary>状態を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.updateBRCandBRM">
            <summary>BRCおよびBRMを更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.updateBRCXandBRMX">
            <summary>BRCXおよびBRMXを更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.getSurfaces">
            <summary>表面リストを取得する</summary>
            <returns>表面リスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.integrateRadiativeHeatGain(System.Boolean)">
            <summary>ゾーンの放射熱取得[W]を積算する</summary>
            <param name="isShortWave">短波長放射か否か</param>
            <returns>ゾーンの放射熱取得[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.integrateConvectiveHeatGain">
            <summary>ゾーンの対流熱取得[W]を積算する</summary>
            <returns>ゾーンの対流熱取得[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.integrateLatentHeatGain">
            <summary>ゾーンの潜熱取得[W]を積算する</summary>
            <returns>ゾーンの潜熱取得[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.GetHeatStorage(System.Double)">
            <summary>蓄熱量[kJ]を取得する</summary>
            <param name="initialTemperature">初期温度[C]</param>
            <returns>熱量[kJ]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.setDrybulbTemperature(System.Double)">
            <summary>乾球温度[C]を設定する</summary>
            <param name="dbTemp">乾球温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.setAbsoluteHumidity(System.Double)">
            <summary>絶対湿度[kg/kg(DA)]を設定する</summary>
            <param name="aHumid">絶対湿度[kg/kg(DA)]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.setMeanRadiantTemperature(System.Double)">
            <summary>平均放射温度[C]を設定する</summary>
            <param name="mrt">平均放射温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Zone.surface_AreaChangeEvent(System.Object,System.EventArgs)">
            <summary>面積変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.Volume">
            <summary>室容積[m3]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.TimeStep">
            <summary>計算時間間隔[sec]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.SensibleHeatCapacity">
            <summary>空気以外の顕熱容量[J/K]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.SensibleHeatSupply">
            <summary>顕熱供給[W]（暖房を正とする）を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.LatentHeatCapacity">
            <summary>空気以外の水蒸気容量[kg]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.LatentHeatSupply">
            <summary>潜熱供給[W]（加湿を正とする）を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.HeatTransferCoefficient">
            <summary>壁面の総合熱伝達率[W/m2-K]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.VentilationVolume">
            <summary>換気量[m3/h]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.VentilationAirState">
            <summary>換気空気状態を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.ControlDrybulbTemperature">
            <summary>乾球温度[C]を制御するか否かを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.ControlAbsoluteHumidity">
            <summary>絶対湿度[kg/kg(DA)]を制御するか否かを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.DrybulbTemperatureSetPoint">
            <summary>乾球温度設定値[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.AbsoluteHumiditySetPoint">
            <summary>絶対湿度設定値[kg/kg(DA)]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.Surfaces">
            <summary>壁表面リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.HeatGains">
            <summary>発熱要素を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.AtmosphericPressure">
            <summary>大気圧[kPa]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.CurrentDrybulbTemperature">
            <summary>現在の乾球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.CurrentAbsoluteHumidity">
            <summary>現在の絶対湿度[kg/kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.CurrentSensibleHeatLoad">
            <summary>現在の顕熱負荷[kW]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.CurrentLatentHeatLoad">
            <summary>現在の潜熱負荷[kW]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.CurrentMeanRadiantTemperature">
            <summary>現在の平均放射温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Zone.CurrentDateTime">
            <summary>現在の日時を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Converter.TMY3Converter">
            <summary>TMY3気象データを変換する</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.TMY3Converter.ToPWeatherData(System.String,System.Boolean@)">
            <summary>ファイルを元にWeatherDataTableを構成する</summary>
            <param name="filePath">読み取りファイルのパス</param>
            <param name="success">読み取り成功の真偽</param>
            <returns>構成されたPWeatherDataオブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.TMY3Converter.FromPWeather(Popolo.Utility.Weather.WeatherDataTable,System.String,System.Boolean@)">
            <summary>PWeatherDataをファイルに書き出す</summary>
            <param name="wdTable">WeatherDataTableオブジェクト</param>
            <param name="filePath">書き出しファイルへのパス</param>
            <param name="success">書き出し成功の真偽</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.TMY3Converter.getDSource(System.String)">
            <summary>データソースを取得する</summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="P:Popolo.Utility.Weather.Converter.TMY3Converter.Name">
            <summary>気象データ名称を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.CircuitSolver">
            <summary>回路網ソルバ</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.timeStep">
            <summary>計算時間間隔[sec]</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.circuit">
            <summary>計算対象の回路網</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.mRoot">
            <summary>多次元関数求根クラス</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.odes">
            <summary>常微分方程式ソルバ</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.staticPotentials">
            <summary>静的エネルギーリスト</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.staticIndices">
            <summary>静的状態変数対応リスト</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.dynamicPotentials">
            <summary>動的エネルギーリスト</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.CircuitSolver.dynamicIndices">
            <summary>動的状態変数対応リスト</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.CircuitSolver.#ctor(Popolo.Utility.FluidNetwork.Circuit)">
            <summary>コンストラクタ</summary>
            <param name="circuit">計算対象の回路網</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.CircuitSolver.initialize">
            <summary>初期化処理</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.CircuitSolver.Solve">
            <summary>回路網を解いて状態を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.CircuitSolver.resFunction1(System.Double,System.Double[],System.Double[]@)">
            <summary>微分方程式用 誤差評価関数</summary>
            <param name="time">時刻</param>
            <param name="variables">状態変数（節点のエネルギーベクトル）</param>
            <param name="variablesDT">状態変数変化量</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.CircuitSolver.resFunction2(System.Double[],System.Double[]@)">
            <summary>非線形連立代数方程式用 誤差評価関数</summary>
            <param name="variables">状態変数（節点のエネルギーベクトル）</param>
            <param name="errors">誤差</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.CircuitSolver.Dispose">
            <summary>終了処理</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.CircuitSolver.TimeStep">
            <summary>計算時間間隔[sec]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.CircuitSolver.TargetCircuit">
            <summary>計算対象の回路網を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Converter.PMDConverter">
            <summary>PMDデータを変換する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Converter.PMDConverter.locationInfos">
            <summary>地点番号-地名対応リスト</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.#cctor">
            <summary>静的コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.ToPWeatherData(System.String,System.Boolean@)">
            <summary>ファイルを元にWeatherDataTableを構成する</summary>
            <param name="filePath">読み取りファイルのパス</param>
            <param name="success">読み取り成功の真偽</param>
            <returns>構成されたPWeatherDataオブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.FromPWeather(Popolo.Utility.Weather.WeatherDataTable,System.String,System.Boolean@)">
            <summary>PWeatherDataをファイルに書き出す</summary>
            <param name="wdTable">WeatherDataTableオブジェクト</param>
            <param name="filePath">書き出しファイルへのパス</param>
            <param name="success">書き出し成功の真偽</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.getHourlyData(Popolo.Utility.Weather.WeatherDataTable@,System.IO.BufferedStream)">
            <summary>地点情報読み込み処理</summary>
            <param name="pwData">PWeatherDataオブジェクト</param>
            <param name="bStrm">読み取りStream</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.getDataSource(System.String)">
            <summary>RMKに従ってデータ種別を返す</summary>
            <param name="rmk">RMK</param>
            <returns>データ種別</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.getWindowDirection(System.Int32)">
            <summary>風向番号をdegreeに変換する</summary>
            <param name="wIndex">風向番号</param>
            <returns>degree</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.PMDConverter.GetLocationInformation(System.Int32,Popolo.Utility.Weather.LocationInformation@)">
            <summary>ID下3桁をもとに地点情報を取得する</summary>
            <param name="id3">ID下3桁</param>
            <param name="lInfo">地点情報</param>
            <returns>地点情報を取得成功の真偽</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.Converter.PMDConverter.Name">
            <summary>気象データ名称を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.PMVCalculator">
            <summary>熱的快適性計算クラス</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.ERROR_TOL_R">
            <summary>相対誤差許容値</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.ERROR_TOL_A">
            <summary>絶対誤差許容値</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.DELTA">
            <summary>微分値計算定数</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.MET_TO_M">
            <summary>代謝量換算係数[(W/m2)/met]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.C_TO_K">
            <summary>絶対温度換算用数値</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.TryCalculateHeatLossFromBody(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@)">
            <summary>人体からの熱損失[W]を計算する</summary>
            <param name="dryBulbTemperature">乾球温度[CDB]</param>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
            <param name="relativeAirVelocity">気流速度[m/s]</param>
            <param name="relativeHumidity">相対湿度[%]</param>
            <param name="clothing">着衣量[clo]</param>
            <param name="metabolicRate">代謝量[met]</param>
            <param name="externalWork">外部仕事量[met]</param>
            <param name="heatLoss">人体からの熱損失[W]</param>
            <returns>計算成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.TryCalculatePMV(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@)">
            <summary>PMV値[-]を計算する</summary>
            <param name="dryBulbTemperature">乾球温度[CDB]</param>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
            <param name="relativeAirVelocity">気流速度[m/s]</param>
            <param name="relativeHumidity">相対湿度[%]</param>
            <param name="clothing">着衣量[clo]</param>
            <param name="metabolicRate">代謝量[met]</param>
            <param name="externalWork">外部仕事量[met]</param>
            <param name="pmv">PMV値[-]</param>
            <returns>計算成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.TryCalculatePMV(System.Double,System.Double,System.Double)">
            <summary>PMV値[-]を計算する</summary>
            <param name="metabolicRate">代謝量[met]</param>
            <param name="externalWork">外部仕事量[met]</param>
            <param name="heatLoss">人体からの熱損失[W]</param>
            <returns>PMV値[-]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.GetPPDFromPMV(System.Double)">
            <summary>PPD値[%]を計算する</summary>
            <param name="pmv">PMV値</param>
            <returns>PPD値[%]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.GetPMVFromPPD(System.Double)">
            <summary>PPD値[%]からPMV値[-]を求める</summary>
            <param name="ppd">PPD値[%]</param>
            <returns>PMV値[-]（正側のみ）</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.TryCalculateDryBulbTemperature(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@)">
            <summary>PMV値[-]から乾球温度[CDB]を求める</summary>
            <param name="pmv">PMV値[-]</param>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
            <param name="relativeAirVelocity">気流速度[m/s]</param>
            <param name="relativeHumidity">相対湿度[%]</param>
            <param name="clothing">着衣量[clo]</param>
            <param name="metabolicRate">代謝量[met]</param>
            <param name="externalWork">外部仕事量[met]</param>
            <param name="dryBulbTemperature">出力：乾球温度[CDB]</param>
            <returns>計算成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.TryCalculateRelativeHumidity(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@)">
            <summary>PMV値[-]から相対湿度[%]を求める</summary>
            <param name="pmv">PMV値[-]</param>
            <param name="dryBulbTemperature">乾球温度[CDB]</param>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
            <param name="relativeAirVelocity">気流速度[m/s]</param>
            <param name="clothing">着衣量[clo]</param>
            <param name="metabolicRate">代謝量[met]</param>
            <param name="externalWork">外部仕事量[met]</param>
            <param name="relativeHumidity">出力：相対湿度[%]</param>
            <returns>計算成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.GetMet(Popolo.Utility.ThermalComfort.PMVCalculator.Tasks)">
            <summary>仕事に対する代謝量[met]を返す</summary>
            <param name="task">仕事種類</param>
            <returns>代謝量[met]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.PMVCalculator.GetTaskName(Popolo.Utility.ThermalComfort.PMVCalculator.Tasks)">
            <summary>仕事名称を返す</summary>
            <param name="task">仕事種類</param>
            <returns>仕事名称</returns>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks">
            <summary>仕事</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Resting_Sleeping">
            <summary>休息：睡眠</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Resting_Reclining">
            <summary>休息：リクライニング</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Resting_Seated_Quiet">
            <summary>休息：座位安静</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Resting_Standing_Relaxed">
            <summary>休息：立位安静</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Walking_Slow_09ms">
            <summary>歩行：0.9m/s</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Walking_Normal_12ms">
            <summary>歩行：1.2m/s</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Walking_Fast_18ms">
            <summary>歩行：1.8m/s</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.OfficeActivities_Seated_Reading_Writing">
            <summary>オフィス作業：座位読み書き</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.OfficeActivities_Typing">
            <summary>オフィス作業：タイピング</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.OfficeActivities_Filing_Seated">
            <summary>オフィス作業：座位ファイル作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.OfficeActivities_Filing_Standing">
            <summary>オフィス作業：立位ファイル作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.OfficeActivities_Walking">
            <summary>オフィス作業：歩行</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.OfficeActivities_Lifting_Packing">
            <summary>オフィス作業：運搬・梱包</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Driving_Automobile">
            <summary>運転：自動車</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Driving_Aircraft_Routine">
            <summary>運転：飛行機</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Driving_Aircraft_Instrument_Landing">
            <summary>運転：飛行機着陸</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Driving_Aircraft_Combat">
            <summary>運転：戦闘機</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Driving_HeavyVehicle">
            <summary>運転：大型車両</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_Cooking">
            <summary>その他：調理</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_HouseCleaning">
            <summary>その他：清掃</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_Seated_HeavyLimbMovement">
            <summary>その他：激しい着席中手作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_MachineWork_Sawing">
            <summary>その他：のこ引き</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_MachineWork_Light">
            <summary>その他：軽い機械作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_MachineWork_Heavy">
            <summary>その他：激しい機械作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_Handling50kgBags">
            <summary>その他：50kg程度の荷物運搬作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Occupational_PickAndShovelWork">
            <summary>その他：シャベルによる掘削作業</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Leisure_Dancing">
            <summary>その他：ダンス</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Leisure_Exercise">
            <summary>その他：運動</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Leisure_Tennes">
            <summary>その他：テニス</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Leisure_Basketball">
            <summary>その他：バスケットボール</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.PMVCalculator.Tasks.Other_Leisure_Wrestling">
            <summary>その他：レスリング</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WallSurface">
            <summary>壁表面クラス</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ISurface">
            <summary>表面インターフェース</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableSurface">
            <summary>読み取り専用の表面</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableSurface.GetSolAirTemperature">
            <summary>放射を考慮した相当温度[C]を計算する</summary>
            <returns>相当温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableSurface.GetHeatTransfer">
            <summary>周辺の空気から表面への熱移動量[W]を計算する</summary>
            <returns>周辺の空気から表面への熱移動量[W]</returns>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.ImmutableSurface.FIOChangeEvent">
            <summary>FIおよびFO変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.ImmutableSurface.AreaChangeEvent">
            <summary>面積変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.FacingZone">
            <summary>面している空間を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.OtherSideSurface">
            <summary>逆側の表面を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.FI">
            <summary>FIを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.FO">
            <summary>FOを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.CF">
            <summary>CFを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.AirTemperature">
            <summary>壁近傍の空気温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.Radiation">
            <summary>壁近傍の放射量[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.OverallHeatTransferCoefficient">
            <summary>表面熱伝達率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.ConvectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.RadiativeRate">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.Area">
            <summary>面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.FPT">
            <summary>FPTを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.Temperature">
            <summary>表面温度を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.Incline">
            <summary>傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSurface.Albedo">
            <summary>アルベド[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ISurface.FacingZone">
            <summary>面している空間を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ISurface.AirTemperature">
            <summary>壁近傍の空気温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ISurface.Radiation">
            <summary>壁近傍の放射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ISurface.ConvectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を設定・取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.wall">
            <summary>壁オブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.isSide1">
            <summary>壁面1か否か</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.overallHeatTransferCoefficient">
            <summary>表面熱伝達率[W/m2-K]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.albedo">
            <summary>アルベド[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.convectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.radiativeRate">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.shadingRate">
            <summary>日影率[-]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallSurface.#ctor(Popolo.Utility.LoadCalculation.Wall,System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="wall">壁オブジェクト</param>
            <param name="isSide1">壁面1か否か</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallSurface.GetHeatTransfer">
            <summary>周辺の空気から壁への熱移動量[W]を計算する</summary>
            <returns>周辺の空気から壁への熱移動量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallSurface.GetSolAirTemperature">
            <summary>放射を考慮した相当温度[C]を計算する</summary>
            <returns>相当温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallSurface.InitializeEmissivity(Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial)">
            <summary>放射率[-]を初期化する</summary>
            <param name="sMaterial">表面素材</param>
            <remarks>空調・衛生技術データブック（株式会社テクノ菱和）のデータの平均値を利用</remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallSurface.wall_FIOChangeEvent(System.Object,System.EventArgs)">
            <summary>壁のFIおよびFO変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallSurface.wall_AreaChangeEvent(System.Object,System.EventArgs)">
            <summary>壁面積変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.WallSurface.FIOChangeEvent">
            <summary>FIおよびFO変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.WallSurface.AreaChangeEvent">
            <summary>面積変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.WallSurface.OverallHeatTransferCoefficientChangeEvent">
            <summary>総合熱伝達率変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.FacingZone">
            <summary>面している空間を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.WallBody">
            <summary>壁オブジェクト（読み取り専用）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.Name">
            <summary>壁名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.IsSide1">
            <summary>壁面1か否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.Incline">
            <summary>傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.OtherSideSolAirTemperature">
            <summary>壁の向こう側の空気温度[℃]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.Temperature">
            <summary>壁表面温度[℃]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.FI">
            <summary>FIを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.FO">
            <summary>FOを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.CF">
            <summary>CFを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.AirTemperature">
            <summary>壁近傍の空気温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.Radiation">
            <summary>壁近傍の放射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.OverallHeatTransferCoefficient">
            <summary>表面総合熱伝達率[W/(m^2K)]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.SolarAbsorptance">
            <summary>日射吸収率[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.LongWaveEmissivity">
            <summary>長波長の放射率[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.Area">
            <summary>壁面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.TimeStep">
            <summary>計算時間間隔[sec]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.Albedo">
            <summary>アルベド[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.ConvectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.RadiativeRate">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.OtherSideSurface">
            <summary>逆側の表面を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.FPT">
            <summary>FPTを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallSurface.ShadingRate">
            <summary>日影率[-]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial">
            <summary>表面素材</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.BlackBody">
            <summary>完全黒体</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Asphalt">
            <summary>アスファルト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.BlackPaint">
            <summary>黒色塗料</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.RedBrick">
            <summary>赤れんが</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.DarkTile">
            <summary>暗色タイル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Concrete">
            <summary>コンクリート</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.DarkPaint">
            <summary>暗色塗料</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Stone">
            <summary>石</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.CreamColorBrick">
            <summary>クリーム色のれんが・タイル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.CreamColorPaint">
            <summary>クリーム色塗料</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Plaster">
            <summary>漆喰</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.AluminumPaint">
            <summary>光沢アルミニウムペイント</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.BronzePaint">
            <summary>ブロンズペイント</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Brass">
            <summary>黄銅</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Aluminum">
            <summary>アルミニウム</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.Zinc">
            <summary>トタン・亜鉛</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.PolishedBrass">
            <summary>磨いた黄銅</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.PolishedAluminum">
            <summary>磨いたアルミニウム</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallSurface.SurfaceMaterial.TinPlate">
            <summary>ブリキ</summary>
        </member>
        <member name="T:Popolo.Utility.TSC21.TSCObject">
            <summary>TSC21オブジェクト</summary>
        </member>
        <member name="T:Popolo.Utility.TSC21.ImmutableTSCObject">
            <summary>読み取り専用TSC21オブジェクト</summary>
        </member>
        <member name="M:Popolo.Utility.TSC21.ImmutableTSCObject.GetGlobalName">
            <summary>グローバル名称を取得する</summary>
            <returns>グローバル名称</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.ImmutableTSCObject.GetLocalName">
            <summary>ローカル名称を取得する</summary>
            <returns>ローカル名称</returns>
        </member>
        <member name="P:Popolo.Utility.TSC21.ImmutableTSCObject.CoreName">
            <summary>機器・コア名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.ImmutableTSCObject.Prefix">
            <summary>接頭文字を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.ImmutableTSCObject.Suffix">
            <summary>添字を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.ImmutableTSCObject.ArrayString">
            <summary>配列の文字を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.ImmutableTSCObject.Child">
            <summary>子要素を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.TSC21.TSCObject.NULL_OBJECT">
            <summary>Nullオブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.TSC21.TSCObject.RG1">
            <summary>正規表現オブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.TSC21.TSCObject.prefix">
            <summary>接頭文字</summary>
        </member>
        <member name="F:Popolo.Utility.TSC21.TSCObject.suffix">
            <summary>添字</summary>
        </member>
        <member name="F:Popolo.Utility.TSC21.TSCObject.arrayString">
            <summary>配列の文字</summary>
        </member>
        <member name="F:Popolo.Utility.TSC21.TSCObject.coreName">
            <summary>機器・コア名称</summary>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="coreName">コア名称</param>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.#ctor(System.String,System.String,System.String)">
            <summary>コンストラクタ</summary>
            <param name="coreName">コア名称</param>
            <param name="prefix">接頭文字</param>
            <param name="suffix">添字</param>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.#ctor(System.String,System.String,System.String,System.String)">
            <summary>コンストラクタ</summary>
            <param name="coreName">コア名称</param>
            <param name="prefix">接頭文字</param>
            <param name="suffix">添字</param>
            <param name="arrayString">配列の文字</param>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.ToString">
            <summary>TSC21コードに変換する</summary>
            <returns>TSC21コード</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.GetGlobalName">
            <summary>グローバル名称を取得する</summary>
            <returns>グローバル名称</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.GetLocalName">
            <summary>ローカル名称を取得する</summary>
            <returns>ローカル名称</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.SetPrefix(System.String)">
            <summary>接頭文字を設定する</summary>
            <param name="prefix">接頭文字</param>
            <returns>設定成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.SetSuffix(System.String)">
            <summary>添字を設定する</summary>
            <param name="suffix">添字</param>
            <returns>設定成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.SetArrayString(System.String)">
            <summary>配列の文字を設定する</summary>
            <param name="arrayString">配列の文字</param>
            <returns>設定成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.TryMakeTSCObjectFromTSCCode(System.String,Popolo.Utility.TSC21.TSCObject@)">
            <summary>TSCコードからTSCObjectを作成する</summary>
            <param name="tscCode">TSCコード</param>
            <param name="tscObject">TSCObject</param>
            <returns>作成成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.TSC21.TSCObject.makeTSCObject(System.String)">
            <summary>TSCコードからTSCObjectを作成する</summary>
            <param name="tscCode">TSCコード</param>
            <returns>TSCObject</returns>
        </member>
        <member name="P:Popolo.Utility.TSC21.TSCObject.CoreName">
            <summary>機器・コア名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.TSCObject.Prefix">
            <summary>接頭文字を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.TSCObject.Suffix">
            <summary>添字を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.TSCObject.ArrayString">
            <summary>配列の文字を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.TSC21.TSCObject.Child">
            <summary>子要素を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.HumanBody">
            <summary>人体の非定常モデル</summary>
            <remarks>
            田辺新一, 佐藤孝広, 和田良祐
            人間-熱環境系快適性数値シミュレータ(その29) : 人体熱モデルREALの開発-着衣層モデル化と実験値との比較
            日本建築学会大会学術講演梗概集, 2004, pp.517-518
            
            上記文献にあるモデルを後退差分式に改良したもの
            </remarks>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.MAX_SIGNAL_CHANGE">
            <summary>シグナル変化限界値</summary>
            <remarks>可変タイムステップによる計算高速化のための定数</remarks>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.RHO_C">
            <summary>血液の体積比熱[kJ/(LK)]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.STANDARD_SURFACE_AREA">
            <summary>標準体躯の表面積[m2]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.STANDARD_WEIGHT">
            <summary>標準体躯の重量[kg]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.STANDARD_MET">
            <summary>標準体躯の代謝量[W]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.STANDARD_BLOOD_FLOW">
            <summary>標準体躯の血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.bpDict">
            <summary>部位-配列番号対応付け</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.bmMatrix">
            <summary>BM行列</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.zmVector">
            <summary>ZMベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.tauVector">
            <summary>TAUベクトル（QR分解用）</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.perm">
            <summary>置換ベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.weight">
            <summary>体重[kg]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.height">
            <summary>身長[m]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.age">
            <summary>年齢</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.fatPercentage">
            <summary>体脂肪率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.parts">
            <summary>体の部位</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.cardiacIndexAtRest">
            <summary>安静時の心係数[L/(min m^2)]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.timeStep">
            <summary>計算時間間隔[sec]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.averageCoreSetPoint">
            <summary>平均セットポイント</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.averageSkinSetPoint">
            <summary>平均セットポイント</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.lastSignal">
            <summary>前回の計算時の温冷感シグナル</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.#ctor">
            <summary>コンストラクタ</summary>
            <remarks>引数が無い場合には標準体躯となる</remarks>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.#ctor(System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="weight">体重[kg]</param>
            <param name="height">身長[m]</param>
            <param name="age">年齢</param>
            <param name="isMale">男性か否か</param>
            <param name="cardiacIndexAtRest">安静時の心係数[L/(min m^2)]</param>
            <param name="fatPercentage">体脂肪率[%]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.initialize(System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double)">
            <summary>初期化処理</summary>
            <param name="weight">体重[kg]</param>
            <param name="height">身長[m]</param>
            <param name="age">年齢</param>
            <param name="isMale">男性か否か</param>
            <param name="cardiacIndexAtRest">安静時の心係数[L/(min m^2)]</param>
            <param name="fatPercentage">体脂肪率[%]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.initMetabolicRate">
            <summary>代謝量[W]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.Update(System.Double)">
            <summary>状態を更新する</summary>
            <param name="timeStep">経過させる秒数[sec]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.update(System.Double,System.Double)">
            <summary>状態を更新</summary>
            <param name="cldSig">寒さシグナル</param>
            <param name="wrmSig">暑さシグナル</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetBodyPart(Popolo.Utility.ThermalComfort.HumanBody.Nodes)">
            <summary>体の部位を取得する</summary>
            <param name="position">部位の位置</param>
            <returns>体の部位</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetBodyPart">
            <summary>体の部位リストを取得する</summary>
            <returns>体の部位リスト</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.InitializeTemperature(System.Double)">
            <summary>体の温度[C]を初期化する</summary>
            <param name="temperature">体の温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.InitializeTemperature(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>体の温度[C]を初期化する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="temperature">体の温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetBloodFlow">
            <summary>全血流[L/h]を取得する</summary>
            <returns>全血流[L/h]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetSensibleHeatLossFromSkin">
            <summary>顕熱損失[W]を計算する</summary>
            <returns>顕熱損失[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetLatentHeatLossFromSkin">
            <summary>潜熱損失[W]を計算する</summary>
            <returns>潜熱損失[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetMetabolicRate">
            <summary>代謝量[W]を取得する</summary>
            <returns>代謝量[W]</returns>
            <remarks>基礎代謝・外部仕事・ふるえを考慮した値</remarks>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetAverageSkinTemperature">
            <summary>全身の平均皮膚温[C]を取得する</summary>
            <returns>全身の平均皮膚温[C]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.GetHeatTransferWithBloodFlow(Popolo.Utility.ThermalComfort.ImmutableBodyPart,Popolo.Utility.ThermalComfort.ImmutableBodyPart,Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>血流により体の部位1から体の部位2に移動する熱量[W]を計算する</summary>
            <param name="bodyPart1">体の部位1</param>
            <param name="bodyPart2">体の部位2</param>
            <param name="bloodType">血流の種類（動脈・深部静脈・表在静脈）</param>
            <returns>血流によりbodyPosition1からbodyPosition2に移動する熱量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetCardiacIndex(System.Double)">
            <summary>心係数[L/(min m^2)]を設定する</summary>
            <param name="cardiacIndex">心係数[L/(min m^2)]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetPosture(Popolo.Utility.ThermalComfort.HumanBody.BodyPosture)">
            <summary>姿勢を設定する</summary>
            <param name="posture">姿勢</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetWorkLoad(System.Double)">
            <summary>仕事量[W/m2]を設定する</summary>
            <param name="workLoad">仕事量[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetContactPortionRate(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>接触面積割合[-]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="contactPortionRate">接触面積割合[-]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetHeatConductanceToMaterial(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>物体への熱コンダクタンス[W/(m2 K)]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="heatConductance">熱コンダクタンス[W/(m2 K)]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetDrybulbTemperature(System.Double)">
            <summary>周辺空気の乾球温度[C]を設定する</summary>
            <param name="drybulbTemperature">周辺空気の乾球温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetDrybulbTemperature(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>周辺空気の乾球温度[C]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="drybulbTemperature">周辺空気の乾球温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetRelativeHumidity(System.Double)">
            <summary>周辺空気の相対湿度[%]を設定する</summary>
            <param name="relativeHumidity">周辺空気の相対湿度[%]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetRelativeHumidity(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>周辺空気の相対湿度[%]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="relativeHumidity">周辺空気の相対湿度[%]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetMeanRadiantTemperature(System.Double)">
            <summary>平均放射温度[C]を設定する</summary>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetMeanRadiantTemperature(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>平均放射温度[C]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetMaterialTemperature(System.Double)">
            <summary>接触物体の温度[C]を設定する</summary>
            <param name="materialTemperature">周辺空気の乾球温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetMaterialTemperature(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>周辺空気の乾球温度[C]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="materialTemperature">接触物体の温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetClothingIndex(System.Double)">
            <summary>着衣量[clo]を設定する</summary>
            <param name="clo">着衣量[clo]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetClothingIndex(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>着衣量[clo]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="clo">着衣量[clo]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetVelocity(System.Double)">
            <summary>気流速度[m/s]を設定する</summary>
            <param name="velocity">気流速度[m/s]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.SetVelocity(Popolo.Utility.ThermalComfort.HumanBody.Nodes,System.Double)">
            <summary>気流速度[m/s]を設定する</summary>
            <param name="bodyPosition">体の部位</param>
            <param name="velocity">気流速度[m/s]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.updateBodyTemperature">
            <summary>体温を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.initializeSetPoint">
            <summary>セットポイントを初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.getSignal(System.Double@,System.Double@)">
            <summary>制御信号を計算する</summary>
            <param name="cldSignal">寒さシグナル</param>
            <param name="wrmSignal">暑さシグナル</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.updateBodyControl(System.Double,System.Double)">
            <summary>体温調節を更新する</summary>
            <param name="cldSignal">寒さシグナル</param>
            <param name="wrmSignal">暑さシグナル</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.calculateAVA">
            <summary>AVA血管反応を計算する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.getSaturatedVaporPressure(System.Double)">
            <summary>乾球温度[℃]から飽和水蒸気分圧[kPa]を求める</summary>
            <param name="drybulbTemperature">乾球温度[℃]</param>
            <returns>飽和水蒸気分圧[kPa]</returns>
            <remarks>Wexler-Hylandによる式</remarks>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.HumanBody.getVaporPressure(System.Double,System.Double,System.Double)">
            <summary>乾球温度[℃]と相対湿度[%]と大気圧[kPa]から水蒸気分圧[kPa]を求める</summary>
            <param name="drybulbTemperature">乾球温度[℃]</param>
            <param name="relativeHumidity">相対湿度[%]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>水蒸気分圧[kPa]</returns>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.UseQRDecomposition">
            <summary>逆行列計算方式を設定・取得する（QR分解かLU分解）</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.Control">
            <summary>体温制御方法を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.Weight">
            <summary>体重[kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.Height">
            <summary>身長[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.Age">
            <summary>年齢を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.IsMale">
            <summary>男性か否かの情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.CardiacIndexAtRest">
            <summary>安静時の心係数[L/(min m^2)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.FatPercentage">
            <summary>体脂肪率[%]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.SurfaceArea">
            <summary>体表面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.BasicMetabolicRate">
            <summary>基礎代謝量[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.BaseBloodFlowRate">
            <summary>基礎血流量[L/h]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.CurrentBloodFlowRate">
            <summary>現在の全身血流量[L/h]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.HeatCapacity_CentralBloodPool">
            <summary>中央血液だまりの熱容量[Wh/K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.CentralBloodPoolTemperature">
            <summary>中央血液だまりの温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.Posture">
            <summary>姿勢を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.HeatLossByBreathing">
            <summary>呼吸による熱損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.AtmosphericPressure">
            <summary>大気圧[kPa]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.HumanBody.convectiveHeatTransferCoefficientMod">
            <summary>対流熱伝達率の補正係数[-]を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.HumanBody.Nodes">
            <summary>体の部位</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.None">
            <summary>不定</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.Head">
            <summary>頭</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.Neck">
            <summary>首</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.Chest">
            <summary>胸</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.Back">
            <summary>背中</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.Pelvis">
            <summary>腰</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.LeftShoulder">
            <summary>左肩</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.LeftArm">
            <summary>左腕</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.LeftHand">
            <summary>左手</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.RightShoulder">
            <summary>右肩</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.RightArm">
            <summary>右腕</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.RightHand">
            <summary>右手</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.LeftThigh">
            <summary>左太股</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.LeftLeg">
            <summary>左ふくらはぎ</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.LeftFoot">
            <summary>左足</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.RightThigh">
            <summary>右太股</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.RightLeg">
            <summary>右ふくらはぎ</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.RightFoot">
            <summary>右足</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.Nodes.TerminalPart">
            <summary>四肢末端部</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.HumanBody.BodyPosture">
            <summary>姿勢</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.BodyPosture.Sitting">
            <summary>座位</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.BodyPosture.Standing">
            <summary>立位</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods">
            <summary>体温制御方法</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods.None">
            <summary>無し</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods.SkinVasomotor">
            <summary>皮膚血管運動</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods.Sweating">
            <summary>発汗</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods.Shivering">
            <summary>ふるえ</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods.AVA">
            <summary>AVA血流</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.HumanBody.ControlMethods.All">
            <summary>全て</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.ITermStructure">
            <remarks>季節や時間帯等の期間構造を持つインターフェース</remarks>
        </member>
        <member name="T:Popolo.Utility.Schedule.ImmutableITermStructure">
            <summary>読み取り専用期間構造インターフェース</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableITermStructure.GetTermNames">
            <summary>季節や時間帯等の期間名称リストを取得する</summary>
            <returns>季節や時間帯等の期間名称リスト</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableITermStructure.GetTermName(System.DateTime)">
            <summary>日時を指定して季節や時間帯等の期間名称を取得する</summary>
            <param name="dateTime">日時</param>
            <returns>季節や時間帯等の期間名称</returns>
        </member>
        <member name="P:Popolo.Utility.Schedule.ImmutableITermStructure.ID">
            <summary>ItermStructureのIDを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.ImmutableITermStructure.Name">
            <summary>ITermStructureの名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.ITermStructure.ID">
            <summary>ItermStructureのIDを取得・設定する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.ITermStructure.Name">
            <summary>ITermStructureの名称を取得・設定する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Sun">
            <summary>太陽クラス</summary>
            <remarks>
            数値計算で学ぶ光と熱の建築環境学, pp.20, 丸善, 宿谷昌則, 1993
            パソコンによる空気調和計算法, 宇田川光弘, 1986
            </remarks>
        </member>
        <member name="T:Popolo.Utility.Weather.ImmutableSun">
            <summary>読み取り専用の太陽</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.Altitude">
            <summary>太陽高度[radian]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.Orientation">
            <summary>太陽方位角[radian]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.DirectNormalRadiation">
            <summary>法線面直達日射量[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.DiffuseHorizontalRadiation">
            <summary>水平面天空（散乱）日射量[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.GlobalHorizontalRadiation">
            <summary>水平面全天日射量[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.Revision">
            <summary>編集番号を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.Latitude">
            <summary>計算地点の緯度（北が正）[degree]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.Longitude">
            <summary>計算地点の経度（東が正）[degree]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.StandardLongitude">
            <summary>標準時を規定する地点の経度（東が正）[degree]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableSun.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DEG_TO_RAD">
            <summary>DegreeをRadianに変換する係数</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.SOLAR_CONSTANT">
            <summary>太陽定数[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.BLACK_RADIATION">
            <summary>黒体の放射定数[W/m2-K4]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.cities">
            <summary>都市-位置対応リスト</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.altitude">
            <summary>太陽高度[radian]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.orientation">
            <summary>太陽方位角[radian]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.directNormalRadiation">
            <summary>法線面直達日射量[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.diffuseHorizontalRadiation">
            <summary>水平面天空日射量[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.globalHorizontalRadiation">
            <summary>水平面全天日射量[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.revision">
            <summary>編集番号</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.latitude">
            <summary>計算地点の緯度[degree]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.xLongitude">
            <summary>計算地点の経度[degree]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.sLongitude">
            <summary>標準時を規定する地点の経度（東経で正）[degree]</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.#cctor">
            <summary>静的コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.#ctor(System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="latitude">計算地点の緯度（北が正）[degree]</param>
            <param name="xLongitude">計算地点の経度（東が正）[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東が正）[degree]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.#ctor(Popolo.Utility.Weather.Sun.City)">
            <summary>コンストラクタ</summary>
            <param name="city">都市</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.#ctor(Popolo.Utility.Weather.ImmutableSun)">
            <summary>コピーコンストラクタ</summary>
            <param name="sun">コピーする太陽オブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.Update(System.DateTime)">
            <summary>太陽位置等を更新する</summary>
            <param name="dateTime">日時</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.EstimateDiffuseAndDirectNormalRadiation(System.Double)">
            <summary>直散分離を行い、法線面直達日射量と水平面全天日射量を推定する</summary>
            <param name="globalHorizontalRadiation">水平面全天日射量[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.EstimateDiffuseAndDirectNormalRadiation(System.Double,Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod)">
            <summary>直散分離を行い、法線面直達日射量と水平面全天日射量を推定する</summary>
            <param name="method">直散分離の手法</param>
            <param name="globalHorizontalRadiation">水平面全天日射量[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.SetDirectNormalRadiation(System.Double,System.Double)">
            <summary>全天日射[W/m2]と天空日射[W/m2]から直達日射[W/m2]を計算して設定する</summary>
            <param name="globalHorizontalRadiation">全天日射[W/m2]</param>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.SetDiffuseHorizontalRadiation(System.Double,System.Double)">
            <summary>直達日射[W/m2]と全天日射[W/m2]から天空日射[W/m2]を計算して設定する</summary>
            <param name="directNormalRadiation">直達日射[W/m2]</param>
            <param name="globalHorizontalRadiation">全天日射[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.SetGlobalHorizontalRadiation(System.Double,System.Double)">
            <summary>天空日射[W/m2]と直達日射[W/m2]から全天日射[W/m2]を計算して設定する</summary>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
            <param name="directNormalRadiation">直達日射[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetSunPosition(System.Double,System.Double,System.Double,System.DateTime,System.Double@,System.Double@)">
            <summary>太陽位置を返す</summary>
            <param name="latitude">計算地点の緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <param name="altitude">太陽高度[rad]</param>
            <param name="orientation">太陽方位角[rad]</param>
            <remarks>緯度および経度は北側および東側を+として設定する</remarks>
            <example>
            東京における太陽高度および方位の計算法を示す。
            ただし、東京は北緯35.68°、東経139.77°
            日本標準時を決定する明石市は東経135°に位置する
            <code>
            double altitude, azimuth;
            Sun.GetPosition(35.68, 139.77, 135, new DateTime(2004, 6, 22, 12, 0, 0, 0), out altitude, out azimuth);
            </code>
            </example>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetSunSetTime(System.Double,System.Double,System.Double,System.DateTime)">
            <summary>日没の時刻を求める</summary>
            <param name="latitude">計算地点の緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <returns>日没の時刻</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetSunRiseTime(System.Double,System.Double,System.Double,System.DateTime)">
            <summary>日の出の時刻を求める</summary>
            <param name="latitude">計算地点の緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <returns>日の出の時刻</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetSunAltitude(System.Double,System.Double,System.Double,System.DateTime)">
            <summary>太陽高度[rad]を返す</summary>
            <param name="latitude">緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <returns>太陽高度[rad]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetSunAzimuth(System.Double,System.Double,System.Double,System.DateTime)">
            <summary>太陽方位角[rad]を返す</summary>
            <param name="latitude">緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <returns>太陽方位角[rad]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetSunDeclination(System.DateTime)">
            <summary>太陽赤緯[degree]を返す</summary>
            <param name="dTime">日時</param>
            <returns>太陽赤緯[degree]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetEquationOfTime(System.DateTime)">
            <summary>均時差を返す</summary>
            <param name="dTime">日時</param>
            <returns>均時差</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetHourAngle(System.Double,System.Double,System.Double,System.DateTime)">
            <summary>時角[°]を返す</summary>
            <param name="equationOfTime">均時差</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="slongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <returns>時角[°]</returns>
            <remarks>宿谷：数値計算で学ぶ光と熱の建築環境学 p.20</remarks>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetExtraterrestrialRadiation(System.Int32)">
            <summary>大気圏外日射量[W/m2]を計算する</summary>
            <param name="daysOfYear">通日(1月1日=1, 12月31日=365)</param>
            <returns>大気圏外日射量[W/m2]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.EstimateDiffuseAndDirectNormalRadiation(System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Double@,System.Double@)">
            <summary>水平面全天日射量[W/m2]をもとに直散分離を行う</summary>
            <param name="globalHorizontalRadiation">水平面全天日射量[W/m2]</param>
            <param name="latitude">緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <param name="directSolarRadiation">法線面直達日射量[W/m2]</param>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.EstimateDiffuseAndDirectNormalRadiation(System.Double,System.Double,System.Double,System.Double,System.DateTime,Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod,System.Double@,System.Double@)">
            <summary>水平面全天日射量[W/m2]をもとに直散分離を行う</summary>
            <param name="globalHorizontalRadiation">水平面全天日射量[W/m2]</param>
            <param name="latitude">緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <param name="method">直散分離の手法</param>
            <param name="directSolarRadiation">法線面直達日射量[W/m2]</param>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetDirectNormalRadiation(System.Double,System.Double,System.Double)">
            <summary>全天日射[W/m2]と天空日射[W/m2]から法線面直達日射[W/m2]を求める</summary>
            <param name="globalHorizontalRadiation">全天日射[W/m2]</param>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
            <param name="altitude">太陽高度[radian]</param>
            <returns>法線面直達日射[W/m2]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetDiffuseHorizontalRadiation(System.Double,System.Double,System.Double)">
            <summary>法線面直達日射[W/m2]と全天日射[W/m2]から天空日射[W/m2]を求める</summary>
            <param name="directNormalRadiation">法線面直達日射[W/m2]</param>
            <param name="globalHorizontalRadiation">全天日射[W/m2]</param>
            <param name="altitude">太陽高度[radian]</param>
            <returns>天空日射[W/m2]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.GetGlobalHorizontalRadiation(System.Double,System.Double,System.Double)">
            <summary>天空日射[W/m2]と法線面直達日射[W/m2]から全天日射[W/m2]を求める</summary>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
            <param name="directNormalRadiation">法線面直達日射[W/m2]</param>
            <param name="altitude">太陽高度[radian]</param>
            <returns>全天日射[W/m2]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.estimateAtmosphericTransmissivity(System.Double,System.Double,System.Double,Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod)">
            <summary>水平面天空日射[W/m2]に基づいて大気透過率[-]を推定する</summary>
            <param name="sinH">太陽高度の正弦</param>
            <param name="extraterrestrialRadiation">大気圏外日射[W/m2]</param>
            <param name="globalHorizontalRadiation">水平面天空日射[W/m2]</param>
            <param name="method">推定手法</param>
            <returns>大気透過率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.estimateDiffuseAndDirectNormalRadiation(System.Double,System.Double,System.Double,System.Double,System.DateTime,Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod,System.Double@,System.Double@)">
            <summary>水平面全天日射量[W/m2]をもとに直散分離を行う</summary>
            <param name="globalHorizontalRadiation">水平面全天日射量[W/m2]</param>
            <param name="latitude">緯度[degree]</param>
            <param name="xlongitude">計算地点の経度[degree]</param>
            <param name="sLongitude">標準時を規定する地点の経度（東経で正）[degree]</param>
            <param name="dTime">日時</param>
            <param name="directSolarRadiation">法線面直達日射量[W/m2]</param>
            <param name="method">直散分離の手法</param>
            <param name="diffuseHorizontalRadiation">天空日射[W/m2]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Sun.estimateRadiationFromAtmosphericTransmissivity(System.Double,System.Double,System.Double,Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod,System.Double@,System.Double@)">
            <summary>日射に関する大気透過率[-]に基づいて法線面直達日射[W/m2]と水平面天空日射[W/m2]を推定する</summary>
            <param name="atmosphericTransmissivity">日射に関する大気透過率[-]</param>
            <param name="sinH">太陽高度の正弦</param>
            <param name="extraterrestrialRadiation">大気圏外日射[W/m2]</param>
            <param name="method">推定手法</param>
            <param name="directNormalRadiation">法線面直達日射[W/m2]</param>
            <param name="diffuseHorizontalRadiation">水平面天空日射[W/m2]</param>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.SolarConstant">
            <summary>太陽定数[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.Altitude">
            <summary>太陽高度[radian]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.Orientation">
            <summary>太陽方位角[radian]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.DirectNormalRadiation">
            <summary>法線面直達日射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.DiffuseHorizontalRadiation">
            <summary>水平面天空（散乱）日射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.GlobalHorizontalRadiation">
            <summary>水平面全天日射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.Latitude">
            <summary>計算地点の緯度（北が正）[degree]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.Longitude">
            <summary>計算地点の経度（東が正）[degree]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.StandardLongitude">
            <summary>標準時を規定する地点の経度（東が正）[degree]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.Revision">
            <summary>編集番号を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.SunSetTime">
            <summary>日没の時刻を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Sun.SunRiseTime">
            <summary>日の出の時刻を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod">
            <summary>直散分離の手法</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Berlage">
            <summary>Berlageの式</summary>
            <remarks>Berlage,Von H.P.:Zur Theorie der Beleuchtung einer horizontalen Flache durch Tageslicht,Meteorologische Zeitschrift, May 1928,pp.174-180</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Matsuo">
            <summary>松尾の式</summary>
            <remarks>松尾陽:日本建築学会論文報告集,快晴時の日射について 日射量に関する研究2,pp.21-24,1960</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Nagata">
            <summary>永田の式</summary>
            <remarks>永田忠彦:晴天空による水平面散乱の日射の式の試案,日本建築学会学術講演梗概集,1978</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.LiuAndJordan">
            <summary>Liu-Jordanの式</summary>
            <remarks>Liu,B.Y.H-Jordan,R.C:The interrelationship and characteristic distribution of direct, diffuse and total solar radiation, solar energy, Vol.4, No.3, 1960</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Udatgawa">
            <summary>宇田川の式</summary>
            <remarks>宇田川光弘,木村建一:水平面全天日射量観測値よりの直達日射量の推定,日本建築学会論文報告集,No.267,pp.83-90,19780530</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Watanabe">
            <summary>渡辺の式</summary>
            <remarks>渡辺俊行:水平面全天日射量の直散分離と傾斜面日射量の推定,日本建築学会論文報告集,No.330,pp.96-108,19830830</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Akasaka">
            <summary>赤坂の式</summary>
            <remarks>H.Akasaka:Model of circumsolar radiation and diffuse sky radiation including cloudy sky, ISES, Solar World Congress, 1991</remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.DiffuseAndDirectNormalRadiationEstimatingMethod.Miki">
            <summary>三木の式</summary>
            <remarks>三木信博:標準気象データの日射直散分離に関する研究 その6 日射直散分離法の提案,日本建築学会学術講演梗概集,pp.857-858,1991</remarks>
        </member>
        <member name="T:Popolo.Utility.Weather.Sun.City">
            <summary>都市</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Aberdeen">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Algiers">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Amsterdam">
            <summary>アムステルダム</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Ankara">
            <summary>アンカラ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Asuncion">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Athens">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Auckland">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Bangkok">
            <summary>バンコク</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Barcelona">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Beijing">
            <summary>北京</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Belem">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Belfast">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Belgrade">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Berlin">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Birmingham">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Bogota">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Bordeaux">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Bremen">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Brisbane">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Bristol">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Brussels">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Bucharest">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Budapest">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.BuenosAires">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Cairo">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Canton">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.CapeTown">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Caracas">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Cayenne">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Chihuahua">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Chongqing">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Copenhagen">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Cordoba">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Dakar">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Djibouti">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Dublin">
            <summary>ダブリン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Durban">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Edinburgh">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Frankfurt">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Georgetown">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Glasgow">
            <summary>グラスゴー</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.GuatemalaCity">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Guayaquil">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Hamburg">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Hammerfest">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Havana">
            <summary>ハバナ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Helsinki">
            <summary>ヘルシンキ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Hobart">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.HongKong">
            <summary>香港</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Iquique">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Irkutsk">
            <summary>イルクーツク</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Jakarta">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Johannesburg">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Kingston">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Kinshasa">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.KualaLumpur">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.LaPaz">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Leeds">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Lima">
            <summary>リマ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Lisbon">
            <summary>リスボン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Liverpool">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.London">
            <summary>ロンドン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Lyons">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Madrid">
            <summary>マドリッド</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Manchester">
            <summary>マンチェスター</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Manila">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Marseilles">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Mazatlan">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Mecca">
            <summary>メッカ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Melbourne">
            <summary>メルボルン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.MexicoCity">
            <summary>メキシコシティ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Milan">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Montevideo">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Moscow">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Munich">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Nagasaki">
            <summary>長崎</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Nagoya">
            <summary>名古屋</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Nairobi">
            <summary>ナイロビ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Nanjing">
            <summary>南京</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Naples">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.NewcastleOnTyne">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Odessa">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Osaka">
            <summary>大阪</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Oslo">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.PanamaCity">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Paramaribo">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Paris">
            <summary>パリ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Perth">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Plymouth">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.PortMoresby">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Prague">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Reykjavík">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.RioDeJaneiro">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Rome">
            <summary>ローマ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Salvador">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Santiago">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.StPetersburg">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.SaoPaulo">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Shanghai">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Singapore">
            <summary>シンガポール</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Sofia">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Stockholm">
            <summary>ストックホルム</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Sydney">
            <summary>シドニー</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Tananarive">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Tokyo">
            <summary>東京</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Tripoli">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Venice">
            <summary>ヴェネチア</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Veracruz">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Vienna">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Vladivostok">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Warsaw">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Wellington">
            <summary></summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sun.City.Zurich">
            <summary>チューリッヒ</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Wall">
            <summary>壁体クラス</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableWall">
            <summary>読み取り専用の壁体</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetOverallHeatTransferCoefficient(System.Boolean)">
            <summary>表面熱伝達率[W/(m^2K)]を取得する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>表面熱伝達率[W/(m^2K)]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetOverallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m^2K)]を取得する</summary>
            <returns>熱貫流率[W/(m^2K)]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetWallTemprature(System.Boolean)">
            <summary>壁面温度[℃]を取得する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>壁面温度[℃]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetHeatStorage(System.Double)">
            <summary>壁体の蓄熱量[kJ]を計算する</summary>
            <param name="temperature1">初期温度[C]</param>
            <returns>壁体の蓄熱量[kJ]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetHeatStorage(System.Double[])">
            <summary>壁体の蓄熱量[kJ]を計算する</summary>
            <param name="temps">初期温度[C]</param>
            <returns>壁体の蓄熱量[kJ]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetTemperatures">
            <summary>温度分布を取得する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetSolAirTemperature(System.Boolean)">
            <summary>相当温度[C]を計算する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>相当温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWall.GetHeatTransferToTube(System.UInt32)">
            <summary>チューブへの熱移動量[W]を計算する</summary>
            <param name="index">チューブが設定されている層の番号</param>
            <returns>チューブへの熱移動量[W]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.SurfaceArea">
            <summary>壁面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.Layers">
            <summary>壁構成を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.AirTemperature1">
            <summary>1側空気温度[℃]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.AirTemperature2">
            <summary>2側空気温度[℃]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.Radiation1">
            <summary>1側の放射量[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.Radiation2">
            <summary>2側の放射量[W/m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.Incline1">
            <summary>1側の傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.Incline2">
            <summary>2側の傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.FPT1">
            <summary>1側のFPTを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.FPT2">
            <summary>2側のFPTを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWall.TimeStep">
            <summary>計算時間間隔[sec]を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.surfaceArea">
            <summary>壁面積[m2]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.wallSurface1">
            <summary>1側壁表面</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.wallSurface2">
            <summary>2側壁表面</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.incline1">
            <summary>1側の傾斜情報（デフォルトでは南向き垂直壁）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.incline2">
            <summary>2側の傾斜情報（デフォルトでは北向き垂直壁）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.wallLayers">
            <summary>壁構成</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.timeStep">
            <summary>計算時間間隔[sec]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.uxMatrix">
            <summary>逆行列</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.cfVector">
            <summary>CFベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.temperatures">
            <summary>内部温度[C]ベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.ux0mMatrix">
            <summary>FI,FO成分ベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.temperaturesFRZ">
            <summary>凍結保存された温度分布ベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.prevSolAirTemp1">
            <summary>最後に計算した際の壁近傍の相当温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.prevSolAirTemp2">
            <summary>最後に計算した際の壁近傍の相当温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.tubes">
            <summary>壁体内に埋め込まれたチューブ</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.lMaterials">
            <summary>潜熱蓄熱材料</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.hasUpdated">
            <summary>Updateメソッドが呼ばれたか否か</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.uMatrix">
            <summary>一時記憶領域</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Wall.hasTubeFlowRateChanged">
            <summary>チューブの流量変更の真偽</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.#ctor(Popolo.Utility.LoadCalculation.ImmutableWallLayers,System.String)">
            <summary>コンストラクタ</summary>
            <param name="wallLayers">壁構成</param>
            <param name="name">壁体名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.#ctor(Popolo.Utility.LoadCalculation.ImmutableWallLayers)">
            <summary>コンストラクタ</summary>
            <param name="wallLayers">壁構成</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.wallSurface_OverallHeatTransferCoefficientChangeEvent(System.Object,System.EventArgs)">
            <summary>壁表面の総合熱伝達率変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.Update">
            <summary>状態を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetHeatTransfer(System.Boolean)">
            <summary>周辺の空気から壁への熱移動量[W]を計算する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>周辺の空気から壁への熱移動量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetWallTemprature(System.Boolean)">
            <summary>壁面温度[℃]を取得する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>壁面温度[℃]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetTemperatures">
            <summary>壁体内部の温度分布を取得する</summary>
            <returns>壁体内部の温度分布</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetSolAirTemperature(System.Boolean)">
            <summary>相当温度[C]を計算する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>相当温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetOverallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m^2K)]を計算する</summary>
            <returns>熱貫流率[W/(m^2K)]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetStaticHeatTransfer">
            <summary>定常状態において壁を通過して表面1から表面2へと向かう熱移動量[W]を計算する</summary>
            <returns>定常状態において壁を通過して表面1から表面2へと向かう熱移動量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetHeatTransferToTube(System.UInt32)">
            <summary>冷温水配管への熱移動量[W]を計算する</summary>
            <param name="index">冷温水配管が埋設されている層の番号</param>
            <returns>冷温水配管への熱移動量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.SetIncline(Popolo.Utility.Weather.ImmutableIncline,System.Boolean)">
            <summary>傾斜を設定する</summary>
            <param name="incline">傾斜面</param>
            <param name="isSide1">1側か否か</param>
            <remarks>裏面は自動で設定される</remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetSurface(System.Boolean)">
            <summary>壁表面オブジェクトを取得する</summary>
            <param name="isSide1">壁面1か否か</param>
            <returns>壁表面オブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.SetOverallHeatTransferCoefficient(System.Double,System.Boolean)">
            <summary>表面熱伝達率[W/(m^2K)]を設定する</summary>
            <param name="hCoef">表面熱伝達率[W/(m^2K)]</param>
            <param name="isSide1">1側か否か</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.SetOverallHeatTransferCoefficient(System.Double,System.Double)">
            <summary>表面熱伝達率[W/(m^2K)]を設定する</summary>
            <param name="hCoef1">1側表面熱伝達率[W/(m^2K)]</param>
            <param name="hCoef2">2側表面熱伝達率[W/(m^2K)]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetOverallHeatTransferCoefficient(System.Boolean)">
            <summary>表面熱伝達率[W/(m^2K)]を取得する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>表面熱伝達率[W/(m^2K)]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.SetConvectiveRate(System.Double,System.Boolean)">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を設定する</summary>
            <param name="convectiveRate">対流熱伝達の割合[-]</param>
            <param name="isSide1">1側か否か</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.SetRadiativeRate(System.Double,System.Boolean)">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]を設定する</summary>
            <param name="radiativeRate">放射熱伝達の割合[-]</param>
            <param name="isSide1">1側か否か</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetConvectiveRate(System.Boolean)">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を取得する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>対流熱伝達の割合[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetRadiativeRate(System.Boolean)">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]を取得する</summary>
            <param name="isSide1">1側か否か</param>
            <returns>放射熱伝達の割合[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.AddTube(Popolo.Utility.LoadCalculation.Tube,System.UInt32)">
            <summary>壁層に配管を埋め込む</summary>
            <param name="tube">配管</param>
            <param name="index">壁層番号（壁体の分割数を加算した番号）</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.RemoveTube(System.UInt32)">
            <summary>壁層から配管外す</summary>
            <param name="index">壁層番号（壁体の分割数を加算した番号）</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.flowRateChangeEvent(System.Object,System.EventArgs)">
            <summary>チューブの流量変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.FreezeState">
            <summary>状態を凍結保存する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.FreezeState(System.Double[]@)">
            <summary>状態を凍結保存する</summary>
            <param name="state">状態を保存する実数値配列</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.DefrostState">
            <summary>状態を解凍復元する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.DefrostState(System.Double[])">
            <summary>状態を解凍復元する</summary>
            <param name="state">状態を示す実数値配列</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.SetLatentHeatStorageMaterial(System.UInt32,Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial)">
            <summary>潜熱蓄熱材料を設定する</summary>
            <param name="layerIndex">潜熱蓄熱材料を設定する壁層番号</param>
            <param name="lMaterial">潜熱蓄熱材料</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.RemoveLatentHeatStorageMaterial(System.UInt32)">
            <summary>潜熱蓄熱材料の設定を解除する</summary>
            <param name="layerIndex">潜熱蓄熱材料の設定を解除する壁層番号</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetLatentHeatStorageMaterialIndex(System.UInt32)">
            <summary>潜熱蓄熱材料の状態番号を取得する</summary>
            <param name="layerIndex">潜熱蓄熱材料が設定されている壁層番号</param>
            <returns>潜熱蓄熱材料の状態番号</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.InitializeTemperature(System.Double)">
            <summary>壁温を初期化する</summary>
            <param name="wallTemperature">壁温[C]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetHeatStorage(System.Double)">
            <summary>壁体の蓄熱量[kJ]を計算する</summary>
            <param name="temperature1">初期温度[C]</param>
            <returns>壁体の蓄熱量[kJ]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.GetHeatStorage(System.Double[])">
            <summary>壁体の蓄熱量[kJ]を計算する</summary>
            <param name="temps">初期温度[C]</param>
            <returns>壁体の蓄熱量[kJ]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.initialize">
            <summary>初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.initializeUXMatrix">
            <summary>UXマトリクスを初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.makeUMatrix">
            <summary>UX行列を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.addTubeCoefToUMatrix">
            <summary>チューブの係数を設定する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.makeUXMatrix">
            <summary>UXマトリクスを作成する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.getPcWp(System.UInt32)">
            <summary>PCWPを計算する</summary>
            <param name="index"></param>
            <returns>PCWP</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.getWp(System.UInt32)">
            <summary>WPを計算する</summary>
            <param name="index"></param>
            <returns>WP</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Wall.updateTemperatures">
            <summary>壁内の温度分布を更新する</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.Wall.FIOChangeEvent">
            <summary>FIおよびFO変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.Wall.AreaChangeEvent">
            <summary>面積変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.FPT1">
            <summary>1側のFPTを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.FPT2">
            <summary>2側のFPTを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.TimeStep">
            <summary>計算時間間隔[sec]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.SurfaceArea">
            <summary>壁面積[m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.Layers">
            <summary>壁構成を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.AirTemperature1">
            <summary>1側の空気温度[℃]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.AirTemperature2">
            <summary>2側の空気温度[℃]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.Radiation1">
            <summary>1側の放射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.Radiation2">
            <summary>2側の放射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.Incline1">
            <summary>1側の傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.Incline2">
            <summary>2側の傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.FI1">
            <summary>FI1を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.FO1">
            <summary>FO1を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.FI2">
            <summary>FI2を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.FO2">
            <summary>FO2を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.CF1">
            <summary>1側のCFを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Wall.CF2">
            <summary>2側のCFを取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Outdoor">
            <summary>屋外</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableOutdoor">
            <summary>読み取り専用の屋外</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.AirState">
            <summary>外気条件を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.Sun">
            <summary>太陽を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.WallSurfaces">
            <summary>壁表面リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.GroundWallSurfaces">
            <summary>地中の壁表面リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.Windows">
            <summary>窓リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.GroundTemperature">
            <summary>地中温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableOutdoor.NocturnalRadiation">
            <summary>夜間放射[W/m2]を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Outdoor.sun">
            <summary>太陽</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Outdoor.airState">
            <summary>外気空気状態</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Outdoor.wallSurfaces">
            <summary>壁表面リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Outdoor.windows">
            <summary>窓リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Outdoor.groundWallSurfaces">
            <summary>地中壁表面リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Outdoor.nocturnalRadiation">
            <summary>夜間放射[W/m2]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.SetWallSurfaceBoundaryState">
            <summary>登録されている壁表面の境界条件を設定する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.AddWallSurface(Popolo.Utility.LoadCalculation.WallSurface)">
            <summary>壁表面を追加する</summary>
            <param name="wallSurface">追加する壁表面</param>
            <returns>追加成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.RemoveWallSurface(Popolo.Utility.LoadCalculation.WallSurface)">
            <summary>壁表面を削除する</summary>
            <param name="wallSurface">削除する壁表面</param>
            <returns>削除成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.AddGroundWallSurface(Popolo.Utility.LoadCalculation.WallSurface)">
            <summary>地中の壁表面を追加する</summary>
            <param name="wallSurface">追加する地中の壁表面</param>
            <returns>追加成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.RemoveGroundWallSurface(Popolo.Utility.LoadCalculation.WallSurface)">
            <summary>地中の壁表面を削除する</summary>
            <param name="wallSurface">削除する地中の壁表面</param>
            <returns>削除成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.AddWindow(Popolo.Utility.LoadCalculation.Window)">
            <summary>窓を追加する</summary>
            <param name="window">追加する窓</param>
            <returns>追加成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.RemoveWindow(Popolo.Utility.LoadCalculation.Window)">
            <summary>窓を削除する</summary>
            <param name="window">削除する窓</param>
            <returns>削除成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.GetRadiationToIncline(Popolo.Utility.Weather.ImmutableIncline,System.Double,System.Double)">
            <summary>斜面に入射する放射量[W/m2]を計算する</summary>
            <param name="incline">斜面</param>
            <param name="albedo">アルベド[-]</param>
            <param name="shadingRate">日影率[-]</param>
            <returns>斜面に入射する放射量[W/m2]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.SetConvectiveRate(System.Double)">
            <summary>登録された壁表面に対流熱伝達の割合を設定する</summary>
            <param name="convectiveRate">対流熱伝達の割合</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Outdoor.SetOverallHeatTransferCoefficient(System.Double,System.Double)">
            <summary>表面の総合熱伝達率[W/(m^2-K)]を設定する</summary>
            <param name="overallHeatTransferCoefficient">表面の総合熱伝達率[W/(m^2-K)]</param>
            <param name="convectiveRate">対流熱伝達の割合(0.0～1.0)[-]</param>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.AirState">
            <summary>外気条件を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.Sun">
            <summary>太陽を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.WallSurfaces">
            <summary>壁表面リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.GroundWallSurfaces">
            <summary>地中の壁表面リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.Windows">
            <summary>窓リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.GroundTemperature">
            <summary>地中温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Outdoor.NocturnalRadiation">
            <summary>夜間放射[W/m2]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.WeatherRecord">
            <summary>気象レコード（気象データの集合体）</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.ImmutableWeatherRecord">
            <summary>読み取り専用気象レコード</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.ImmutableWeatherRecord.GetData(Popolo.Utility.Weather.WeatherRecord.RecordType)">
            <summary>気象データを取得する</summary>
            <param name="rType">気象データの種類</param>
            <returns>気象データ</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableWeatherRecord.DataDTime">
            <summary>気象レコードの日時を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.S_VERSION">
            <summary>シリアライズバージョン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.dateTime">
            <summary>日時データ</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.data">
            <summary>気象データ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.GetEmptyWeatherRecord">
            <summary>空のWeatherRecordを返す</summary>
            <returns>空のWeatherRecord</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.SetData(Popolo.Utility.Weather.WeatherRecord.RecordType,Popolo.Utility.Weather.WeatherData)">
            <summary>気象データを設定する</summary>
            <param name="rType">気象データの種類</param>
            <param name="wData">気象データ</param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.GetData(Popolo.Utility.Weather.WeatherRecord.RecordType)">
            <summary>気象データを取得する</summary>
            <param name="rType">気象データの種類</param>
            <returns>気象データ</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.FillMissingData">
            <summary>存在しないデータを欠測データとして埋める</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.CompareTo(System.Object)">
            <summary>WeatherDataオブジェクトと自身を比較する</summary>
            <param name="target">WeatherDataオブジェクト</param>
            <returns>自身が小さい場合は負、大きい場合は正、等値の場合は0を返す</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherRecord.Clone">
            <summary>WeatherRecordの複製を返す</summary>
            <returns>WeatherRecordの複製</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.WeatherRecord.DataDTime">
            <summary>気象レコードの日時を取得・設定する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.WeatherRecord.RecordType">
            <summary>気象データの種類</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DryBulbTemperature">
            <summary>乾球温度[C(DB)]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.AbsoluteHumidity">
            <summary>絶対湿度[kg/kg(DA)]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DewPointTemperature">
            <summary>露点温度[C(DB)]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.RelativeHumidity">
            <summary>相対湿度[%]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.AtmosphericPressure">
            <summary>大気圧[kPa]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.ExtraterrestrialHorizontalRadiation">
            <summary>大気圏外水平面日射量[W/m2]*</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.ExtraterrestrialDirectNormalRadiation">
            <summary>大気圏外法線面日射量[W/m2]*</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.HorizontalInfraredRadiationFromSky">
            <summary>水平面赤外線放射量[W/m2]*</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.GlobalHorizontalRadiation">
            <summary>水平面全天日射量[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DirectNormalRadiation">
            <summary>法線面直達日射量[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DiffuseHorizontalRadiation">
            <summary>水平面天空日射量[W/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.GlobalHorizontalIlluminance">
            <summary>水平面全天空照度[lux] = 直射 + 天空</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DirectNormalIlluminance">
            <summary>法線面直射日光照度[lux]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DiffuseHorizontalIlluminance">
            <summary>水平面天空照度[lux]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.ZenithLuminance">
            <summary>天頂輝度[Cd/m2]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.WindDirection">
            <summary>風向[degree]（南を0度、北を180度、西を90度、東を-90度とする）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.WindSpeed">
            <summary>風速[m/s]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.TotalSkyCover">
            <summary>雲量（10分比）[-]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.OpaqueSkyCover">
            <summary>完全に日射を遮る雲量[-]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.Visibility">
            <summary>視認距離[km]*</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.CeilingHeight">
            <summary>全天の5/8以上を覆う雲層であり、20,000ＦＴ未満のもののうち地表または水面から最も低い雲層の雲底までの高さ[m]*</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.WeatherCode">
            <summary>天気コード[-]*</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.PrecipitableWater">
            <summary>可降水量[mm]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.AerosolOpticalDepth">
            <summary>大気混濁度[1/1000]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.SnowDepth">
            <summary>降雪量[cm]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.DaysSinceLastSnowfall">
            <summary>最終降雪日からの経過日数[日]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.PrecipitationLevel">
            <summary>降水量[mm]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.Albedo">
            <summary>アルベド[-]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherRecord.RecordType.NocturnalRadiation">
            <summary>夜間放射量[W/m2]</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.SunShade">
            <summary>日除けクラス</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableSunShade">
            <summary>読み取り専用の日除け</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableSunShade.GetShadowRate(Popolo.Utility.Weather.ImmutableSun)">
            <summary>日影面積率[-]を計算する</summary>
            <param name="sun">太陽</param>
            <returns>日影面積率[-]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.Incline">
            <summary>傾斜面を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.SunShadeShape">
            <summary>日除けの種類を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.IsReverse">
            <summary>庇が裏返しか否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.WindowHeight">
            <summary>窓高さ[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.WindowWidth">
            <summary>窓幅[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.Pendent">
            <summary>張り出し幅[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.TopMargin">
            <summary>上部マージン[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.BottomMargin">
            <summary>下部マージン[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.LeftMargin">
            <summary>左側マージン[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableSunShade.RightMargin">
            <summary>右側マージン[m]を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.incline">
            <summary>傾斜面</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.ssShape">
            <summary>日除けの形状</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.isReverse">
            <summary>日除けが裏返しか否か</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.windowHeight">
            <summary>窓高[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.windowWidth">
            <summary>窓幅[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.pendent">
            <summary>張り出し幅[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.topMargin">
            <summary>上部マージン[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.bottomMargin">
            <summary>下部マージン[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.leftMargin">
            <summary>左側マージン[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.rightMargin">
            <summary>右側マージン[m]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.Copy(Popolo.Utility.LoadCalculation.ImmutableSunShade)">
            <summary>日除けをコピーする</summary>
            <param name="sunShade">日除け</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.GetShadowRate(Popolo.Utility.Weather.ImmutableSun)">
            <summary>日影面積率[-]を計算する</summary>
            <param name="sun">太陽</param>
            <returns>日影面積率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeHorizontalSunShade(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>水平庇を作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="leftMargin">左側マージン[m]</param>
            <param name="rightMargin">右側マージン[m]</param>
            <param name="topMargin">上部マージン[m]</param>
            <param name="incline">傾斜面</param>
            <returns>水平庇</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeHorizontalSunShade(System.Double,System.Double,System.Double,System.Double,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>水平庇（無限大長）を作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="topMargin">上部マージン[m]</param>
            <param name="incline">傾斜面</param>
            <returns>水平庇（無限大長）</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeVerticalSunShade(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>袖壁を作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="sideMargin">横側マージン[m]</param>
            <param name="isLeftSide">左側か否か（右の場合はfalse）</param>
            <param name="topMargin">上部マージン[m]</param>
            <param name="bottomMargin">下部マージン[m]</param>
            <param name="incline">傾斜面</param>
            <returns>袖壁</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeVerticalSunShade(System.Double,System.Double,System.Double,System.Double,System.Boolean,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>袖壁（無限長）を作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="sideMargin">横側マージン[m]</param>
            <param name="isLeftSide">左側か否か（右の場合はfalse）</param>
            <param name="incline">傾斜面</param>
            <returns>袖壁（無限長）</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeVerticalSunShade(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>袖壁を作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="sideMargin">横側マージン[m]</param>
            <param name="topMargin">上部マージン[m]</param>
            <param name="bottomMargin">下部マージン[m]</param>
            <param name="incline">傾斜面</param>
            <returns>袖壁</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeVerticalSunShade(System.Double,System.Double,System.Double,System.Double,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>袖壁（無限長）を作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="sideMargin">横側マージン[m]</param>
            <param name="incline">傾斜面</param>
            <returns>袖壁（無限長）</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.SunShade.MakeGridSunShade(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>ルーバーを作成する</summary>
            <param name="windowWidth">窓幅[m]</param>
            <param name="windowHeight">窓高[m]</param>
            <param name="pendent">張り出し幅[m]</param>
            <param name="leftMargin">左側マージン[m]</param>
            <param name="rightMargin">右側マージン[m]</param>
            <param name="topMargin">上部マージン[m]</param>
            <param name="bottomMargin">下部マージン[m]</param>
            <param name="incline">傾斜面</param>
            <returns>ルーバー</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.EmptySunShade">
            <summary>空の日除けを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.Incline">
            <summary>傾斜面を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.SunShadeShape">
            <summary>日除けの種類を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.IsReverse">
            <summary>庇が裏返しか否かを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.WindowHeight">
            <summary>窓高さ[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.WindowWidth">
            <summary>窓幅[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.Pendent">
            <summary>張り出し幅[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.TopMargin">
            <summary>上部マージン[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.BottomMargin">
            <summary>下部マージン[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.LeftMargin">
            <summary>左側マージン[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.SunShade.RightMargin">
            <summary>右側マージン[m]を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.SunShade.Shape">
            <summary>日除けの形状</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.None">
            <summary>無し</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.Horizontal">
            <summary>水平庇</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.LongHorizontal">
            <summary>水平庇（無限大長）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.VerticalLeft">
            <summary>袖壁（左）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.VerticalRight">
            <summary>袖壁（右）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.VerticalBoth">
            <summary>袖壁（両方）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.LongVerticalLeft">
            <summary>袖壁（無限大長:左）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.LongVerticalRight">
            <summary>袖壁（無限大長:右）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.LongVerticalBoth">
            <summary>袖壁（無限大長:両方）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.SunShade.Shape.Grid">
            <summary>ルーバー</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ConstantHeatGain">
            <summary>時間に関わらず一定値をとる発熱要素</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.IHeatGain">
            <summary>発熱要素インターフェース</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.IHeatGain.GetConvectiveHeatGain(Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>熱取得[W]の内、対流成分を取得する</summary>
            <param name="zone">発熱要素が属するゾーン</param>
            <returns>熱取得の対流成分[kW]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.IHeatGain.GetRadiativeHeatGain(Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>熱取得[W]の内、放射成分を取得する</summary>
            <param name="zone">発熱要素が属するゾーン</param>
            <returns>熱取得の放射成分[kW]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.IHeatGain.GetLatentHeatGain(Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>潜熱負荷[W]を取得する</summary>
            <param name="zone">発熱要素が属するゾーン</param>s
            <returns>潜熱負荷[W]</returns>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.ConstantHeatGain.convectiveHeatGain">
            <summary>熱取得の対流成分[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.ConstantHeatGain.radiativeHeatGain">
            <summary>熱取得の放射成分[W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.ConstantHeatGain.latentHeatGain">
            <summary>潜熱負荷[W]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ConstantHeatGain.#ctor(System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="convectiveHeatGain">熱取得の対流成分[W]</param>
            <param name="radiativeHeatGain">熱取得の放射成分[W]</param>
            <param name="latentHeatGain">潜熱負荷[W]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ConstantHeatGain.GetConvectiveHeatGain(Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>熱取得[W]の内、対流成分を取得する</summary>
            <param name="zone">発熱要素が属するゾーン</param>
            <returns>熱取得の対流成分[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ConstantHeatGain.GetRadiativeHeatGain(Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>熱取得[W]の内、放射成分を取得する</summary>
            <param name="zone">発熱要素が属するゾーン</param>
            <returns>熱取得の放射成分[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ConstantHeatGain.GetLatentHeatGain(Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>潜熱負荷[W]を取得する</summary>
            <param name="zone">発熱要素が属するゾーン</param>
            <returns>潜熱負荷[W]</returns>
        </member>
        <member name="T:Popolo.Utility.Weather.Converter.EESConverter">
            <summary>EESLISM用気象データを変換する</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.ToPWeatherData(System.String,System.Boolean@)">
            <summary>ファイルを元にWeatherDataTableを構成する</summary>
            <param name="filePath">読み取りファイルのパス</param>
            <param name="success">読み取り成功の真偽</param>
            <returns>構成されたPWeatherDataオブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.FromPWeather(Popolo.Utility.Weather.WeatherDataTable,System.String,System.Boolean@)">
            <summary>PWeatherDataをファイルに書き出す</summary>
            <param name="wdTable">WeatherDataTableオブジェクト</param>
            <param name="filePath">書き出しファイルへのパス</param>
            <param name="success">書き出し成功の真偽</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.MakeSupwData(Popolo.Utility.Weather.WeatherDataTable)">
            <summary>supwデータのための文字列を作成する</summary>
            <param name="wdTable">気象データテーブル</param>
            <returns>supwデータのための文字列</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.convertTo3WordString(System.Double)">
            <summary>実数を3桁空白右揃えで表現する</summary>
            <param name="value">実数</param>
            <returns>文字列</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.convertToDayOfWeekCode(System.DayOfWeek)">
            <summary>曜日を曜日コードに変換する</summary>
            <param name="dw">曜日</param>
            <returns>曜日コード</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.convertToWindDirectionCode(System.Double)">
            <summary>風向を風向コードに変換する</summary>
            <param name="windDirection">風向</param>
            <returns>風向コード（16方位）</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.convertFromWindDirectionCode(System.Int32)">
            <summary>風向コードを風向[degree]に変換する</summary>
            <param name="windowDirectionCode">風向コード（16方位）</param>
            <returns>風向[degree]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.EESConverter.output24Data(System.IO.StreamWriter,Popolo.Utility.Weather.ImmutableWeatherRecord[])">
            <summary>24時間分のデータを書き出す</summary>
            <param name="sWriter">書き出しストリーム</param>
            <param name="wRecord">24時間分のデータ</param>
        </member>
        <member name="P:Popolo.Utility.Weather.Converter.EESConverter.Name">
            <summary>気象データ名称を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Property.ImmutableMoistAir">
            <summary>読み取り専用湿り空気</summary>
        </member>
        <member name="M:Popolo.Utility.Property.ImmutableMoistAir.CopyTo(Popolo.Utility.Property.MoistAir)">
            <summary>空気状態をコピーする</summary>
            <param name="air">コピー先の湿り空気オブジェクト</param>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.AtmosphericPressure">
            <summary>大気圧[kPa]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.DryBulbTemperature">
            <summary>乾球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.WetBulbTemperature">
            <summary>湿球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.AbsoluteHumidity">
            <summary>絶対湿度[kg/kg(DA)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.RelativeHumidity">
            <summary>相対湿度[%]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.Enthalpy">
            <summary>エンタルピー[kJ/kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.ImmutableMoistAir.SpecificVolume">
            <summary>比容積[m3/kg]を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.MoistAIr_DrybulbTemperature_Error1">
            <summary>
              Dry-Bulb Temperature out of calculation range に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.MoistAIr_RelativeHumidity_Error1">
            <summary>
              Can not set value of relative humidity under 0 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName01">
            <summary>
              Resting:Sleeping に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName02">
            <summary>
              Resting:Reclining に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName03">
            <summary>
              Resting:Seated, quiet に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName04">
            <summary>
              Resting:Standing, relaxed に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName05">
            <summary>
              Walking:0.9 m/s, 3.2 km/h, 2.0 mph に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName06">
            <summary>
              Walking:1.2 m/s, 4.3 km/h, 2.7 mph に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName07">
            <summary>
              Walking:1.8 m/s, 6.8 km/h, 4.2 mph に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName08">
            <summary>
              Office Activities:Seated, reading, or writing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName09">
            <summary>
              Office Activities:Typing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName10">
            <summary>
              Office Activities:Filing, seated に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName11">
            <summary>
              Office Activities:Filing, standing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName12">
            <summary>
              Office Activities:Walking about に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName13">
            <summary>
              Office Activities:Lifting/packing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName14">
            <summary>
              Driving/Flying:Automobile に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName15">
            <summary>
              Driving/Flying:Aircraft, routine に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName16">
            <summary>
              Driving/Flying:Aircraft, instrument landing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName17">
            <summary>
              Driving/Flying:Aircraft, combat に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName18">
            <summary>
              Driving/Flying:Heavy vehicle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName19">
            <summary>
              Miscellaneous Occupational Activities:Cooking に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName20">
            <summary>
              Miscellaneous Occupational Activities:House cleaning に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName21">
            <summary>
              Miscellaneous Occupational Activities:Seated, heavy limb movement に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName22">
            <summary>
              Miscellaneous Occupational Activities:Machine work:sawing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName23">
            <summary>
              Miscellaneous Occupational Activities:Machine work:light に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName24">
            <summary>
              Miscellaneous Occupational Activities:Machine work:heavy に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName25">
            <summary>
              Miscellaneous Occupational Activities:Handling 50 kg (100 lb) bags に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName26">
            <summary>
              Miscellaneous Occupational Activities:Pick and shovel work に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName27">
            <summary>
              Miscellaneous Leisure Activities:Dancing, social に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName28">
            <summary>
              Miscellaneous Leisure Activities:Calisthenics/exercise に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName29">
            <summary>
              Miscellaneous Leisure Activities:Tennis, single に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName30">
            <summary>
              Miscellaneous Leisure Activities:Basketball に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Properties.Resources.ThermalComfort_TaskName31">
            <summary>
              Miscellaneous Leisure Activities:Wrestling, competitive に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Incline">
            <summary>傾斜面</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.ImmutableIncline">
            <summary>読み取り専用傾斜面</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.ImmutableIncline.GetTanPhiAndGamma(Popolo.Utility.Weather.ImmutableSun,System.Double@,System.Double@)">
            <summary>プロファイル角および傾斜面の法線を基準とした太陽方位角の正接を求める</summary>
            <param name="sun">太陽</param>
            <param name="tanPhi">プロファイル角の正接</param>
            <param name="tanGamma">傾斜面の法線を基準とした太陽方位角の正接</param>
        </member>
        <member name="M:Popolo.Utility.Weather.ImmutableIncline.GetDirectSolarRadiationRate(Popolo.Utility.Weather.ImmutableSun)">
            <summary>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]を計算する</summary>
            <param name="sun">太陽</param>
            <returns>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableIncline.Alpha">
            <summary>方位角[radian]（南を0、東を負、西を正とする）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableIncline.Beta">
            <summary>傾斜角[radian]（水平面を0、垂直面を1/2πとする）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableIncline.DirectionCosineZ">
            <summary>Z軸に関する方向余弦を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableIncline.DirectionCosineSN">
            <summary>南北軸に関する方向余弦を取得する（南向きを正とする）</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableIncline.DirectionCosineWE">
            <summary>東西軸に関する方向余弦を取得する（西向きを正とする）</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableIncline.GeometricFactor">
            <summary>天空への形態係数[-]を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.alpha">
            <summary>方位角および傾斜角</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.beta">
            <summary>方位角および傾斜角</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.ws">
            <summary>方向余弦</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.ww">
            <summary>方向余弦</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.wz">
            <summary>方向余弦</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.geometricFactor">
            <summary>天空への形態係数[-]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.sinAlpha">
            <summary>正弦、余弦</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.sinBeta">
            <summary>正弦、余弦</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.cosAlpha">
            <summary>正弦、余弦</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.cosBeta">
            <summary>正弦、余弦</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.#ctor(System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="alpha">方位角[radian]（南を0、東を負、西を正とする）</param>
            <param name="beta">傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.#ctor(Popolo.Utility.Weather.Incline.Orientation,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="ori">方位</param>
            <param name="beta">傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.#ctor(Popolo.Utility.Weather.ImmutableIncline)">
            <summary>コピーコンストラクタ</summary>
            <param name="incline">傾斜面</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.Copy(Popolo.Utility.Weather.ImmutableIncline)">
            <summary>傾斜面情報をコピーする</summary>
            <param name="incline">傾斜面オブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.Initialize(System.Double,System.Double)">
            <summary>初期化処理</summary>
            <param name="alpha">方位角[radian]（南を0、東を負、西を正とする）</param>
            <param name="beta">傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.Initialize(Popolo.Utility.Weather.Incline.Orientation,System.Double)">
            <summary>初期化処理</summary>
            <param name="ori">方位</param>
            <param name="beta">傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.Reverse">
            <summary>向きを逆転させる</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetTanPhiAndGamma(Popolo.Utility.Weather.ImmutableSun,System.Double@,System.Double@)">
            <summary>プロファイル角および傾斜面の法線を基準とした太陽方位角の正接を求める</summary>
            <param name="sun">太陽</param>
            <param name="tanPhi">プロファイル角の正接</param>
            <param name="tanGamma">傾斜面の法線を基準とした太陽方位角の正接</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetDirectSolarRadiationRate(Popolo.Utility.Weather.ImmutableSun)">
            <summary>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]を計算する</summary>
            <param name="sun">太陽</param>
            <returns>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetGeometricFactorOfIncline(System.Double)">
            <summary>天空に対する傾斜面の形態係数[-]を計算する</summary>
            <param name="beta">傾斜面の傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
            <returns>天空に対する傾斜面の形態係数[-]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetDirectionCosine(System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>傾斜面の法線の方向余弦を計算する</summary>
            <param name="alpha">方位角[radian]（南を0、東を負、西を正とする）</param>
            <param name="beta">傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
            <param name="wz">垂直成分</param>
            <param name="ws">南北軸の成分（南向きを正とする）</param>
            <param name="ww">東西軸の成分（西向きを正とする）</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetDirectSolarRadiationRateToIncline(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]を計算する</summary>
            <param name="wz">傾斜面法線の方向余弦の垂直成分</param>
            <param name="ws">傾斜面法線の方向余弦の南北軸の成分（南向きを正とする）</param>
            <param name="ww">傾斜面法線の方向余弦の東西軸の成分（西向きを正とする）</param>
            <param name="altitude">太陽高度[radian]</param>
            <param name="orientation">太陽方位角[radian]</param>
            <returns>傾斜面に対する太陽光線入射角の余弦cosθ[-]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetDirectSolarRadiationRateToIncline(System.Double,System.Double,System.Double,System.Double)">
            <summary>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]を計算する</summary>
            <param name="alpha">方位角[radian]（南を0、東を負、西を正とする）</param>
            <param name="beta">傾斜角[radian]（水平面を0、垂直面を1/2πとする）</param>
            <param name="altitude">太陽高度[radian]</param>
            <param name="orientation">太陽方位角[radian]</param>
            <returns>傾斜面に対する太陽光線入射角の余弦cosθ[-]</returns>
            <remarks>方位角を直接に入力するメソッドの方が高速</remarks>
        </member>
        <member name="M:Popolo.Utility.Weather.Incline.GetDirectSolarRadiationRateToIncline(Popolo.Utility.Weather.ImmutableSun,Popolo.Utility.Weather.ImmutableIncline)">
            <summary>傾斜面の法線に対する太陽光線入射角の余弦cosθ[-]を計算する</summary>
            <param name="sun">太陽</param>
            <param name="incline">傾斜面</param>
            <returns>傾斜面に対する太陽光線入射角の余弦cosθ[-]</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.Incline.Alpha">
            <summary>方位角[radian]（南を0、東を負、西を正とする）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Incline.Beta">
            <summary>傾斜角[radian]（水平面を0、垂直面を1/2πとする）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Incline.DirectionCosineZ">
            <summary>Z軸に関する方向余弦を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Incline.DirectionCosineSN">
            <summary>南北軸に関する方向余弦を取得する（南向きを正とする）</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Incline.DirectionCosineWE">
            <summary>東西軸に関する方向余弦を取得する（西向きを正とする）</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Incline.GeometricFactor">
            <summary>天空への形態係数[-]を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Incline.Orientation">
            <summary>既定義の方位</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.S">
            <summary>南</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.SSW">
            <summary>南南西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.SW">
            <summary>南西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.WSW">
            <summary>西南西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.W">
            <summary>西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.WNW">
            <summary>西北西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.NW">
            <summary>北西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.NNW">
            <summary>北北西</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.N">
            <summary>北</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.NNE">
            <summary>北北東</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.NE">
            <summary>北東</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.ENE">
            <summary>東北東</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.E">
            <summary>東</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.ESE">
            <summary>東南東</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.SE">
            <summary>南東</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Incline.Orientation.SSE">
            <summary>南南東</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WindowSurface">
            <summary>窓表面クラス</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WindowSurface.window">
            <summary>壁オブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WindowSurface.isOutside">
            <summary>外部か否か</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WindowSurface.albedo">
            <summary>アルベド[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WindowSurface.convectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WindowSurface.radiativeRate">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WindowSurface.#ctor(Popolo.Utility.LoadCalculation.Window,System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="window">壁オブジェクト</param>
            <param name="isOutside">外部か否か</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WindowSurface.window_FIOChangeEvent(System.Object,System.EventArgs)">
            <summary>ガラスのFIおよびFO変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WindowSurface.window_AreaChangeEvent(System.Object,System.EventArgs)">
            <summary>窓面積変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WindowSurface.GetHeatTransfer">
            <summary>周辺の空気から窓への熱移動量[W]を計算する</summary>
            <returns>周辺の空気から窓への熱移動量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WindowSurface.GetSolAirTemperature">
            <summary>放射[W/m2]を考慮した相当温度[C]を計算する</summary>
            <returns>相当温度[C]</returns>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.WindowSurface.FIOChangeEvent">
            <summary>FIおよびFO変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.WindowSurface.AreaChangeEvent">
            <summary>面積変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.FacingZone">
            <summary>面している空間を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.WindowBody">
            <summary>窓オブジェクト（読み取り専用）を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.Name">
            <summary>窓名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.IsOutside">
            <summary>外表面か否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.Incline">
            <summary>傾斜面情報を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.Temperature">
            <summary>表面温度[℃]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.FI">
            <summary>FIを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.FO">
            <summary>FOを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.CF">
            <summary>CFを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.AirTemperature">
            <summary>壁近傍の空気温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.Radiation">
            <summary>壁近傍の放射量[W/m2]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.OverallHeatTransferCoefficient">
            <summary>表面総合熱伝達率[W/(m^2K)]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.ShortWaveEmissivity">
            <summary>短波長の放射率[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.LongWaveEmissivity">
            <summary>長波長の放射率[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.Area">
            <summary>面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.Albedo">
            <summary>アルベド[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.ConvectiveRate">
            <summary>総合熱伝達率[W/m2-K]のうち、対流熱伝達の割合[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.RadiativeRate">
            <summary>総合熱伝達率[W/m2-K]のうち、放射熱伝達の割合[-]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.OtherSideSurface">
            <summary>逆側の表面を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WindowSurface.FPT">
            <summary>FPTを取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Room">
            <summary>室</summary>
            <remarks>
            壁表面の相互放射を考慮する1以上のゾーンのまとまり。
            壁体の両面が同一のRoomに属してはならない。
            </remarks>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableRoom">
            <summary>読み取り専用Room</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow)">
            <summary>窓面の短波長放射成分入射比率[-]を取得する</summary>
            <param name="window">窓面</param>
            <returns>窓面の短波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow)">
            <summary>窓面の長波長放射成分入射比率[-]を取得する</summary>
            <param name="window">窓面</param>
            <returns>窓面の長波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>短波長放射成分入射比率[-]を取得する</summary>
            <param name="surface">表面</param>
            <returns>短波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>長波長放射成分入射比率[-]を取得する</summary>
            <param name="surface">表面</param>
            <returns>長波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetRadiativeHeatTransferRate(Popolo.Utility.LoadCalculation.ISurface,Popolo.Utility.LoadCalculation.ISurface)">
            <summary>表面1から表面2への放射熱伝達比率[-]を取得する</summary>
            <param name="surface1">表面1</param>
            <param name="surface2">表面2</param>
            <returns>表面1から表面2への放射熱伝達比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.HasSurface(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>指定の表面を保持しているか否かを返す</summary>
            <param name="surface">表面</param>
            <returns>保持しているか否か</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetSurface(System.UInt32)">
            <summary>表面を取得する</summary>
            <param name="index">表面の番号</param>
            <returns>表面</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetSurface">
            <summary>表面リストを取得する</summary>
            <returns>表面リスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetZone(System.UInt32)">
            <summary>ゾーンを取得する</summary>
            <param name="index">ゾーンの番号</param>
            <returns>ゾーン</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.GetZone">
            <summary>ゾーンリストを取得する</summary>
            <returns>ゾーンリスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.IntegrateRadiativeHeatGain(System.Boolean)">
            <summary>室の放射熱取得[W]を積算する</summary>
            <param name="isShortWave">短波長放射か否か</param>
            <returns>室の放射熱取得[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableRoom.IntegrateConvectiveHeatGain">
            <summary>室の対流熱取得[W]を積算する</summary>
            <returns>室の対流熱取得[W]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableRoom.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableRoom.SurfaceNumber">
            <summary>壁表面の数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableRoom.ZoneNumber">
            <summary>ゾーンの数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableRoom.TransmissionHeatLossFromWindow">
            <summary>窓からの透過日射損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableRoom.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.phi">
            <summary>放射熱伝達比率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.zones">
            <summary>ゾーンリスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.surfaces">
            <summary>表面リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.shortWaveRadiationToSurface">
            <summary>表面への短波長放射成分入射比率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.longWaveRadiationToSurface">
            <summary>表面への長波長放射成分入射比率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.shortWaveRadiationRate">
            <summary>表面への短波長放射成分入射比率[-]：合算して1.0になるように調整済み</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.Room.longWaveRadiationRate">
            <summary>表面への短波長放射成分入射比率[-]：合算して1.0になるように調整済み</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.#ctor(Popolo.Utility.LoadCalculation.Zone[])">
            <summary>コンストラクタ</summary>
            <param name="zones">ゾーンリスト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.#ctor(Popolo.Utility.LoadCalculation.Zone[],System.String)">
            <summary>コンストラクタ</summary>
            <param name="zones">ゾーンリスト</param>
            <param name="name">室名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.initialize(Popolo.Utility.LoadCalculation.Zone[])">
            <summary>初期化する</summary>
            <param name="zones">ゾーンリスト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.Room_AreaChangeEvent(System.Object,System.EventArgs)">
            <summary>面積変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.setRadiationToSurface">
            <summary>放射成分を表面に設定する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.SetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow,System.Double)">
            <summary>窓面の短波長放射成分入射比率[-]を設定する</summary>
            <param name="window">窓面</param>
            <param name="rate">窓面の短波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow)">
            <summary>窓面の短波長放射成分入射比率[-]を取得する</summary>
            <param name="window">窓面</param>
            <returns>窓面の短波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.SetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow,System.Double)">
            <summary>窓面の長波長放射成分入射比率[-]を設定する</summary>
            <param name="window">窓面</param>
            <param name="rate">窓面の長波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ImmutableWindow)">
            <summary>窓面の長波長放射成分入射比率[-]を取得する</summary>
            <param name="window">窓面</param>
            <returns>窓面の長波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.SetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface,System.Double)">
            <summary>短波長放射成分入射比率[-]を設定する</summary>
            <param name="surface">表面</param>
            <param name="rate">短波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetShortWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>短波長放射成分入射比率[-]を取得する</summary>
            <param name="surface">表面</param>
            <returns>短波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.SetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface,System.Double)">
            <summary>長波長放射成分入射比率[-]を設定する</summary>
            <param name="surface">表面</param>
            <param name="rate">長波長放射成分入射比率[-]</param>
            <remarks>
            室内にある他の窓や壁の設定値と比較しながらプログラム内部で0～1の範囲に調整される。
            デフォルトでは面積比が設定される。
            </remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetLongWaveRadiationRate(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>長波長放射成分入射比率[-]を取得する</summary>
            <param name="surface">表面</param>
            <returns>長波長放射成分入射比率[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.initializeShortWaveRadiationRate">
            <summary>短波長放射成分入射比率[-]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.initializeLongWaveRadiationRate">
            <summary>長波長放射成分入射比率[-]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetRadiativeHeatTransferRate(Popolo.Utility.LoadCalculation.ISurface,Popolo.Utility.LoadCalculation.ISurface)">
            <summary>表面1から表面2への放射熱交換係数[-]を取得する</summary>
            <param name="surface1">表面1</param>
            <param name="surface2">表面2</param>
            <returns>表面1から表面2への放射熱交換係数[-]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.SetRadiativeHeatTransferRate(Popolo.Utility.LoadCalculation.ISurface,Popolo.Utility.LoadCalculation.ISurface,System.Double)">
            <summary>表面1から表面2への放射熱交換係数[-]を設定する</summary>
            <param name="surface1">表面1</param>
            <param name="surface2">表面2</param>
            <param name="rate">表面1から表面2への放射熱交換係数[-]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.HasSurface(Popolo.Utility.LoadCalculation.ISurface)">
            <summary>指定の表面を保持しているか否かを返す</summary>
            <param name="surface">表面</param>
            <returns>保持しているか否か</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.getSurface(System.UInt32)">
            <summary>表面を取得する</summary>
            <param name="index">表面の番号</param>
            <returns>表面</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.getSurface">
            <summary>表面リストを取得する</summary>
            <returns>表面リスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetSurface(System.UInt32)">
            <summary>表面を取得する</summary>
            <param name="index">表面の番号</param>
            <returns>表面</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetSurface">
            <summary>表面リストを取得する</summary>
            <returns>表面リスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.getZone(System.UInt32)">
            <summary>ゾーンを取得する</summary>
            <param name="index">ゾーンの番号</param>
            <returns>ゾーン</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.getZone">
            <summary>ゾーンリストを取得する</summary>
            <returns>ゾーンリスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetZone(System.UInt32)">
            <summary>ゾーンを取得する</summary>
            <param name="index">ゾーンの番号</param>
            <returns>ゾーン</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.GetZone">
            <summary>ゾーンリストを取得する</summary>
            <returns>ゾーンリスト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.IntegrateRadiativeHeatGain(System.Boolean)">
            <summary>室の放射熱取得[W]を積算する</summary>
            <param name="isShortWave">短波長放射か否か</param>
            <returns>室の放射熱取得[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.IntegrateConvectiveHeatGain">
            <summary>室の対流熱取得[W]を積算する</summary>
            <returns>室の対流熱取得[W]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Room.SetCurrentDateTime(System.DateTime)">
            <summary>現在の日時を設定する</summary>
            <param name="dTime">現在の日時</param>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Room.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Room.SurfaceNumber">
            <summary>壁表面の数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Room.ZoneNumber">
            <summary>ゾーンの数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Room.TransmissionHeatLossFromWindow">
            <summary>窓からの透過日射損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Room.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Converter.TMY1Converter">
            <summary>TMY1気象データを変換する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Converter.TMY1Converter.rByte">
            <summary>データの読み取りに利用するバイト列</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.TMY1Converter.ToPWeatherData(System.String,System.Boolean@)">
            <summary>ファイルを元にWeatherDataTableを構成する</summary>
            <param name="filePath">読み取りファイルのパス</param>
            <param name="success">読み取り成功の真偽</param>
            <returns>構成されたPWeatherDataオブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.TMY1Converter.FromPWeather(Popolo.Utility.Weather.WeatherDataTable,System.String,System.Boolean@)">
            <summary>PWeatherDataをファイルに書き出す</summary>
            <param name="wdTable">WeatherDataTableオブジェクト</param>
            <param name="filePath">書き出しファイルへのパス</param>
            <param name="success">書き出し成功の真偽</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.TMY1Converter.getDSource1(System.String)">
            <summary>データソースを取得する</summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="P:Popolo.Utility.Weather.Converter.TMY1Converter.Name">
            <summary>気象データ名称を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.LocationInformation">
            <summary>気象地点情報</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.ImmutableLocation">
            <summary>読み取り専用気象地点情報</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableLocation.Name">
            <summary>地点名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableLocation.Latitude">
            <summary>緯度[deg]を取得する</summary>
            <remarks>
            南が負、北が正
            -90~90
            </remarks>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableLocation.Longitude">
            <summary>経度[deg]を取得する</summary>
            <remarks>
            西が負、東が正
            -180~180
            </remarks>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableLocation.Elevation">
            <summary>海抜[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableLocation.TimeZone">
            <summary>時間帯を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.S_VERSION">
            <summary>シリアライズバージョン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.id">
            <summary>ID</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.name">
            <summary>地点名称</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.eName">
            <summary>英語名称</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.latitude">
            <summary>緯度[degree]（南が負、北が正）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.longitude">
            <summary>経度[degree]（西が負、東が正）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.longitudeAtStandardTime">
            <summary>標準時の経度[degree]（西が負、東が正）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.elevation">
            <summary>海抜[m]</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.LocationInformation.timeZone">
            <summary>時間帯</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.LocationInformation.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.LocationInformation.#ctor(System.Int32,System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="id">ID</param>
            <param name="name">名称</param>
            <param name="eName">英語名称</param>
            <param name="latitude">緯度[degree]</param>
            <param name="longitude">経度[degree]</param>
            <param name="longitudeAtStandardTime">標準時での経度[deg]</param>
            <param name="elevation">海抜[m]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.LocationInformation.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.LocationInformation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.LocationInformation.Clone">
            <summary>Locationの複製を返す</summary>
            <returns>Locationの複製</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.ID">
            <summary>地点IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.Name">
            <summary>地点名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.EnglishName">
            <summary>英語地点名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.Latitude">
            <summary>緯度[deg]を設定・取得する</summary>
            <remarks>
            南が負、北が正
            -90~90
            </remarks>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.Longitude">
            <summary>経度[deg]を設定・取得する</summary>
            <remarks>
            西が負、東が正
            -180~180
            </remarks>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.LongitudeAtStandardTime">
            <summary>標準時での経度[deg]を設定・取得する</summary>
            <remarks>
            西が負、東が正
            -180~180
            </remarks>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.Elevation">
            <summary>海抜[m]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.LocationInformation.TimeZone">
            <summary>時間帯を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Control.DaysEditor">
            <summary>曜日定義編集コントロール</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.DaysEditor.days">
            <summary>編集中のSeasonsオブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.DaysEditor.initializing">
            <summary>初期化中か否かのフラグ</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.DaysEditor.editable">
            <summary>編集可能か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.SetDays(Popolo.Utility.Schedule.Days)">
            <summary>Daysオブジェクトを設定する</summary>
            <param name="days">Daysオブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.days_NameChangeEvent(System.Object,System.EventArgs)">
            <summary>名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.days_DayChangeEvent(System.Object,Popolo.Utility.Schedule.DaysEventArgs)">
            <summary>曜日グループ変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.tbxDaysName_TextChanged(System.Object,System.EventArgs)">
            <summary>Days名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.tbxGroupName_TextChanged(System.Object,System.EventArgs)">
            <summary>グループ名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.updateControl">
            <summary>コントロールを更新する</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.DaysEditor.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.DaysEditor.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.DaysEditor.EdittingDays">
            <summary>編集中のDaysオブジェクトを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.DaysEditor.Editable">
            <summary>編集可能か否かを取得・設定する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs">
            <summary>節点接続イベント情報格納クラス</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.node1">
            <summary>節点1</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.node2">
            <summary>節点2</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.channel">
            <summary>流路</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.#ctor(Popolo.Utility.FluidNetwork.ImmutableNode,Popolo.Utility.FluidNetwork.ImmutableNode,Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>コンストラクタ</summary>
            <param name="node1">節点1</param>
            <param name="node2">節点2</param>
            <param name="channel">流路</param>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.Node1">
            <summary>節点1を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.Node2">
            <summary>節点2を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.NodeConnectionEventArgs.Connector">
            <summary>流路を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.NodeEventArgs">
            <summary>節点関連のイベント情報格納クラス</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.NodeEventArgs.node">
            <summary>節点1</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.NodeEventArgs.#ctor(Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>コンストラクタ</summary>
            <param name="node">節点</param>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.NodeEventArgs.Node">
            <summary>節点を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Circuit">
            <summary>回路網クラス</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.ImmutableCircuit">
            <summary>読み取り専用回路網</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableCircuit.GetChannel(System.Int32)">
            <summary>流路を取得する</summary>
            <param name="channelIndex">流路番号</param>
            <returns>流路</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableCircuit.GetChannels">
            <summary>流路リストを取得する</summary>
            <returns>流路リスト</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableCircuit.GetNode(System.Int32)">
            <summary>節点を取得する</summary>
            <param name="nodeIndex">節点番号</param>
            <returns>節点</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableCircuit.GetNodes">
            <summary>節点リストを取得する</summary>
            <returns>節点リスト</returns>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableCircuit.ID">
            <summary>IDを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableCircuit.ChannelsNumber">
            <summary>流路の数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableCircuit.NodesNumber">
            <summary>節点の数を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Circuit.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Circuit.channels">
            <summary>流路リスト</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Circuit.nodes">
            <summary>節点リスト</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.GetChannel(System.Int32)">
            <summary>流路を取得する</summary>
            <param name="channelIndex">流路番号</param>
            <returns>流路</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.GetChannels">
            <summary>流路リストを取得する</summary>
            <returns>流路リスト</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.getChannel(Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>流路を返す</summary>
            <param name="channel">読み取り専用流路</param>
            <returns>流路</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.GetNode(System.Int32)">
            <summary>節点を取得する</summary>
            <param name="nodeIndex">節点番号</param>
            <returns>節点</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.GetNodes">
            <summary>節点リストを取得する</summary>
            <returns>節点リスト</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.AddNode(Popolo.Utility.FluidNetwork.Node)">
            <summary>節点を追加する</summary>
            <param name="node">追加する節点</param>
            <returns>追加した節点（Clone処理を行うため<paramref name="node"/>とは異なる）</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.RemoveNode(Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>節点を削除する</summary>
            <param name="node">節点</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.getNode(Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>節点を返す</summary>
            <param name="node">読み取り専用節点</param>
            <returns>節点</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.SetPotential(System.Double,Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>節点にエネルギーを設定する</summary>
            <param name="potential">エネルギー</param>
            <param name="node">節点</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.SetPotential(System.Double,System.Int32)">
            <summary>節点にエネルギーを設定する</summary>
            <param name="potential">エネルギー</param>
            <param name="nodeIndex">節点番号</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.SetExternalFlow(System.Double,Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>外部の系への流出流量を節点に設定する</summary>
            <param name="externalFlow">外部の系への流出流量</param>
            <param name="node">節点</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.SetExternalFlow(System.Double,System.Int32)">
            <summary>外部の系への流出流量を節点に設定する</summary>
            <param name="externalFlow">外部の系への流出流量</param>
            <param name="nodeIndex">節点番号</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.SetBoundaryNode(System.Boolean,Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>境界条件ノードか否かを設定する</summary>
            <param name="isBoundaryNode">境界条件ノードか否か</param>
            <param name="node">節点</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.SetBoundaryNode(System.Boolean,System.Int32)">
            <summary>境界条件ノードか否かを設定する</summary>
            <param name="isBoundaryNode">境界条件ノードか否か</param>
            <param name="nodeIndex">節点番号</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.getNodeIndex(Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>節点の番号を返す</summary>
            <param name="node">節点オブジェクト</param>
            <returns>節点の番号</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.ConnectNodes(Popolo.Utility.FluidNetwork.ImmutableNode,Popolo.Utility.FluidNetwork.ImmutableNode,Popolo.Utility.FluidNetwork.Channel)">
            <summary>節点を接続する</summary>
            <param name="node1">節点1</param>
            <param name="node2">節点2</param>
            <param name="channel">接続に使用する流路</param>
            <returns>接続した流路（Clone処理を行うため<paramref name="channel"/>とは異なる）</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.DissconnectNodes(Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>節点を切断する</summary>
            <param name="channel">接点を接続している流路</param>
            <returns>切断成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Circuit.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="E:Popolo.Utility.FluidNetwork.Circuit.NodeConnectEvent">
            <summary>節点接続イベント</summary>
        </member>
        <member name="E:Popolo.Utility.FluidNetwork.Circuit.NodeDisConnectEvent">
            <summary>節点切断イベント</summary>
        </member>
        <member name="E:Popolo.Utility.FluidNetwork.Circuit.NodeAddEvent">
            <summary>節点追加イベント</summary>
        </member>
        <member name="E:Popolo.Utility.FluidNetwork.Circuit.NodeRemoveEvent">
            <summary>節点削除イベント</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Circuit.ID">
            <summary>IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Circuit.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Circuit.ChannelsNumber">
            <summary>流路の数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Circuit.NodesNumber">
            <summary>節点の数を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Circuit.NodeConnectEventHandler">
            <summary>節点接続イベントハンドラ</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Circuit.NodeDisConnectEventHandler">
            <summary>節点切断イベントハンドラ</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Circuit.NodeAddEventHandler">
            <summary>節点追加イベントハンドラ</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Circuit.NodeRemoveEventHandler">
            <summary>節点削除イベントハンドラ</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial">
            <summary>潜熱蓄熱材料</summary>
            <remarks>温度区間に応じて熱伝導率と容積比熱が変化する材料</remarks>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.materials">
            <summary>蓄熱材料（特定温度区間）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.currentLHMateral">
            <summary>現在の蓄熱材料</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.#ctor(System.Double,Popolo.Utility.LoadCalculation.WallMaterial)">
            <summary>コンストラクタ</summary>
            <param name="upperTemperature">温度上限[C]</param>
            <param name="material">壁材料</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.AddMaterial(System.Double,Popolo.Utility.LoadCalculation.ImmutableWallMaterial)">
            <summary>壁材料を追加する</summary>
            <param name="upperTemperature">温度上限[C]</param>
            <param name="material">壁材料</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.GetMaterial(System.Double)">
            <summary>特定の温度区間の材料物性を取得する</summary>
            <param name="temperature">温度</param>
            <returns>特定の温度区間の材料物性</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.Initialize(System.Double)">
            <summary>初期化する</summary>
            <param name="temperature">温度</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.GetHeatStorage(System.Double,System.Double)">
            <summary>温度1[C]から温度2[C]に変化した場合の蓄熱量[kJ/m3]を計算する</summary>
            <param name="temperature1">温度1[C]</param>
            <param name="temperature2">温度2[C]</param>
            <returns>温度1[C]から温度2[C]に変化した場合の蓄熱量[kJ/m3]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.updateState(System.Double)">
            <summary>温度に基づいて状態を更新する</summary>
            <param name="temperature">温度</param>
            <returns>状態変化が生じたか否か</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.getMaterialIndex(System.Double)">
            <summary>特定の温度区間の材料物性番号を取得する</summary>
            <param name="temperature">温度</param>
            <returns>特定の温度区間の材料物性番号</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.CurrentTemperature">
            <summary>現在の温度を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.CurrentMaterial">
            <summary>現在の材料物性を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.CurrentMaterialIndex">
            <summary>現在の材料物性番号を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.lhMaterial">
            <summary>潜熱蓄熱材料（特定温度区間）</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.lhMaterial.UpperTemperature">
            <summary>上限温度[C]</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.LatentHeatStorageMaterial.lhMaterial.Material">
            <summary>材料</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.WeatherDataTable">
            <summary>気象データテーブル（気象レコードの集合体）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherDataTable.S_VERSION">
            <summary>シリアライズバージョン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherDataTable.wdList">
            <summary>気象レコードリスト</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherDataTable.location">
            <summary>気象地点情報</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.#ctor(Popolo.Utility.Weather.WeatherRecord[])">
            <summary>コンストラクタ</summary>
            <param name="weatherRecord">気象レコード</param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.GetWeatherRecord(System.Int32)">
            <summary>気象レコードを取得する</summary>
            <param name="recordIndex">気象レコード番号</param>
            <returns>気象レコード</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.AddWeatherRecord(Popolo.Utility.Weather.WeatherRecord)">
            <summary>気象レコードを追加する</summary>
            <param name="weatherRecord">気象レコード</param>
            <remarks>
            一旦追加した気象レコードは変更不可
            変更したい場合は削除した後に新規に追加する
            </remarks>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.AddWeatherRecord(Popolo.Utility.Weather.WeatherRecord[])">
            <summary>気象レコードを追加する</summary>
            <param name="weatherRecord">気象レコード配列</param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.RemoveWeatherRecord(System.Int32)">
            <summary>気象レコードを削除する</summary>
            <param name="recordIndex">気象レコード番号</param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.ClearWeatherRecord">
            <summary>気象レコードを全削除する</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.GetAnnualDataTable(System.Int32)">
            <summary>特定年のデータテーブルを取得する</summary>
            <param name="year">年</param>
            <returns>特定年のデータテーブル</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.ConvertToHoulyDataTable">
            <summary>1時間間隔のデータテーブルに変換する</summary>
            <returns>1時間間隔のデータテーブル</returns>
            <remarks>不足するデータは線形補間する</remarks>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.SortRecord">
            <summary>気象レコードを日付順にソートする</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.interpolateWRecord(Popolo.Utility.Weather.WeatherRecord,Popolo.Utility.Weather.WeatherRecord,System.DateTime)">
            <summary>気象レコードを線形補間する</summary>
            <param name="wRecord1">気象レコード1</param>
            <param name="wRecord2">気象レコード2</param>
            <param name="dTime">補間する時刻</param>
            <returns>補間した気象レコード</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherDataTable.Clone">
            <summary>WeatherDataTableの複製を返す</summary>
            <returns>WeatherDataTableの複製</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.WeatherDataTable.Location">
            <summary>気象地点情報を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.WeatherDataTable.WeatherRecordNumber">
            <summary>気象レコードのデータ数を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.WeatherData">
            <summary>気象データ</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.ImmutableWeatherData">
            <summary>読み取り専用気象データ</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableWeatherData.Value">
            <summary>値を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableWeatherData.Source">
            <summary>ソースを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.ImmutableWeatherData.ErrorRate">
            <summary>値を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.S_VERSION">
            <summary>シリアライズバージョン</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.value">
            <summary>値</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.source">
            <summary>ソース</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.errorRate">
            <summary>誤差率[-]</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherData.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherData.#ctor(System.Double,Popolo.Utility.Weather.WeatherData.DataSource,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="value">値</param>
            <param name="source">ソース</param>
            <param name="errorRate">誤差率[-]</param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Weather.WeatherData.Clone">
            <summary>WeatherDataの複製を返す</summary>
            <returns>WeatherDataの複製</returns>
        </member>
        <member name="P:Popolo.Utility.Weather.WeatherData.Value">
            <summary>値を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.WeatherData.Source">
            <summary>ソースを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.WeatherData.ErrorRate">
            <summary>値を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.WeatherData.DataSource">
            <summary>データソースの種類</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.DataSource.MeasuredValue">
            <summary>実測値</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.DataSource.CalculatedValue">
            <summary>計算値（他の状態値に基づく理論的計算結果）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.DataSource.PredictedValue">
            <summary>予測値（統計値や補間値）</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.DataSource.MissingValue">
            <summary>欠測値</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.WeatherData.DataSource.Unknown">
            <summary>不明</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Control.SchedulerEditor`1">
            <summary>スケジューラエディタ</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SchedulerEditor`1.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SchedulerEditor`1.defaultValue">
            <summary>デフォルト値</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SchedulerEditor`1.iTermStructures">
            <summary>設定可能な期間定義オブジェクトリスト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduler">
            <summary>編集するスケジューラ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SetITermStructures(Popolo.Utility.Schedule.ITermStructure[])">
            <summary>設定可能な期間定義オブジェクトリストを設定する</summary>
            <param name="iTermStructures">設定可能な期間定義オブジェクトリスト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SetScheduler(Popolo.Utility.Schedule.ITermStructure)">
            <summary>スケジューラを設定する</summary>
            <param name="iTermStructure">スケジューラで管理する期間定義オブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SetScheduler(Popolo.Utility.Schedule.Scheduler{`0})">
            <summary>スケジューラを設定する</summary>
            <param name="scheduler">スケジューラ</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.GetScheduler">
            <summary>編集中のスケジューラを取得する</summary>
            <returns>編集中のスケジューラ</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SetSchedule(`0)">
            <summary>選択中のスケジューラと期間にスケジュールを設定する</summary>
            <param name="schedule">スケジュール内容</param>
            <returns>設定成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.GetSchedule(`0@)">
            <summary>選択中のスケジューラと期間のスケジュールを取得する</summary>
            <param name="schedule">スケジュール内容</param>
            <returns>取得成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SchedulerNodeSelected">
            <summary>スケジューラノードが選択されているか否かを取得する</summary>
            <returns>スケジューラノードが選択されている場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.getTreeNodeFromSchedulerAndTermName(System.Windows.Forms.TreeNodeCollection,Popolo.Utility.Schedule.Scheduler{`0},System.String)">
            <summary>TreeNodeCollectionを検索してSchedulerと期間名称に対応するTreeNodeを特定する</summary>
            <param name="treeNodes">検索するTreeNodeCollection</param>
            <param name="scheduler">TreeNodeのタグに関連付けられたSchedulerオブジェクト</param>
            <param name="termName">ツリーノードに表示されているテキストの名称</param>
            <returns>Schedulerと期間名称に対応するTreeNode</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.getTreeNodeFromScheduler(System.Windows.Forms.TreeNodeCollection,Popolo.Utility.Schedule.Scheduler{`0})">
            <summary>TreeNodeCollectionを検索してSchedulerに対応するTreeNodeを特定する</summary>
            <param name="treeNodes">検索するTreeNodeCollection</param>
            <param name="scheduler">TreeNodeのタグに関連付けられたSchedulerオブジェクト</param>
            <returns>Schedulerに対応するTreeNode</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduleTree_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>選択ノード変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.updateTSBtn">
            <summary>ToolStripButtonの状態を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduleTree_BeforeExpand(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>ノードを開く前の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.tsbtnAdd_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>スケジューラ追加ボタンクリック時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.tsbtnRemove_Click(System.Object,System.EventArgs)">
            <summary>スケジューラ削除ボタンクリック時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.tsbtnAdd_DropDownOpening(System.Object,System.EventArgs)">
            <summary>スケジューラ追加ボタンドロップダウンリスト表示前の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.tsbtnProperty_Click(System.Object,System.EventArgs)">
            <summary>プロパティボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduler_SchedulerNameChangeEvent(System.Object,System.EventArgs)">
            <summary>スケジューラ名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduler_SchedulerInitializeEvent(System.Object,System.EventArgs)">
            <summary>スケジューラ初期化イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduler_SchedulerRemoveEvent(System.Object,Popolo.Utility.Schedule.SchedulerEventArgs{`0})">
            <summary>スケジューラ削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SchedulerEditor`1.scheduler_SchedulerSetEvent(System.Object,Popolo.Utility.Schedule.SchedulerEventArgs{`0})">
            <summary>スケジューラ設定イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SchedulerAddButtonOpeningEvent">
            <summary>スケジューラ追加ボタンリスト表示イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SchedulerSetEvent">
            <summary>スケジューラ追加イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Control.SchedulerEditor`1.TreeViewAfterSelectEvent">
            <summary>スケジューラ選択イベント</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.SchedulerEditor`1.DefaultValue">
            <summary>デフォルト値を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SelectedNodeLevel">
            <summary>選択中のノードの階層を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Control.SchedulerEditor`1.SchedulerEditorEventHandler">
            <summary>スケジューライベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Property.Water">
            <summary>水の状態を取り扱う静的メソッドを提供するクラス</summary>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Tsats(System.Double)">
            <summary>圧力[kPa]から蒸気の温度[C]を求める</summary>
            <param name="pkpa">圧力[kPa]</param>
            <returns>蒸気温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Psats(System.Double)">
            <summary>温度[C]から飽和水蒸気圧[kPa]を求める</summary>
            <param name="tc">温度[C]</param>
            <returns>飽和水蒸気圧[kPa]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Vsats(System.Double,System.Double)">
            <summary>蒸気比体積[m3/kg]を蒸気温度[C]および蒸気圧力[kPa]から計算する</summary>
            <param name="pkpa">蒸気圧力[kPa]</param>
            <param name="tc">蒸気温度[C]</param>
            <returns>蒸気比体積[m3/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Vsatw(System.Double)">
            <summary>水比体積[m3/kg]を水温度[C]から計算する</summary>
            <param name="tc">水温度[C]</param>
            <returns>水比体積[m3/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Hsatw(System.Double)">
            <summary>水エンタルピー[kJ/kg]を水温度[C]から求める</summary>
            <param name="tc">水温度[C]</param>
            <returns>水エンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Hfg(System.Double)">
            <summary>水の気化熱[kJ/kg]を水温度[C]から求める</summary>
            <param name="tc">水温度[C]</param>
            <returns>水の気化熱[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Hsats(System.Double)">
            <summary>飽和水蒸気のエンタルピー[kJ/kg]を温度[C]から求める</summary>
            <param name="tc">度[C]</param>
            <returns>飽和水蒸気のエンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Ssatw(System.Double)">
            <summary>飽和蒸気の水エントロピー[kJ/kgK]を温度[C]から求める</summary>
            <param name="tc">飽和蒸気の温度[C]</param>
            <returns>飽和蒸気の水エントロピー[kJ/kgK]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Ssats(System.Double)">
            <summary>飽和水蒸気のエントロピー[kJ/kgK]を温度[C]から求める</summary>
            <param name="tc">飽和水蒸気の温度[C]</param>
            <returns>飽和水蒸気のエントロピー[kJ/kgK]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Vs(System.Double,System.Double)">
            <summary>加熱蒸気の比体積[m3/kg]を圧力[kPa]および温度[C]から求める</summary>
            <param name="pkpa">圧力[kPa]</param>
            <param name="tc">温度[C]</param>
            <returns>加熱蒸気の比体積[m3/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Hs(System.Double,System.Double)">
            <summary>加熱蒸気のエンタルピー[kJ/kg]を圧力[kPa]と温度[C]から求める</summary>
            <param name="pkpa">圧力[kPa]</param>
            <param name="tc">温度[C]</param>
            <returns>加熱蒸気のエンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Ss(System.Double,System.Double)">
            <summary>加熱蒸気のエントロピー[kJ/kgK]を圧力[kPa]と温度[C]から求める</summary>
            <param name="pkpa">圧力[kPa]</param>
            <param name="tc">温度[C]</param>
            <returns>加熱蒸気のエントロピー[kJ/kgK]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Tpss(System.Double,System.Double)">
            <summary>加熱蒸気の温度[C]を圧力[kPa]とエントロピー[kJ/kgK]から求める</summary>
            <param name="p">圧力[kPa]</param>
            <param name="s">エントロピー[kJ/kgK]</param>
            <returns>加熱蒸気の温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Cps(System.Double)">
            <summary>蒸気の比熱[kJ/kg/K]を温度[C]から求める</summary>
            <param name="t">温度[C]</param>
            <returns>蒸気の比熱[kJ/kg/K]</returns>
            <remarks>
            Specific heat equation from "Fundamentals of Classical Thermodynamics-SI Version" by Van Wylen and Sonntag Table A.9, pg. 683.
            Valid for T between 300-3500 K   max error = .43%
            </remarks>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Cvs(System.Double,System.Double)">
            <summary>比熱[kJ/kg/K]を比体積[m3/kg]と温度[C]から求める</summary>
            <param name="v">比体積[m3/kg]</param>
            <param name="t">温度[C]</param>
            <returns>比熱[kJ/kg/K]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Vissv(System.Double)">
            <summary>飽和水蒸気の動粘性係数[kg/m-s]を圧力[kPa]から求める</summary>
            <param name="p">圧力[kPa]</param>
            <returns>飽和水蒸気の動粘性係数[kg/m-s]</returns>
            <remarks>'Heat Transfer' by Alan J. Chapman, 1974.</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Vissph(System.Double)">
            <summary>加熱蒸気の動粘性係数[kg/m-s]を温度[C]から求める</summary>
            <param name="t">温度[C]</param>
            <returns>加熱蒸気の動粘性係数[kg/m-s]</returns>
            <remarks>'Heat Transfer' by Alan J. Chapman, 1974. (Note: there is little  variation in viscosity at higher pressures.)</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Steamk(System.Double)">
            <summary>加熱蒸気の熱伝導率[kW/m-C]を温度[C]から求める</summary>
            <param name="t">温度[C]</param>
            <returns>加熱蒸気の熱伝導率[kW/m-C]</returns>
            <remarks>'Heat Transfer' by Alan J. Chapman, 1974.</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Wrho(System.Double)">
            <summary>1[atm]での水密度[kg/m3]を温度[C]から求める</summary>
            <param name="tw">温度[C]</param>
            <returns>1[atm]での水密度[kg/m3]</returns>
            <remarks>CRC Handbook of Chem. and Phys., 61st Edition (1980-1981), p. F-6.</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Wmu(System.Double)">
            <summary>1[atm]での水の粘性[kg/m-s]を温度[C]から求める</summary>
            <param name="tw">温度[C]</param>
            <returns>1[atm]での水の粘性[kg/m-s]</returns>
            <remarks>Fit to data from Karlekar and Desmond</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Wk(System.Double)">
            <summary>1[atm]での蒸気の熱伝導率[kW/m-K]を温度[C]から求める</summary>
            <param name="tw">温度[C]</param>
            <returns>1[atm]での蒸気の熱伝導率[kW/m-K]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.Water.Wcp(System.Double)">
            <summary>1[atm]での空気の比熱[kJ/kg-C]を温度[C]から求める</summary>
            <param name="tw">温度[C]</param>
            <returns>1[atm]での空気の比熱[kJ/kg-C]</returns>
        </member>
        <member name="T:Popolo.Utility.Schedule.Control.TimePeriodsEditor">
            <summary>TimePeriods編集コントロール</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.TimePeriodsEditor.timePeriods">
            <summary>編集中のTimePeriodsオブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.TimePeriodsEditor.initializing">
            <summary>初期化中か否かのフラグ</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.TimePeriodsEditor.editable">
            <summary>編集可能か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.SetTimePeriods(Popolo.Utility.Schedule.TimePeriods)">
            <summary>編集するTimePeriodsオブジェクトを設定する</summary>
            <param name="timePeriods">編集するTimePeriodsオブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.timePeriods_NameChangeEvent(System.Object,System.EventArgs)">
            <summary>名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.timePeriods_TimePeriodRemoveEvent(System.Object,Popolo.Utility.Schedule.TimePeriodsEventArgs)">
            <summary>時間帯削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.timePeriods_TimePeriodChangeEvent(System.Object,Popolo.Utility.Schedule.TimePeriodsEventArgs)">
            <summary>時間帯編集イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.timePeriods_TimePeriodAddEvent(System.Object,Popolo.Utility.Schedule.TimePeriodsEventArgs)">
            <summary>時間帯追加イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.tbxTimePeriodsName_TextChanged(System.Object,System.EventArgs)">
            <summary>時間帯定義オブジェクト名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.tbxTimePeriodName_TextChanged(System.Object,System.EventArgs)">
            <summary>名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>時間帯追加ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.btnRemove_Click(System.Object,System.EventArgs)">
            <summary>時間帯削除ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.dtPickerStart_ValueChanged(System.Object,System.EventArgs)">
            <summary>時間帯開始時刻変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.dtPickerEnd_ValueChanged(System.Object,System.EventArgs)">
            <summary>時間帯終了時刻変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.lbxTimePeriods_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>選択中のTimePeriodsオブジェクト変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.updateControl">
            <summary>コントロールを更新する</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.TimePeriodsEditor.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.TimePeriodsEditor.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.TimePeriodsEditor.EdittingTimePeriods">
            <summary>編集中のTimePeriodsオブジェクトを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.TimePeriodsEditor.Editable">
            <summary>編集可能か否かを取得・設定する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WallLayers">
            <summary>壁構成クラス</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableWallLayers">
            <summary>読み取り専用壁構成</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWallLayers.GetLayer(System.UInt32)">
            <summary>壁層情報を取得する</summary>
            <param name="layerIndex">壁層番号</param>
            <returns>壁層情報</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWallLayers.GetLayer">
            <summary>壁層情報を取得する</summary>
            <returns>壁層情報</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableWallLayers.GetOverallHeatTransferCoefficient(System.Double,System.Double)">
            <summary>外表面総合熱伝達率[W/(m^2K)]を指定して熱貫流率[W/(m^2K)]を計算する</summary>
            <param name="surfaceAlpha1">外表面総合熱伝達率1[W/(m^2K)]</param>
            <param name="surfaceAlpha2">外表面総合熱伝達率2[W/(m^2K)]</param>
            <returns>熱貫流率[W/(m^2K)]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallLayers.ID">
            <summary>IDを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallLayers.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallLayers.LayerNumber">
            <summary>層の数を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.name">
            <summary>名称</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.layers">
            <summary>壁層リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.overallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m2-K)]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.heatCapacityPerUnitArea">
            <summary>単位面積当たりの熱容量[J/(m^2-K)]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="name">壁構成名称</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.GetLayer(System.UInt32)">
            <summary>壁層を取得する</summary>
            <param name="layerIndex">壁層番号</param>
            <returns>壁層オブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.GetLayer">
            <summary>壁層を取得する</summary>
            <returns>壁層オブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.SetLayer(System.Int32,Popolo.Utility.LoadCalculation.WallLayers.Layer)">
            <summary>壁層を設定する</summary>
            <param name="layerIndex">壁層番号</param>
            <param name="layer">壁層オブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.AddLayer(Popolo.Utility.LoadCalculation.WallLayers.Layer)">
            <summary>壁層を追加する</summary>
            <param name="layer">壁層オブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.RemoveLayer(System.Int32)">
            <summary>壁層を削除する</summary>
            <param name="layerIndex">壁層番号</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.UsingMaterial(Popolo.Utility.LoadCalculation.ImmutableWallMaterial)">
            <summary>壁素材を使っているか否かを返す</summary>
            <param name="material">壁素材</param>
            <returns>使っている場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.GetOverallHeatTransferCoefficient(System.Double,System.Double)">
            <summary>壁表面の総合熱伝達率[W/(m^2K)]を指定して熱貫流率[W/(m^2K)]を計算する</summary>
            <param name="surfaceAlpha1">壁表面の総合熱伝達率1[W/(m^2K)]</param>
            <param name="surfaceAlpha2">壁表面の総合熱伝達率2[W/(m^2K)]</param>
            <returns>熱貫流率[W/(m^2K)]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.GetOverallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m^2K)]を計算する</summary>
            <returns>熱貫流率[W/(m^2K)]</returns>
            <remarks>壁表面の総合熱伝達率は含まない</remarks>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.GetHeatCapacityPerUnitArea">
            <summary>単位面積当たりの熱容量[kJ/(m^2-K)]を計算する</summary>
            <returns></returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.updateOverallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m2-K)]を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.updateHeatCapacityPerUnitArea">
            <summary>単位面積当たりの熱容量[J/(m^2-K)]を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Clone">
            <summary>WallCompositionオブジェクトの複製を返す</summary>
            <returns>WallCompositionオブジェクトの複製</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.ID">
            <summary>IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.LayerNumber">
            <summary>層の数を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WallLayers.Layer">
            <summary>壁層クラス</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.Layer.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.Layer.material">
            <summary>素材</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.Layer.thickness">
            <summary>厚み[m]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.Layer.resistance">
            <summary>熱抵抗[m2-K/W]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.Layer.heatCapacityPerUnitArea">
            <summary>単位面積当たりの熱容量[J/(m^2-K)]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallLayers.Layer.splitNum">
            <summary>壁分割数</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Layer.#ctor(Popolo.Utility.LoadCalculation.ImmutableWallMaterial,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="material">素材</param>
            <param name="thickness">厚み[m]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Layer.#ctor(Popolo.Utility.LoadCalculation.ImmutableWallMaterial,System.Double,System.UInt32)">
            <summary>コンストラクタ</summary>
            <param name="material">素材</param>
            <param name="thickness">厚み[m]</param>
            <param name="splitNumber">壁分割数</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Layer.initialize">
            <summary>各種性能を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Layer.Clone">
            <summary>Layerオブジェクトの複製を返す</summary>
            <returns>Layerオブジェクトの複製</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Layer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallLayers.Layer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>WallLayerシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.Layer.Material">
            <summary>素材を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.Layer.Thickness">
            <summary>厚み[m]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.Layer.divisionNumber">
            <summary>壁分割数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.Layer.Resistance">
            <summary>熱抵抗[m2 K/W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallLayers.Layer.HeatCapacityPerUnitArea">
            <summary>単位面積当たりの熱容量[J/(m^2-K)]を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.GlassPanes">
            <summary>ガラス層</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableGlassPanes">
            <summary>読み取り専用のガラス層</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.OverallTransmittance">
            <summary>総合透過率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.OverallAbsorptance">
            <summary>総合吸収率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.HeatTransferCoefficientOfGlass">
            <summary>ガラスの熱貫流率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.OverallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m2-K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.Panes">
            <summary>ガラスを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.OutsideOverallHeatTransferCoefficient">
            <summary>外表面総合熱伝達率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.InsideOverallHeatTransferCoefficient">
            <summary>内表面総合熱伝達率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.HeatTransferCoefficientsOfAirGaps">
            <summary>空隙の総合熱伝達率[W/(m2-K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableGlassPanes.AngularDependenceCoefficients">
            <summary>入射角特性係数[-]の係数を取得する</summary>
            <remarks>Σ(an * cosθ^n)</remarks>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.angularDependenceCoefficients">
            <summary>入射角特性係数[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.heatTransferCoefficientsOfAirGaps">
            <summary>空隙の総合熱伝達率[W/(m2-K)]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.outsideOverallHeatTransferCoefficient">
            <summary>外表面総合熱伝達率[W/m2-K]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.insideOverallHeatTransferCoefficient">
            <summary>内表面総合熱伝達率[W/m2-K]</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.#ctor(System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="overallTransmittance">総合透過率[-]</param>
            <param name="overallAbsorptance">総合吸収率[-]</param>
            <param name="heatTransferCoefficient">ガラスの熱貫流率[W/m2-K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.#ctor(Popolo.Utility.LoadCalculation.GlassPanes.Pane[])">
            <summary>コンストラクタ</summary>
            <param name="panes">
            ガラス板リスト
            内側から外側の順
            </param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.#ctor(Popolo.Utility.LoadCalculation.GlassPanes.Pane)">
            <summary>コンストラクタ</summary>
            <param name="pane">ガラス板</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.initialize">
            <summary>初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.SetOutsideOverallHeatTransferCoefficient(System.Double)">
            <summary>外表面総合熱伝達率[W/m2-K]を設定する</summary>
            <param name="outsideOverallHeatTransferCoefficient">外表面総合熱伝達率[W/m2-K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.SetInsideOverallHeatTransferCoefficient(System.Double)">
            <summary>内表面総合熱伝達率[W/m2-K]を設定する</summary>
            <param name="insideOverallHeatTransferCoefficient">内表面総合熱伝達率[W/m2-K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.SetHeatTransferCoefficientsOfGaps(System.Int32,System.Double)">
            <summary>ガラス間の気体の総合熱伝達率[W/(m2-K)]を設定する</summary>
            <param name="index">空気層の番号：室内側から0,1,2,3...</param>
            <param name="heatTransferCoefficient">空気層の総合熱伝達率[W/(m2-K)]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.SetHeatTransferCoefficientsOfGaps(System.Int32,Popolo.Utility.LoadCalculation.GlassPanes.GapMaterial)">
            <summary>ガラス間の気体の総合熱伝達率[W/(m2-K)]を設定する</summary>
            <param name="index">空気層の番号：室内側から0,1,2,3...</param>
            <param name="gMaterial">ガラス間充填気体</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.Copy(Popolo.Utility.LoadCalculation.ImmutableGlassPanes)">
            <summary>ガラス層オブジェクトをコピーする</summary>
            <param name="glassPanes">ガラス層オブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.GetStandardIncidentAngleCharacteristic(System.Double)">
            <summary>ガラスの標準入射角特性[-]を計算する</summary>
            <param name="cosineIncidentAngle">入射角の余弦（cosθ）</param>
            <returns>ガラスの標準入射角特性[-]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.OverallTransmittance">
            <summary>総合透過率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.OverallAbsorptance">
            <summary>総合吸収率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.HeatTransferCoefficientOfGlass">
            <summary>ガラスの熱貫流率[W/(m2-K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.OverallHeatTransferCoefficient">
            <summary>熱貫流率[W/(m2-K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Panes">
            <summary>ガラスを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.OutsideOverallHeatTransferCoefficient">
            <summary>外表面総合熱伝達率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.InsideOverallHeatTransferCoefficient">
            <summary>内表面総合熱伝達率[W/m2-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.HeatTransferCoefficientsOfAirGaps">
            <summary>空隙の総合熱伝達率[W/(m2-K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.AngularDependenceCoefficients">
            <summary>入射角特性係数[-]の係数を設定・取得する</summary>
            <remarks>Σ(an * cosθ^n)</remarks>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.GlassPanes.GapMaterial">
            <summary>ガラス間に充填する気体</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.GapMaterial.SHINKU">
            <summary>真空//直せE.Togashi</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.GapMaterial.Air">
            <summary>空気</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.GapMaterial.Algon">
            <summary>アルゴン</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.GapMaterial.Curipton">
            <summary>クリプトン//直せE.Togashi</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.GlassPanes.Pane">
            <summary>ガラス板</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.Pane.#ctor(System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="transmittance">透過率[-]</param>
            <param name="reflectance">反射率[-]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.Pane.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="outerSideTransmittance">外側透過率[-]</param>
            <param name="outerSideReflectance">外側反射率[-]</param>
            <param name="innerSideTransmittance">内側透過率[-]</param>
            <param name="innerSideReflectance">内側反射率[-]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.Pane.#ctor(Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane)">
            <summary>コンストラクタ</summary>
            <param name="predifinedGlass">ガラス板の種類</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.GlassPanes.Pane.#ctor(Popolo.Utility.LoadCalculation.GlassPanes.Pane)">
            <summary>コンストラクタ</summary>
            <param name="pane">コピー対象のガラスオブジェクト</param>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Pane.OuterSideTransmittance">
            <summary>外側透過率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Pane.OuterSideAbsorptance">
            <summary>外側吸収率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Pane.OuterSideReflectance">
            <summary>外側反射率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Pane.InnerSideTransmittance">
            <summary>内側透過率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Pane.InnerSideAbsorptance">
            <summary>内側吸収率[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.GlassPanes.Pane.InnerSideReflectance">
            <summary>内側反射率[-]を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane">
            <summary>ガラス板の種類</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane.TransparentGlass03mm">
            <summary>透明ガラス(3mm)</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane.TransparentGlass06mm">
            <summary>透明ガラス(6mm)</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane.TransparentGlass12mm">
            <summary>透明ガラス(12mm)</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane.HeatAbsorbingGlass03mm">
            <summary>吸熱ガラス(3mm)</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane.HeatAbsorbingGlass06mm">
            <summary>吸熱ガラス(6mm)</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.GlassPanes.Pane.PredifinedGlassPane.HeatReflectingGlass06mm">
            <summary>反射ガラス(6mm)</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Control.SeasonsEditor">
            <summary>Seasons編集コントロール</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SeasonsEditor.seasons">
            <summary>編集中のSeasonsオブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SeasonsEditor.initializing">
            <summary>初期化中か否かのフラグ</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SeasonsEditor.editable">
            <summary>編集可能か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.SetSeasons(Popolo.Utility.Schedule.Seasons)">
            <summary>編集するSeasonsオブジェクトを設定する</summary>
            <param name="seasons">編集するSeasonsオブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.seasons_NameChangeEvent(System.Object,System.EventArgs)">
            <summary>名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.seasons_SeasonRemoveEvent(System.Object,Popolo.Utility.Schedule.SeasonsEventArgs)">
            <summary>季節削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.seasons_SeasonChangeEvent(System.Object,Popolo.Utility.Schedule.SeasonsEventArgs)">
            <summary>季節編集イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.seasons_SeasonAddEvent(System.Object,Popolo.Utility.Schedule.SeasonsEventArgs)">
            <summary>季節追加イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.tbxSeasonsName_TextChanged(System.Object,System.EventArgs)">
            <summary>季節定義オブジェクト名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.tbxSeasonName_TextChanged(System.Object,System.EventArgs)">
            <summary>季節名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>季節追加ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.btnRemove_Click(System.Object,System.EventArgs)">
            <summary>季節削除ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.dtPickerStart_ValueChanged(System.Object,System.EventArgs)">
            <summary>季節開始月日変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.dtPickerEnd_ValueChanged(System.Object,System.EventArgs)">
            <summary>季節終了月日変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.lbxSeasons_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>選択中のSeasonsオブジェクト変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.updateControl">
            <summary>コントロールを更新する</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.SeasonsEditor.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.SeasonsEditor.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.SeasonsEditor.EdittingSeasons">
            <summary>編集中のSeasonsオブジェクトを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.SeasonsEditor.Editable">
            <summary>編集可能か否かを取得・設定する</summary>
        </member>
        <member name="T:Popolo.Utility.Property.PsychrometricChartDrawer">
            <summary>空気線図描画クラス</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.L_MARGIN">
            <summary>左側マージン</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.R_MARGIN">
            <summary>右側マージン</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.T_MARGIN">
            <summary>上側マージン</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.B_MARGIN">
            <summary>下側マージン</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.BPEN">
            <summary>黒ペン</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.barometricPressure">
            <summary>気圧[kPa]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.canvasSize">
            <summary>空気線図描画サイズ</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.lineProperties">
            <summary>等状態値線の描画範囲</summary>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.#cctor">
            <summary>静的コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.DrawChart(System.Drawing.Image)">
            <summary>Imageに空気線図を描画する</summary>
            <param name="image">描画対象のイメージ</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.DrawChart(System.Drawing.Image,Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation[])">
            <summary>Imageに空気線図および状態点を描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="plotInfos">空気状態点</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.DrawPlots(System.Drawing.Image,Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation)">
            <summary>プロットを描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="plotInfo">プロット情報</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.DrawPlots(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Single,System.Double[],System.Double[])">
            <summary>プロットを描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="fillColor">プロットカラー</param>
            <param name="lineColor">境界線色</param>
            <param name="plotSize">プロットサイズ</param>
            <param name="dbTemps">乾球温度リスト</param>
            <param name="aHumids">絶対湿度リスト</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.DrawLine(System.Drawing.Image,Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation)">
            <summary>多角形を描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="plotInfo">プロット情報</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.GetAirStateFromPoint(System.Drawing.PointF)">
            <summary>座標に基づいて空気状態を取得する</summary>
            <param name="ptf">座標</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.GetPointFromDBandAH(System.Double,System.Double)">
            <summary>乾球温度と絶対湿度に基づいて座標を計算する</summary>
            <param name="dryBulbTemperature">乾球温度</param>
            <param name="absoluteHumidity">絶対湿度</param>
            <returns>座標</returns>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.SetLineProperty(Popolo.Utility.Property.PsychrometricChartDrawer.Lines,Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty)">
            <summary>等状態値線の描画範囲を設定する</summary>
            <param name="line">線種</param>
            <param name="lineProperty">等状態値線の描画範囲</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.GetLineProperty(Popolo.Utility.Property.PsychrometricChartDrawer.Lines)">
            <summary>等状態値線の描画範囲を取得する</summary>
            <param name="line">線種</param>
            <returns>等状態値線の描画範囲</returns>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.getPointFromDBandAH(System.Double,System.Double,System.Double,System.Double)">
            <summary>乾球温度および絶対湿度から描画位置を計算する</summary>
            <param name="dbTemp">乾球温度</param>
            <param name="absoluteHumidity">絶対湿度</param>
            <param name="xRate">x方向レート</param>
            <param name="yRate">y方向レート</param>
            <returns>描画位置</returns>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawSaturatedLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>飽和線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">x方向レート</param>
            <param name="yRate">y方向レート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawDryBulbTemperatureLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等乾球温度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawAbsoluteHumidityLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等絶対湿度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawEnthalpyLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等エンタルピー線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawWetBulbTemperatureLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等湿球温度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawSpecificVolumeLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等比容積線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawRelativeHumidityLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等相対湿度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.drawAxis(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>軸・目盛りおよび数値を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="P:Popolo.Utility.Property.PsychrometricChartDrawer.BarometricPressure">
            <summary>気圧を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.PsychrometricChartDrawer.CanvasSize">
            <summary>描画キャンバスサイズを設定</summary>
        </member>
        <member name="T:Popolo.Utility.Property.PsychrometricChartDrawer.Lines">
            <summary>描画線の種類</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.SaturatedLine">
            <summary>飽和線</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.WetBulbTemperatureLine">
            <summary>湿球温度</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.EnthalpyLine">
            <summary>エンタルピー</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.AbsoluteHumidityLine">
            <summary>絶対湿度</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.DryBulbTemperatureLine">
            <summary>乾球温度</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.RelativeHumidityLine">
            <summary>相対湿度</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.SpecificVoluemLine">
            <summary>比容積線</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.Lines.All">
            <summary>すべて</summary>
        </member>
        <member name="T:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty">
            <summary>等状態値線描画範囲保持構造体</summary>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty.#ctor(System.Double,System.Double,System.Double,System.Drawing.Pen,System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="minValue">状態値下限</param>
            <param name="maxValue">状態値上限</param>
            <param name="spacing">状態値間隔</param>
            <param name="pen">描画するペン種類</param>
            <param name="drawLine">描画するか否か</param>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty.MinimumValue">
            <summary>状態値下限</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty.MaximumValue">
            <summary>状態値上限</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty.Spacing">
            <summary>状態値間隔</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty.DrawingPen">
            <summary>描画ペン</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.LineProperty.DrawLine">
            <summary>描画するか否か</summary>
        </member>
        <member name="T:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation">
            <summary>プロット情報</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation.DrybulbTemperatures">
            <summary>乾球温度リスト</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation.AbsoluteHumidities">
            <summary>絶対湿度リスト</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation.FillColor">
            <summary>描画色</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation.LineColor">
            <summary>線の色</summary>
        </member>
        <member name="F:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation.Diameter">
            <summary>直径</summary>
        </member>
        <member name="M:Popolo.Utility.Property.PsychrometricChartDrawer.PlotsInformation.#ctor(System.Double[],System.Double[],System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>コンストラクタ</summary>
            <param name="dbTemps">乾球温度リスト</param>
            <param name="aHumids">絶対湿度リスト</param>
            <param name="fillColor">描画色</param>
            <param name="lineColor">線の色</param>
            <param name="diameter">直径</param>
        </member>
        <member name="T:Popolo.Utility.Weather.Converter.HASConverter">
            <summary>EESLISM用気象データを変換する</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.ToPWeatherData(System.String,System.Boolean@)">
            <summary>ファイルを元にWeatherDataTableを構成する</summary>
            <param name="filePath">読み取りファイルのパス</param>
            <param name="success">読み取り成功の真偽</param>
            <returns>構成されたPWeatherDataオブジェクト</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.FromPWeather(Popolo.Utility.Weather.WeatherDataTable,System.String,System.Boolean@)">
            <summary>PWeatherDataをファイルに書き出す</summary>
            <param name="wdTable">WeatherDataTableオブジェクト</param>
            <param name="filePath">書き出しファイルへのパス</param>
            <param name="success">書き出し成功の真偽</param>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.MakeSupwData(Popolo.Utility.Weather.WeatherDataTable)">
            <summary>supwデータのための文字列を作成する</summary>
            <param name="wdTable">気象データテーブル</param>
            <returns>supwデータのための文字列</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.convertTo3WordString(System.Double)">
            <summary>実数を3桁空白右揃えで表現する</summary>
            <param name="value">実数</param>
            <returns>文字列</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.convertToDayOfWeekCode(System.DayOfWeek)">
            <summary>曜日を曜日コードに変換する</summary>
            <param name="dw">曜日</param>
            <returns>曜日コード</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.convertToWindDirectionCode(System.Double)">
            <summary>風向を風向コードに変換する</summary>
            <param name="windDirection">風向</param>
            <returns>風向コード（16方位）</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.convertFromWindDirectionCode(System.Int32)">
            <summary>風向コードを風向[degree]に変換する</summary>
            <param name="windowDirectionCode">風向コード（16方位）</param>
            <returns>風向[degree]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Converter.HASConverter.output24Data(System.IO.StreamWriter,Popolo.Utility.Weather.ImmutableWeatherRecord[])">
            <summary>24時間分のデータを書き出す</summary>
            <param name="sWriter">書き出しストリーム</param>
            <param name="wRecord">24時間分のデータ</param>
        </member>
        <member name="P:Popolo.Utility.Weather.Converter.HASConverter.Name">
            <summary>気象データ名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Weather.Converter.HASConverter.UseCCRate">
            <summary>第5行のデータに雲量を利用するか否かを設定する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Channel">
            <summary>流路クラス</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.ImmutableChannel">
            <summary>読み取り専用流路</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableChannel.GetFlow">
            <summary>Node1からNode2への流量を取得する</summary>
            <returns>Node1からNode2への流量</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableChannel.GetFlow(Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>接点への流量を取得する</summary>
            <param name="node">接点</param>
            <returns>接点への流量</returns>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableChannel.ID">
            <summary>IDを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableChannel.Node1">
            <summary>節点1を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableChannel.Node2">
            <summary>節点2を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableChannel.Resistance">
            <summary>抵抗値を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableChannel.Eta">
            <summary>抵抗指数を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.node1">
            <summary>節点1</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.node2">
            <summary>節点2</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.hasChanged">
            <summary>変更フラグ</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.resistance">
            <summary>抵抗値</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.eta">
            <summary>抵抗指数</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Channel.flow">
            <summary>Node1からNode2への流量</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.#ctor(System.String,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="name">名称</param>
            <param name="resistance">抵抗値</param>
            <param name="eta">抵抗指数</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.Connect(Popolo.Utility.FluidNetwork.Node,Popolo.Utility.FluidNetwork.Node)">
            <summary>接点を接続する</summary>
            <param name="node1">接点1</param>
            <param name="node2">接点2</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.Disconnect">
            <summary>切断する</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.nodeFnc(System.Object,System.EventArgs)">
            <summary>接点エネルギー変更イベントに対する処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.GetFlow">
            <summary>Node1からNode2への流量を取得する</summary>
            <returns>Node1からNode2への流量</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.GetFlow(Popolo.Utility.FluidNetwork.ImmutableNode)">
            <summary>接点への流量を取得する</summary>
            <param name="node">接点</param>
            <returns>接点への流量</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.calculateFlow">
            <summary>Node1からNode2への流量を計算する</summary>
            <returns>流量</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Channel.Clone">
            <summary>複製を返す</summary>
            <returns>複製</returns>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Channel.ID">
            <summary>IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Channel.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Channel.Node1">
            <summary>節点1を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Channel.Node2">
            <summary>節点2を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Channel.Resistance">
            <summary>抵抗値を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Channel.Eta">
            <summary>抵抗指数を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WallMaterial">
            <summary>壁体を構成する材料</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableWallMaterial">
            <summary>読み取り専用WallMaterialインターフェース</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallMaterial.ID">
            <summary>素材IDを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallMaterial.Name">
            <summary>素材の名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallMaterial.Material">
            <summary>壁材料を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallMaterial.ThermalConductivity">
            <summary>熱伝導率[W/(mK)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableWallMaterial.VolumetricSpecificHeat">
            <summary>容積比熱[kJ/(m^3K)]を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.id">
            <summary>素材ID</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.name">
            <summary>素材名称</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.thermalConductivity">
            <summary>熱伝導率[W/mK]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.volumetricSpecificHeat">
            <summary>容積比熱[kJ/m3K]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.pMaterial">
            <summary>素材タイプ</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.#ctor">
            <summary>デフォルトコンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.#ctor(Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials)">
            <summary>デフォルトコンストラクタ</summary>
            <param name="mType">素材タイプ</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.#ctor(System.String,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="name">素材名称</param>
            <param name="thermalConductivity">熱伝導率[W/(mK)]</param>
            <param name="volumetricSpecificHeat">容積比熱[kJ/(m^3K)]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.#ctor(Popolo.Utility.LoadCalculation.ImmutableWallMaterial)">
            <summary>コピーコンストラクタ</summary>
            <param name="wallMaterial">コピーする壁素材</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.Initialize(System.String,System.Double,System.Double)">
            <summary>初期化処理</summary>
            <param name="name">素材名称</param>
            <param name="thermalConductivity">熱伝導率[W/mK]</param>
            <param name="volumetricSpecificHeat">容積比熱[kJ/m3K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.initialize(System.String,System.Double,System.Double,Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials)">
            <summary>初期化処理</summary>
            <param name="name">素材名称</param>
            <param name="thermalConductivity">熱伝導率[W/mK]</param>
            <param name="volumetricSpecificHeat">容積比熱[kJ/m3K]</param>
            <param name="pMaterial">素材タイプ</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.Initialize(Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials)">
            <summary>初期化処理</summary>
            <param name="mType">素材タイプ</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>WallMaterialシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.WallMaterial.Clone">
            <summary>WallMaterialオブジェクトの複製を返す</summary>
            <returns>WallMaterialオブジェクトの複製</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallMaterial.ID">
            <summary>素材IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallMaterial.Name">
            <summary>素材の名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallMaterial.Material">
            <summary>壁材料を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallMaterial.ThermalConductivity">
            <summary>熱伝導率[W/(mK)]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.WallMaterial.VolumetricSpecificHeat">
            <summary>容積比熱[kJ/(m^3K)]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials">
            <summary>定義済の素材</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Mortar">
            <summary>セメント・モルタル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.ReinforcedConcrete">
            <summary>鉄筋コンクリート</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.LightweightAggregateConcrete1">
            <summary>軽量骨材コンクリート1種</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.LightweightAggregateConcrete2">
            <summary>軽量骨材コンクリート2種</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.AutomaticLevelControl">
            <summary>軽量気泡コンクリート（ALC）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Brick">
            <summary>普通れんが</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.FireBrick">
            <summary>耐火れんが</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Copper">
            <summary>銅</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Aluminum">
            <summary>アルミニウム合金</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Steel">
            <summary>鋼材</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Lead">
            <summary>鉛</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.StainlessSteel">
            <summary>ステンレス鋼</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.FloatGlass">
            <summary>フロートガラス(窓ガラスではない）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PolyvinylChloride">
            <summary>PVC(塩化ビニル)</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Wood1">
            <summary>天然木材1類（桧、杉、えぞ松等）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Wood2">
            <summary>天然木材2類（松、ラワン等）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Wood3">
            <summary>天然木材3類（ナラ、サクラ、ブナ等）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Plywood">
            <summary>合板</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.WoodWoolCement">
            <summary>断熱木毛セメント</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.WoodChipCement">
            <summary>木片セメント</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.HardBoard">
            <summary>ハードボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.ParticleBoard">
            <summary>パーティクルボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PlasterBoard">
            <summary>せっこうボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.GypsumPlaster">
            <summary>せっこうプラスター</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.WhiteWash">
            <summary>漆喰</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.SoilWall">
            <summary>土壁</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.FiberCoating">
            <summary>繊維質上塗材</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Tatami">
            <summary>畳床</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Tile">
            <summary>タイル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PlasticTile">
            <summary>プラスチック（P）タイル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.GlassWoolInsulation_10K">
            <summary>住宅用グラスウール断熱材 10K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.GlassWoolInsulation_16K">
            <summary>住宅用グラスウール断熱材 16K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.GlassWoolInsulation_24K">
            <summary>住宅用グラスウール断熱材 24K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.GlassWoolInsulation_34K">
            <summary>住宅用グラスウール断熱材 32K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.HighGradeGlassWoolInsulation_16K">
            <summary>高性能グラスウール断熱材 16K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.HighGradeGlassWoolInsulation_24K">
            <summary>高性能グラスウール断熱材 24K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BlowingGlassWoolInsulation_13K">
            <summary>吹込用グラスウール断熱材1種 13K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BlowingGlassWoolInsulation_18K">
            <summary>吹込用グラスウール断熱材2種 18K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BlowingGlassWoolInsulation_30K">
            <summary>吹込用グラスウール断熱材2種 30K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BlowingGlassWoolInsulation_35K">
            <summary>吹込用グラスウール断熱材2種 35K相当</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RockWoolInsulationMat">
            <summary>住宅用ロックウール断熱材 マット</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RockWoolInsulationFelt">
            <summary>住宅用ロックウール断熱材 フェルト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RockWoolInsulationBoard">
            <summary>住宅用ロックウール断熱材 ボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BlowingRockWoolInsulation_25K">
            <summary>吹込用ロックウール断熱材 25K</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BlowingRockWoolInsulation_35K">
            <summary>吹込用ロックウール断熱材 35K</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RockWoolAcousticBoard">
            <summary>ロックウール化粧吸音板</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.SprayedRockWool">
            <summary>吹付けロックウール</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BeadMethodPolystyreneFoam_S">
            <summary>ビーズ法ポリスチレンフォーム特号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BeadMethodPolystyreneFoam_1">
            <summary>ビーズ法ポリスチレンフォーム1号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BeadMethodPolystyreneFoam_2">
            <summary>ビーズ法ポリスチレンフォーム2号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BeadMethodPolystyreneFoam_3">
            <summary>ビーズ法ポリスチレンフォーム3号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.BeadMethodPolystyreneFoam_4">
            <summary>ビーズ法ポリスチレンフォーム4号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.ExtrudedPolystyreneFoam_1">
            <summary>押出法ポリスチレンフォーム 1種</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.ExtrudedPolystyreneFoam_2">
            <summary>押出法ポリスチレンフォーム 2種</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.ExtrudedPolystyreneFoam_3">
            <summary>押出法ポリスチレンフォーム 3種</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_1_1">
            <summary>硬質ウレタンフォーム保温版1種1号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_1_2">
            <summary>硬質ウレタンフォーム保温版1種2号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_1_3">
            <summary>硬質ウレタンフォーム保温版1種3号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_2_1">
            <summary>硬質ウレタンフォーム保温版2種1号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_2_2">
            <summary>硬質ウレタンフォーム保温版2種2号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_2_3">
            <summary>硬質ウレタンフォーム保温版2種3号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RigidUrethaneFoam_InSite">
            <summary>硬質ウレタンフォーム（現場発泡品）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PolyethyleneFoam_A">
            <summary>ポリエチレンフォーム A</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PolyethyleneFoam_B">
            <summary>ポリエチレンフォーム B</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PhenolicFoam_1_1">
            <summary>フェノールフォーム保温版 1種1号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PhenolicFoam_1_2">
            <summary>フェノールフォーム保温版 1種2号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PhenolicFoam_2_1">
            <summary>フェノールフォーム保温版 2種1号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PhenolicFoam_2_2">
            <summary>フェノールフォーム保温版 2種2号</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.InsulationBoard_A">
            <summary>A級インシュレーションボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.TatamiBoard">
            <summary>タタミボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.SheathingInsulationBoard">
            <summary>シージングボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.CelluloseFiberInsulation_1">
            <summary>吹込用セルローズファイバー断熱材1</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.CelluloseFiberInsulation_2">
            <summary>吹込用セルローズファイバー断熱材2</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Soil">
            <summary>土壌（ローム質）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.ExpandedPolystyrene">
            <summary>EPS</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.CoveringMaterial">
            <summary>外装材</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Linoleum">
            <summary>合成樹脂・リノリウム</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Carpet">
            <summary>カーペット</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.AsbestosPlate">
            <summary>石綿スレート</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.SealedAirGap">
            <summary>密閉空気層</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.AirGap">
            <summary>非密閉空気層</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PolystyreneFoam">
            <summary>ポリスチレンフォーム</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.StyreneFoam">
            <summary>スチレン発泡板</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.RubberTile">
            <summary>ゴムタイル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Kawara">
            <summary>瓦</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.LightweightConcrete">
            <summary>軽量コンクリート</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Asphalt">
            <summary>防水層（アスファルトルーフィング）</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.FrexibleBoard">
            <summary>フレキシブルボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.CalciumSilicateBoard">
            <summary>珪酸カルシウム板</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.PhenolicFoam">
            <summary>高性能フェノールボード</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Granite">
            <summary>花崗岩</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.AcrylicResin">
            <summary>アクリル樹脂</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.WallMaterial.PredefinedMaterials.Other">
            <summary>その他</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Control.PhasedTreeNode">
            <summary>子ノードの追加履歴を保存するプロパティを持つ段階的ツリーノード</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Control.PhasedTreeNode.isSubFoldersAdded">
            <summary>子ノード追加処理済か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Control.PhasedTreeNode.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="text">ツリーノードに表示する文字列</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.Control.PhasedTreeNode.SubFoldersAdded">
            <summary>子ノード追加処理済か否かのフラグを設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Property.MoistAir">
            <summary>湿り空気クラス</summary>
            <remarks>HVACSIM+(J)および『パソコンによる空気調和計算法（宇田川光弘）』を参照</remarks>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.TCONV">
            <summary>絶対温度と摂氏との変換用定数</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.CP_AIR">
            <summary>乾き空気の定圧比熱[kJ/kg-K]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.CP_VAPOR">
            <summary>水蒸気の定圧比熱[kJ/kg-K]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.CP_WATER">
            <summary>水比熱[kJ/kg-K]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.HFG">
            <summary>水の蒸発潜熱[kJ/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.ATM">
            <summary>1気圧=101.325[kPa]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.GAS_CONSTANT_DRY_AIR">
            <summary>乾き空気のガス定数[kJ/(kg K)]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.dryBulbTemp">
            <summary>乾球温度[℃]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.wetBulbTemp">
            <summary>湿球温度[℃]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.absoluteHumid">
            <summary>絶対湿度[kg/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.relativeHumid">
            <summary>相対湿度[%]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.enthalpy">
            <summary>エンタルピー[kJ/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.specificVolume">
            <summary>比容積[m3/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.atmosphericPressure">
            <summary>大気圧[kPa]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.revision">
            <summary>編集番号</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.standardAir">
            <summary>標準空気</summary>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.#cctor">
            <summary>静的コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.#ctor(System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="dryBulbTemp">乾球温度[K]</param>
            <param name="absoluteHumidity">絶対湿度[kg/kg]</param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.#ctor(Popolo.Utility.Property.ImmutableMoistAir)">
            <summary>コピーコンストラクタ</summary>
            <param name="moistAir">コピーする湿り空気状態</param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedDrybulbTemperature(System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>飽和乾球温度[C]を求める</summary>
            <param name="val">基準となる物性値</param>
            <param name="airProperty">基準となる物性種類</param>
            <returns>飽和乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedDrybulbTemperature(System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>飽和乾球温度[C]を求める</summary>
            <param name="val">基準となる物性値</param>
            <param name="airProperty">基準となる物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>飽和乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedAbsoluteHumidity(System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>飽和絶対湿度[kg/kg(DA)]を求める</summary>
            <param name="val">基準となる物性値</param>
            <param name="airProperty">基準となる物性種類</param>
            <returns>飽和絶対湿度[kg/kg(DA)]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedAbsoluteHumidity(System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>飽和絶対湿度[kg/kg(DA)]を求める</summary>
            <param name="val">基準となる物性値</param>
            <param name="airProperty">基準となる物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>飽和絶対湿度[kg/kg(DA)]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedEnthalpy(System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>飽和エンタルピー[kJ/kg]を求める</summary>
            <param name="val">基準となる物性値</param>
            <param name="airProperty">基準となる物性種類</param>
            <returns>飽和エンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedEnthalpy(System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>飽和エンタルピー[kJ/kg]を求める</summary>
            <param name="val">基準となる物性値</param>
            <param name="airProperty">基準となる物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>飽和エンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirState(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,Popolo.Utility.Property.MoistAir.Property)">
            <summary>2種の空気状態をもとに空気状態を特定する</summary>
            <param name="valueA">空気状態値1</param>
            <param name="valueB">空気状態値2</param>
            <param name="propertyA">空気状態種類1</param>
            <param name="propertyB">空気状態種類1</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirState(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>2種の空気状態をもとに空気状態を特定する</summary>
            <param name="valueA">空気状態値1</param>
            <param name="valueB">空気状態値2</param>
            <param name="propertyA">空気状態種類1</param>
            <param name="propertyB">空気状態種類1</param>
            <param name="atm">気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBWB(System.Double,System.Double)">
            <summary>乾球温度[C]および湿球温度[C]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBWB(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]および湿球温度[C]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBWB(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>乾球温度[C]および湿球温度[C]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBWB(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>乾球温度[C]および湿球温度[C]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBAH(System.Double,System.Double)">
            <summary>乾球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBAH(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBAH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>乾球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBAH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>乾球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBRH(System.Double,System.Double)">
            <summary>乾球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBRH(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBRH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>乾球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBRH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>乾球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBEN(System.Double,System.Double)">
            <summary>乾球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBEN(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>乾球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>乾球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBSV(System.Double,System.Double)">
            <summary>乾球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBSV(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>乾球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromDBSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>乾球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="dryBulbTemp">乾球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBAH(System.Double,System.Double)">
            <summary>湿球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBAH(System.Double,System.Double,System.Double)">
            <summary>湿球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBAH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>湿球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBAH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>湿球温度[C]および絶対湿度[kg/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBRH(System.Double,System.Double)">
            <summary>湿球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBRH(System.Double,System.Double,System.Double)">
            <summary>湿球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBRH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>湿球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBRH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>湿球温度[C]および相対湿度[%]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBEN(System.Double,System.Double)">
            <summary>湿球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBEN(System.Double,System.Double,System.Double)">
            <summary>湿球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>湿球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>湿球温度[C]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBSV(System.Double,System.Double)">
            <summary>湿球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBSV(System.Double,System.Double,System.Double)">
            <summary>湿球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>湿球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromWBSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>湿球温度[C]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHRH(System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]および相対湿度[%]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHRH(System.Double,System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]および相対湿度[%]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHRH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>絶対湿度[kg/kg]および相対湿度[%]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHRH(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>絶対湿度[kg/kg]および相対湿度[%]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHEN(System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHEN(System.Double,System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>絶対湿度[kg/kg]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>絶対湿度[kg/kg]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHSV(System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHSV(System.Double,System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>絶対湿度[kg/kg]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromAHSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>絶対湿度[kg/kg]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHEN(System.Double,System.Double)">
            <summary>相対湿度[%]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHEN(System.Double,System.Double,System.Double)">
            <summary>相対湿度[%]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>相対湿度[%]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHEN(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>相対湿度[%]およびエンタルピー[kJ/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHSV(System.Double,System.Double)">
            <summary>相対湿度[%]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHSV(System.Double,System.Double,System.Double)">
            <summary>相対湿度[%]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property)">
            <summary>相対湿度[%]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAirStateFromRHSV(System.Double,System.Double,Popolo.Utility.Property.MoistAir.Property,System.Double)">
            <summary>相対湿度[%]および比容積[m3/kg]から空気状態を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="airProperty">計算する物性種類</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetAtmosphericPressure(System.Double)">
            <summary>海抜[m]に応じた大気圧[kPa]を取得する</summary>
            <param name="altitude">海抜[m]</param>
            <returns>大気圧[kPa]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSaturatedVaporPressure(System.Double)">
            <summary>乾球温度[℃]から飽和水蒸気分圧[kPa]を求める</summary>
            <param name="dryBulbTemperature">乾球温度[℃]</param>
            <returns>飽和水蒸気分圧[kPa]</returns>
            <remarks>Wexler-Hylandによる式</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetSpecificHeat(System.Double)">
            <summary>湿り空気比熱[kJ/kg-K]を計算する</summary>
            <param name="absoluteHumidity">絶対湿度[kg/kg(DA)]</param>
            <returns>湿り空気比熱[kJ/kg-K]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetWaterVaporPressure(System.Double,System.Double)">
            <summary>水蒸気圧[kPa]を取得する</summary>
            <param name="absolteHumidity">絶対湿度[kg/kg(DA)]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>水蒸気圧[kPa]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetWaterVaporPressure(System.Double)">
            <summary>水蒸気圧[kPa]を取得する</summary>
            <param name="absoluteHumidity">絶対湿度[kg/kg(DA)]</param>
            <returns>水蒸気圧[kPa]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetDynamicViscosity(System.Double)">
            <summary>動粘性係数[m2/s]を計算する</summary>
            <param name="drybulbTemperature">乾球温度[C]</param>
            <returns>動粘性係数[m2/s]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetThermalConductivity(System.Double)">
            <summary>熱伝導率[W/(mK)]を計算する</summary>
            <param name="drybulbTemperature">乾球温度[C]</param>
            <returns>熱伝導率[W/(mK)]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.BlendAir(Popolo.Utility.Property.ImmutableMoistAir[],System.Double[])">
            <summary>空気を混合する</summary>
            <param name="air">混合する空気の配列</param>
            <param name="rate">混合空気の割合</param>
            <returns>混合済み空気</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.BlendAir(System.Double[],System.Double[],System.Double[])">
            <summary>空気を混合する</summary>
            <param name="temp">混合する空気の乾球温度[K]の配列</param>
            <param name="wet">混合する空気の絶対湿度[kg/kg]の配列</param>
            <param name="rate">混合する空気の割合</param>
            <returns>混合済み空気</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.BlendAir(Popolo.Utility.Property.ImmutableMoistAir,Popolo.Utility.Property.ImmutableMoistAir,System.Double,System.Double)">
            <summary>空気を混合する</summary>
            <param name="air1">混合空気1</param>
            <param name="air2">混合空気2</param>
            <param name="air1Rate">空気1混合割合</param>
            <param name="air2Rate">空気2混合割合</param>
            <returns>混合空気</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CalculateHeatDifference(Popolo.Utility.Property.ImmutableMoistAir,Popolo.Utility.Property.ImmutableMoistAir,System.Double@,System.Double@)">
            <summary>湿り空気の顕熱差[kJ/kg]および潜熱差[kJ/kg]を計算する</summary>
            <param name="mAir1">比較湿り空気状態</param>
            <param name="mAir2">基準湿り空気状態</param>
            <param name="sensibleHeat">顕熱差[kJ/kg]</param>
            <param name="latentHeat">潜熱差[kJ/kg]</param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CalculateSensibleHeatDifference(Popolo.Utility.Property.ImmutableMoistAir,Popolo.Utility.Property.ImmutableMoistAir)">
            <summary>湿り空気の顕熱差[kJ/kg]を計算する</summary>
            <param name="mAir1">比較湿り空気状態</param>
            <param name="mAir2">基準湿り空気状態</param>
            <returns>顕熱差[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CalculateLatentHeatDifference(Popolo.Utility.Property.ImmutableMoistAir,Popolo.Utility.Property.ImmutableMoistAir)">
            <summary>湿り空気の潜熱差[kJ/kg]を計算する</summary>
            <param name="mAir1">比較湿り空気状態</param>
            <param name="mAir2">基準湿り空気状態</param>
            <returns>潜熱差[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CalculateSensibleAndLatentHeat(Popolo.Utility.Property.ImmutableMoistAir,System.Double@,System.Double@)">
            <summary>湿り空気の顕熱[kJ/kg]および潜熱[kJ/kg]を計算する</summary>
            <param name="mAir">湿り空気状態</param>
            <param name="sensibleHeat">顕熱[kJ/kg]</param>
            <param name="latentHeat">潜熱[kJ/kg]</param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CalculateSensibleHeat(Popolo.Utility.Property.ImmutableMoistAir)">
            <summary>湿り空気の顕熱[kJ/kg]を計算する</summary>
            <param name="mAir">湿り空気</param>
            <returns>顕熱[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CalculateLatentHeat(Popolo.Utility.Property.ImmutableMoistAir)">
            <summary>湿り空気の潜熱[kJ/kg]を計算する</summary>
            <param name="mAir">湿り空気</param>
            <returns>潜熱[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.CopyTo(Popolo.Utility.Property.MoistAir)">
            <summary>空気状態をコピーする</summary>
            <param name="air">コピー先の空気</param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.Clone">
            <summary>MoistAirオブジェクトの複製を返す</summary>
            <returns>MoistAirオブジェクトの複製</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>MoistAirシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fpws(System.Double)">
            <summary>乾球温度[℃]から飽和水蒸気分圧[kPa]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <returns>飽和水蒸気分圧[kPa]</returns>
            <remarks>Wexler-Hylandによる式</remarks>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.ftdew(System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]と大気圧[kPa]から露点温度[℃]を求める</summary>
            <param name="w">絶対湿度[kg/kg]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>露点温度[℃]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fpww(System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]と大気圧[kPa]から水蒸気分圧[kPa]を求める</summary>
            <param name="w">絶対湿度[kg/kg]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>水蒸気分圧[kPa]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fwpw(System.Double,System.Double)">
            <summary>水蒸気分圧[kPa]と大気圧[kPa]から絶対湿度[kg/kg]を求める</summary>
            <param name="pw">水蒸気分圧[kPa]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>絶対湿度[kg/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fwphi(System.Double,System.Double,System.Double)">
            <summary>乾球温度[℃]と相対湿度[%]と大気圧[kPa]から絶対湿度[kg/kg]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <param name="phi">相対湿度[%]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>絶対湿度[kg/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fwtwb(System.Double,System.Double,System.Double)">
            <summary>乾球温度[℃]と湿球温度[℃]と大気圧[kPa]から絶対湿度[kg/kg]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <param name="twb">湿球温度[℃]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>絶対湿度[kg/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fwha(System.Double,System.Double)">
            <summary>乾球温度[℃]とエンタルピー[kJ/kg]から絶対湿度[kg/kg]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <param name="ha">エンタルピー[kJ/kg]</param>
            <returns>絶対湿度[kg/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.ftdb(System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]とエンタルピー[kJ/kg]から乾球温度[℃]を求める</summary>
            <param name="w">絶対湿度[kg/kg]</param>
            <param name="ha">エンタルピー[kJ/kg]</param>
            <returns>乾球温度[℃]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fphi(System.Double,System.Double,System.Double)">
            <summary>乾球温度[℃]と絶対湿度[kg/kg]と大気圧[kPa]から相対湿度[%]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <param name="w">絶対湿度[kg/kg]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>相対湿度[%]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fhair(System.Double,System.Double)">
            <summary>乾球温度[℃]と絶対湿度[kg/kg]からエンタルピー[kJ/kg]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <param name="w">絶対湿度[kg/kg]</param>
            <returns>エンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fhsat(System.Double,System.Double)">
            <summary>飽和温度[℃]と大気圧[kPa]から飽和エンタルピー[kJ/kg]を求める</summary>
            <param name="tsat">飽和温度[℃]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>飽和エンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.ftsat(System.Double,System.Double)">
            <summary>飽和エンタルピー[kJ/kg]と大気圧[kPa]から飽和温度[℃]を求める</summary>
            <param name="hs">飽和エンタルピー[kJ/kg]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>飽和温度[℃]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.ftwb(System.Double,System.Double,System.Double)">
            <summary>乾球温度[℃]と絶対湿度[kg/kg]と大気圧[kPa]から湿球温度[℃]を求める</summary>
            <param name="tdb">乾球温度[℃]</param>
            <param name="w">絶対湿度[kg/kg]</param>
            <param name="patm">大気圧[kPa]：1気圧は101.325[kPa]</param>
            <returns>湿球温度[℃]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.getDryBulbTemperatureFromRHSV(System.Double,System.Double,System.Double)">
            <summary>相対湿度[%]および比容積[m3/kg]から乾球温度[C]を求める</summary>
            <param name="relativeHumidity">相対湿度[%]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.getDryBulbTemperatureFromWBSV(System.Double,System.Double,System.Double)">
            <summary>湿球温度[C]および比容積[m3/kg]から乾球温度[C]を求める</summary>
            <param name="wbTemp">湿球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.getSpecificVolumeFromDBAH(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]および絶対湿度[kg/kg]から湿り空気の比容積[m3/kg]を求める</summary>
            <param name="dbTemp">乾球温度[C]</param>
            <param name="absoluteHumidity">絶対湿度[kg/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>比容積[m3/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.getDryBulbTemperatureFromSVAH(System.Double,System.Double,System.Double)">
            <summary>比容積[m3/kg]および絶対湿度[kg/kg]から乾球温度[C]を求める</summary>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="absoluteHumidity">絶対湿度[kg/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.getAbsoluteHumidityFromDBSV(System.Double,System.Double,System.Double)">
            <summary>乾球温度[C]および比容積[m3/kg]から絶対湿度[kg/kg]を求める</summary>
            <param name="dryBulbTemperature">乾球温度[C]</param>
            <param name="specificVolume">比容積[m3/kg]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>絶対湿度[kg/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fhc(System.Double)">
            <summary>水の温度から水の比エンタルピー[kJ/kg]を計算する</summary>
            <param name="waterTemp">水温度</param>
            <returns>比エンタルピー[kJ/kg]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fwwbdb(System.Double,System.Double,System.Double)">
            <summary>絶対湿度[kg/kg]と湿球温度[C]から乾球温度[C]を計算する</summary>
            <param name="absoluteHumid">絶対湿度[kg/kg]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.ftpws(System.Double)">
            <summary>飽和蒸気分圧[kPa]から乾球温度[C]を計算する</summary>
            <param name="pws">飽和蒸気分圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fndbrw(System.Double,System.Double,System.Double)">
            <summary>相対湿度[%]と湿球温度[C]から乾球温度[C]を計算する</summary>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fndbhw(System.Double,System.Double,System.Double)">
            <summary>エンタルピー[kJ/kg]と湿球温度[C]から乾球温度[C]を計算する</summary>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="wetBulbTemp">湿球温度[C]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.fndbrh(System.Double,System.Double,System.Double)">
            <summary>相対湿度[%]とエンタルピー[kJ/kg]から乾球温度[C]を計算する</summary>
            <param name="enthalpy">エンタルピー[kJ/kg]</param>
            <param name="relativeHumid">相対湿度[%]</param>
            <param name="atm">大気圧[kPa]</param>
            <returns>乾球温度[C]</returns>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.DryAirSpecificHeat">
            <summary>乾き空気比熱[kJ/kg-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.LatentHeatOfVaporization">
            <summary>水の蒸発潜熱[kJ/kg]</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.DryBulbTemperature">
            <summary>乾球温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.WetBulbTemperature">
            <summary>湿球温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.AbsoluteHumidity">
            <summary>絶対湿度[kg/kg(DA)]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.RelativeHumidity">
            <summary>相対湿度[%]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.Enthalpy">
            <summary>エンタルピー[kJ/kg]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.SpecificVolume">
            <summary>比容積[m3/kg]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.AtmosphericPressure">
            <summary>大気圧[kPa]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.Revision">
            <summary>編集番号を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Property.MoistAir.Property">
            <summary>湿り空気物性種類</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.DryBulbTemperature">
            <summary>乾球温度[CDB]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.WetBulbTemperature">
            <summary>湿球温度[CWB]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.AbsoluteHumidity">
            <summary>絶対湿度[kg/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.RelativeHumidity">
            <summary>相対湿度[%]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.Enthalpy">
            <summary>エンタルピー[kJ/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.WaterPartialPressure">
            <summary>水蒸気分圧[kPa]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.SpecificVolume">
            <summary>比容積[m3/kg]</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.Property.SaturatedTemperature">
            <summary>飽和温度[C]</summary>
        </member>
        <member name="T:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException">
            <summary>入力データが計算可能な範囲内にない場合の例外</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.maxValue">
            <summary>変数の現在値、下限値、上限値</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.minValue">
            <summary>変数の現在値、下限値、上限値</summary>
        </member>
        <member name="F:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.currentValue">
            <summary>変数の現在値、下限値、上限値</summary>
        </member>
        <member name="M:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.#ctor(System.String,System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="message">提示する例外メッセージ</param>
            <param name="maxValue">計算可能な上限値</param>
            <param name="minValue">計算可能な下限値</param>
            <param name="currentValue">変数の現在値</param>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.MaxValue">
            <summary>計算可能な上限値</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.MinValue">
            <summary>計算可能な下限値</summary>
        </member>
        <member name="P:Popolo.Utility.Property.MoistAir.InputValueOutOfRangeException.CurrentValue">
            <summary>変数の現在値</summary>
        </member>
        <member name="T:Popolo.Utility.TSC21.TSCNamingCode">
            <summary>TSC21 NamingCodeユーティリティクラス</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.BodyPart">
            <summary>体の部位</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.ImmutableBodyPart">
            <summary>体の部位（読み取り専用）</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetSensibleHeatLoss">
            <summary>顕熱損失[W]を計算する</summary>
            <returns>顕熱損失[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetBloodFlow(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>血流量[L/h]を取得する</summary>
            <param name="bType">血管の種類</param>
            <returns>血流量[L/h]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetHeatCapacity(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>部位の熱容量[Wh/K]を取得する</summary>
            <param name="component">部位</param>
            <returns>部位の熱容量[Wh/K]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetTemperature(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>温度[C]を取得する</summary>
            <param name="component">部位</param>
            <returns>温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetHeatConductance(Popolo.Utility.ThermalComfort.BodyPart.Segments,Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>部位間の熱コンダクタンス[W/K]を取得する</summary>
            <param name="component1">部位1</param>
            <param name="component2">部位2</param>
            <returns>部位間の熱コンダクタンス[W/K]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetMetabolicRate(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>代謝量[W]を取得する</summary>
            <param name="component">部位</param>
            <returns>代謝量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.ImmutableBodyPart.GetHeatTransfer(Popolo.Utility.ThermalComfort.BodyPart.Segments,Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>部位1から部位2への熱移動量[W]を計算する</summary>
            <param name="component1">部位1</param>
            <param name="component2">部位2</param>
            <returns>部位1から部位2への熱移動量[W]</returns>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.IsJOSModel">
            <summary>JOSモデル（脂肪層および筋肉層をコア層に統合）か否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.Body">
            <summary>体を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.Position">
            <summary>体の部位を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.SurfaceArea">
            <summary>体表面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.Weight">
            <summary>重量[kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.FatPercentage">
            <summary>体脂肪率[%]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.WorkLoad">
            <summary>仕事量[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.HeatConductance_Skin_Material">
            <summary>皮膚-物体間の熱コンダクタンス[W/(m2 K)]を取得する</summary>
            <remarks>単位はW/(m2 K)</remarks>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.HeatConductance_Skin_Air">
            <summary>皮膚-空気間の熱コンダクタンス[W/K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.LatentHeatConductance_Skin_Air">
            <summary>皮膚-空気間の湿気熱コンダクタンス[W/kPa]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.RadiativeHeatTransferCoefficient">
            <summary>放射熱伝達率[W/(m2 K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.ConvectiveHeatTransferCoefficient">
            <summary>対流熱伝達率[W/(m2 K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.SkinTemperature_Contact">
            <summary>接触部の皮膚温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.SkinTemperature_NonContact">
            <summary>非接触部の皮膚温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.ContactPortionRate">
            <summary>皮膚接触部の割合[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.NonContactPortionRate">
            <summary>皮膚非接触部の割合[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.ClothingIndex">
            <summary>着衣量[clo]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.SetPoint_Core">
            <summary>コアのセットポイント[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.SetPoint_Skin">
            <summary>皮膚のセットポイント[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.EvaporativeHeatLoss_Sweat">
            <summary>発汗による蒸発熱損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.EvaporativeHeatLoss">
            <summary>発汗および不感蒸泄による蒸発熱損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.ShiveringLoad">
            <summary>ふるえによる熱生成量[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.MaterialTemperature">
            <summary>接触物体の温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.RelativeHumidity">
            <summary>近傍の空気の相対湿度[%]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.MeanRadiantTemperature">
            <summary>平均放射温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.DrybulbTemperature">
            <summary>近傍の空気の乾球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.Velocity">
            <summary>気流速度[m/s]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.OperativeTemperature">
            <summary>作用温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.BodyPartConnectTo">
            <summary>接続先の体の部位一覧を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.ImmutableBodyPart.BodyPartConnectFrom">
            <summary>接続もとの体の部位を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.LOUIS_COEFFICIENT">
            <summary>ルイス係数[K/kPa]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.isJOSModel">
            <summary>JOSモデル（脂肪層および筋肉層をコア層に統合）か否か</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bpConnectTo">
            <summary>接続先の体部位</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bpConnectFrom">
            <summary>接続元の体部位</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.avaRate">
            <summary>AVA血管への血流割合</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.contactPortionRate">
            <summary>皮膚接触部の割合[-]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.clothingIndex">
            <summary>着衣量[clo]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.velocity">
            <summary>気流速度[m/s]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.baseBloodFlow_Skin">
            <summary>皮膚の基礎血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.baseBloodFlow_Muscle">
            <summary>筋肉層の基礎血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_AVA">
            <summary>AVA血流量[L/h]</summary>
            <remarks>四肢末端部のみ有効</remarks>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_Core">
            <summary>コア部血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_Muscle">
            <summary>筋肉層血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_Fat">
            <summary>脂肪層血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_Skin">
            <summary>皮膚部血流量[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_Artery">
            <summary>動脈血流[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_SuperficialVein">
            <summary>表在静脈血流[L/h]</summary>
            <remarks>腕や足のみ有効</remarks>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.bloodFlow_DeepVein">
            <summary>深部動脈血流[L/h]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_Skin">
            <summary>皮膚層の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_Artery">
            <summary>動脈の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_DeepVein">
            <summary>深部静脈の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_SuperficialVein">
            <summary>表在静脈の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_Core">
            <summary>コア部の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_Fat">
            <summary>脂肪層の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatCapacity_Muscle">
            <summary>筋肉層の熱容量[Wh/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.coreTemperature">
            <summary>コアの温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.arteryTemperature">
            <summary>動脈の温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.deepVeinTemperature">
            <summary>深部静脈の温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.superficialVeinTemperature">
            <summary>表在静脈の温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.muscleTemperature">
            <summary>筋肉の温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.fatTemperature">
            <summary>脂肪の温度[C]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_Core_Skin">
            <summary>コア-皮膚間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_Artery_DeepVein">
            <summary>動脈-深部静脈間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_Vein_Core">
            <summary>血管(動脈・静脈共通)-コア間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_SuperficialVein_Skin">
            <summary>表在静脈-皮膚間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_Core_Muscle">
            <summary>コア層-筋肉層間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_Muscle_Fat">
            <summary>筋肉層-脂肪層間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.heatConductance_Fat_Skin">
            <summary>脂肪層-皮膚層間の熱コンダクタンス[W/K]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.metabolicRate_Core">
            <summary>コア部の代謝量[W]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.metabolicRate_Muscle">
            <summary>筋肉層の代謝量[W]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.metabolicRate_Fat">
            <summary>脂肪層の代謝量[W]</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.metabolicRate_Skin">
            <summary>皮膚部の代謝量[W]</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.#ctor(Popolo.Utility.ThermalComfort.HumanBody,Popolo.Utility.ThermalComfort.HumanBody.Nodes)">
            <summary>コンストラクタ</summary>
            <param name="body">体</param>
            <param name="position">部位情報</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initSurfaceArea">
            <summary>体表面積[m2]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initWeight">
            <summary>重量[kg]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initHeatCapacity">
            <summary>熱容量[Wh/K]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initMetabolicRate">
            <summary>基礎代謝量[W]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initHeatConductance">
            <summary>熱コンダクタンス[W/K]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initInternalBloodFlow">
            <summary>部位内の血流量[L/h]を初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetSensibleHeatLoss">
            <summary>皮膚からの顕熱損失[W]を計算する</summary>
            <returns>皮膚からの顕熱損失[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetHeatCapacity(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>各部位の熱容量[Wh/K]を取得する</summary>
            <param name="segment">部位</param>
            <returns>各部位の熱容量[Wh/K]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetTemperature(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>各部位の温度[C]を取得する</summary>
            <param name="segment">部位</param>
            <returns>各部位の温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetHeatConductance(Popolo.Utility.ThermalComfort.BodyPart.Segments,Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>部位間の熱コンダクタンス[W/K]を取得する</summary>
            <param name="segment1">部位1</param>
            <param name="segment2">部位2</param>
            <returns>部位間の熱コンダクタンス[W/K]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetMetabolicRate(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>各部位の代謝量[W]を取得する</summary>
            <param name="component">部位</param>
            <returns>各部位の代謝量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetBloodFlow(Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>各部位の血流量[L/h]を取得する</summary>
            <param name="segment">血管の種類</param>
            <returns>各部位の血流量[L/h]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.GetHeatTransfer(Popolo.Utility.ThermalComfort.BodyPart.Segments,Popolo.Utility.ThermalComfort.BodyPart.Segments)">
            <summary>部位1から部位2への熱移動量[W]を計算する</summary>
            <param name="segment1">部位1</param>
            <param name="segment2">部位2</param>
            <returns>部位1から部位2への熱移動量[W]</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.setContactPortionRate(System.Double)">
            <summary>接触部の割合[-]を設定する</summary>
            <param name="contactPortionRate">接触部の割合[-]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.makeMatrix(GSLNET.VectorView@,GSLNET.MatrixView@)">
            <summary>行列要素を設定する</summary>
            <param name="zm">ZMベクトル（要素の単位は全てW）</param>
            <param name="bm">BM行列（要素の単位は全てW/K）</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.makeJOSMatrix(GSLNET.VectorView@,GSLNET.MatrixView@)">
            <summary>行列要素を設定する(JOSモデル)</summary>
            <param name="zm">ZMベクトル（要素の単位は全てW）</param>
            <param name="bm">BM行列（要素の単位は全てW/K）</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.make132MNMatrix(GSLNET.VectorView@,GSLNET.MatrixView@)">
            <summary>行列要素を設定する(132MNモデル)</summary>
            <param name="zm">ZMベクトル（要素の単位は全てW）</param>
            <param name="bm">BM行列（要素の単位は全てW/K）</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.setTemperature(GSLNET.VectorView)">
            <summary>温度[C]を設定する</summary>
            <param name="temperatures">温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.initializeTemperature(System.Double)">
            <summary>体の温度[C]を初期化する</summary>
            <param name="temperature">体の温度[C]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.connect(Popolo.Utility.ThermalComfort.BodyPart)">
            <summary>体の部位を接続する</summary>
            <param name="bpConnectTo">接続先の体の部位</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.setWorkLoad(System.Double)">
            <summary>仕事による負荷[W]を設定する</summary>
            <param name="workLoad">仕事による負荷[W]</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.updateBloodFlow">
            <summary>血流量[L/h]を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.updatePosture">
            <summary>姿勢を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.updateConvectiveHeatTransferCoefficients">
            <summary>対流熱伝達率[W/(m2 K)]を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.updateHeatConductance_Skin_Air">
            <summary>皮膚-相当温度の熱コンダクタンスを更新する</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.getPartSignal">
            <summary>体温調節用の部位温冷感シグナルを計算する</summary>
            <returns>部位温冷感シグナル</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.setBodySignal(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>体温調節用の全身温冷感シグナルを設定する</summary>
            <param name="signal">体温調節用の全身温冷感シグナル</param>
            <param name="sweatSignal">発汗シグナル</param>
            <param name="shiveringSignal">ふるえシグナル</param>
            <param name="ectasiaSignal">血管拡張シグナル</param>
            <param name="coarctationSignal">血管収縮シグナル</param>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.BodyPart.setAVARate(System.Double)">
            <summary>AVA血管への割合[-]を設定する</summary>
            <param name="avaRate">AVA血管への割合[-]</param>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.IsJOSModel">
            <summary>JOSモデル（脂肪層および筋肉層をコア層に統合）か否かを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.Body">
            <summary>体を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.Position">
            <summary>体の部位を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.SurfaceArea">
            <summary>体表面積[m2]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.Weight">
            <summary>重量[kg]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.FatPercentage">
            <summary>体脂肪率[%]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.WorkLoad">
            <summary>仕事量[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.HeatConductance_Skin_Material">
            <summary>皮膚-物体間の熱コンダクタンス[W/(m2 K)]を取得する</summary>
            <remarks>単位はW/(m2 K)</remarks>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.HeatConductance_Skin_Air">
            <summary>皮膚-空気間の熱コンダクタンス[W/K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.LatentHeatConductance_Skin_Air">
            <summary>皮膚-空気間の湿気熱コンダクタンス[W/kPa]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.RadiativeHeatTransferCoefficient">
            <summary>放射熱伝達率[W/(m2 K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.ConvectiveHeatTransferCoefficient">
            <summary>対流熱伝達率[W/(m2 K)]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.SkinTemperature_Contact">
            <summary>接触部の皮膚温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.SkinTemperature_NonContact">
            <summary>非接触部の皮膚温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.ContactPortionRate">
            <summary>皮膚接触部の割合[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.NonContactPortionRate">
            <summary>皮膚非接触部の割合[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.ClothingIndex">
            <summary>着衣量[clo]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.SetPoint_Core">
            <summary>コアのセットポイント[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.SetPoint_Skin">
            <summary>皮膚のセットポイント[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.EvaporativeHeatLoss_Sweat">
            <summary>発汗による蒸発熱損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.EvaporativeHeatLoss">
            <summary>発汗および不感蒸泄による蒸発熱損失[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.ShiveringLoad">
            <summary>ふるえによる熱生成量[W]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.MaterialTemperature">
            <summary>接触物体の温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.RelativeHumidity">
            <summary>近傍の空気の相対湿度[%]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.MeanRadiantTemperature">
            <summary>平均放射温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.DrybulbTemperature">
            <summary>近傍の空気の乾球温度[C]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.Velocity">
            <summary>気流速度[m/s]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.OperativeTemperature">
            <summary>作用温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.BodyPartConnectTo">
            <summary>接続先の体の部位一覧を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.ThermalComfort.BodyPart.BodyPartConnectFrom">
            <summary>接続もとの体の部位を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.BodyPart.Segments">
            <summary>要素</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.None">
            <summary>無し</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.Core">
            <summary>コア層</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.Muscle">
            <summary>筋肉層</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.Fat">
            <summary>脂肪層</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.Skin">
            <summary>皮膚層</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.Artery">
            <summary>動脈</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.SuperficialVein">
            <summary>表在静脈</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.DeepVein">
            <summary>深部動脈</summary>
        </member>
        <member name="F:Popolo.Utility.ThermalComfort.BodyPart.Segments.AVA">
            <summary>AVA</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Tube">
            <summary>壁体内に埋め込むチューブ</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableTube">
            <summary>壁体内に埋め込むチューブ（読み取り専用）</summary>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.ImmutableTube.FlowRateChangeEvent">
            <summary>イベント定義</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableTube.Epsilon">
            <summary>熱通過有効度[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableTube.FluidSpecificHeat">
            <summary>流体の比熱[J/kg-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableTube.FluidFlowRate">
            <summary>流体の流量[kg/s]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableTube.FinEfficiency">
            <summary>フィン効率[-]を取得する</summary>
            <remarks>満遍なくチューブが敷き詰められている場合には1.0とする</remarks>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableTube.FluidTemperature">
            <summary>流体の温度[C]を取得する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Tube.#ctor(System.Double,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="epsilon">熱通過有効度[-]</param>
            <param name="finEfficiency">フィン効率[-]</param>
            <param name="fluidSpecificHeat">流体の比熱[J/kg-K]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Tube.SetFlowRate(System.Double)">
            <summary>流体の流量[kg/s]を設定する</summary>
            <param name="flowRate">流体の流量[kg/s]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Tube.GetOutletFluidTemperature(System.Double)">
            <summary>流体への熱移動[W]を指定して流体の出口温度[C]を計算する</summary>
            <param name="heatTransferToFluid">流体への熱移動[W]</param>
            <returns>流体の出口温度[C]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.Tube.GetOutletFluidTemperature">
            <summary>流体の出口温度[C]を計算する</summary>
            <returns>流体の出口温度[C]</returns>
        </member>
        <member name="E:Popolo.Utility.LoadCalculation.Tube.FlowRateChangeEvent">
            <summary>イベント定義</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Tube.Epsilon">
            <summary>熱通過有効度[-]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Tube.FluidSpecificHeat">
            <summary>流体の比熱[J/kg-K]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Tube.FluidFlowRate">
            <summary>流体の流量[kg/s]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Tube.FinEfficiency">
            <summary>フィン効率[-]を取得する</summary>
            <remarks>満遍なくチューブが敷き詰められている場合には1.0とする</remarks>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Tube.FluidTemperature">
            <summary>流体の温度[C]を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.Tube.HeatTransferToFluid">
            <summary>チューブへの熱移動量[W]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.Tube.FlowRateChangeEventHandler">
            <summary>delegate宣言</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Popolo.Utility.Schedule.Seasons">
            <summary>季節クラス</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.ImmutableSeasons">
            <summary>読み取り専用Seasonsインターフェース</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableSeasons.GetSeasonName(System.Int32)">
            <summary>季節名称を取得する</summary>
            <param name="seasonIndex">季節番号</param>
            <returns>季節名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableSeasons.GetSeason(System.Int32,System.String@,System.DateTime@,System.DateTime@)">
            <summary>季節情報を取得する</summary>
            <param name="seasonIndex">季節番号</param>
            <param name="seasonName">季節名称</param>
            <param name="seasonStartDTime">季節開始月日</param>
            <param name="seasonEndDTime">季節終了月日</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableSeasons.GetSeasons(System.String,System.DateTime[]@,System.DateTime[]@)">
            <summary>季節情報を取得する</summary>
            <param name="seasonName">季節名称</param>
            <param name="seasonStartDTimes">季節開始月日リスト</param>
            <param name="seasonEndDTimes">季節終了月日リスト</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.ImmutableSeasons.Count">
            <summary>定義した時間帯数を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.YEAR">
            <summary>スケジュール定義する年（閏年に関係）</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.id">
            <summary>ID</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.name">
            <summary>名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.seasonNames">
            <summary>季節名称リスト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.seasonStartDTimes">
            <summary>季節開始月日リスト（名称リスト数+1のリストとなる）</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.#ctor(Popolo.Utility.Schedule.Seasons.PredefinedSeasons)">
            <summary>コンストラクタ</summary>
            <param name="predefinedSeasons">定義済みの季節</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.Initialize(Popolo.Utility.Schedule.Seasons.PredefinedSeasons)">
            <summary>定義済の季節で初期化する</summary>
            <param name="predefinedSeasons">定義済みの季節</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.AddSeason(System.String,System.DateTime)">
            <summary>季節を追加する</summary>
            <param name="seasonName">季節名称</param>
            <param name="seasonStartDTime">季節開始月日</param>
            <returns>追加成功の真偽（指定月日に既に季節が定義されている場合は失敗）</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.GetSeasonName(System.Int32)">
            <summary>季節名称を取得する</summary>
            <param name="seasonIndex">季節番号</param>
            <returns>季節名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.GetSeason(System.Int32,System.String@,System.DateTime@,System.DateTime@)">
            <summary>季節情報を取得する</summary>
            <param name="seasonIndex">季節番号</param>
            <param name="seasonName">季節名称</param>
            <param name="seasonStartDTime">季節開始月日</param>
            <param name="seasonEndDTime">季節終了月日</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.GetSeasons(System.String,System.DateTime[]@,System.DateTime[]@)">
            <summary>季節情報を取得する</summary>
            <param name="seasonName">季節名称</param>
            <param name="seasonStartDTimes">季節開始月日リスト</param>
            <param name="seasonEndDTimes">季節終了月日リスト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.RemoveSeason(System.Int32)">
            <summary>季節を削除する</summary>
            <param name="seasonIndex">季節番号</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.ChangeSeasonName(System.Int32,System.String)">
            <summary>季節名称を変更する</summary>
            <param name="seasonIndex">季節番号</param>
            <param name="seasonName">季節名称</param>
            <returns>名称変更成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.ChangeSeasonDateTime(System.Int32,System.DateTime,System.Boolean)">
            <summary>季節端部月日を変更する</summary>
            <param name="seasonIndex">季節番号</param>
            <param name="seasonDateTime">季節端部月日</param>
            <param name="isStartDateTime">季節開始月日の設定か否か</param>
            <returns>季節端部月日を変更成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.GetTermNames">
            <summary>季節名称リストを取得する</summary>
            <returns>季節名称リスト</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.GetTermName(System.DateTime)">
            <summary>日付を指定して季節名称を取得する</summary>
            <param name="dateTime">日付</param>
            <returns>季節名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.Clone">
            <summary>Seasonsクラスの複製を返す</summary>
            <returns>Seasonsクラスの複製</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Seasons.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Seasonsシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="E:Popolo.Utility.Schedule.Seasons.NameChangeEvent">
            <summary>名称変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Seasons.SeasonAddEvent">
            <summary>季節追加イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Seasons.SeasonChangeEvent">
            <summary>季節変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Seasons.SeasonRemoveEvent">
            <summary>季節削除イベント</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Seasons.ID">
            <summary>IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Seasons.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Seasons.Count">
            <summary>定義した季節数を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Seasons.NameChangeEventHandler">
            <summary>名称変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Seasons.SeasonAddEventHandler">
            <summary>季節追加イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Seasons.SeasonChangeEventHandler">
            <summary>季節変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Seasons.SeasonRemoveEventHandler">
            <summary>季節削除イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Seasons.PredefinedSeasons">
            <summary>定義済みの季節</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.PredefinedSeasons.AllYear">
            <summary>年中</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.PredefinedSeasons.FourSeasons">
            <summary>四季</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.PredefinedSeasons.HeatLoadClassification">
            <summary>熱負荷計算用</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Seasons.PredefinedSeasons.Holiday">
            <summary>国民の祝日</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.SeasonsEventArgs">
            <summary>季節関連のEventArgs</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SeasonsEventArgs.seasonIndex">
            <summary>季節番号</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SeasonsEventArgs.seasonName">
            <summary>季節名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SeasonsEventArgs.seasonStart">
            <summary>季節開始月日</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SeasonsEventArgs.seasonEnd">
            <summary>季節終了月日</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.SeasonsEventArgs.#ctor(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>コンストラクタ</summary>
            <param name="seasonIndex">季節番号</param>
            <param name="seasonName">季節名称</param>
            <param name="seasonStart">季節開始月日</param>
            <param name="seasonEnd">季節終了月日</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.SeasonsEventArgs.SeasonIndex">
            <summary>季節番号を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.SeasonsEventArgs.SeasonName">
            <summary>季節名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.SeasonsEventArgs.SeasonStart">
            <summary>季節開始月日を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.SeasonsEventArgs.SeasonEnd">
            <summary>季節終了月日を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Node">
            <summary>節点クラス</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.ImmutableNode">
            <summary>読み取り専用接点</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableNode.ContainsChannel(Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>指定した流路を含むか否かを返す</summary>
            <param name="channel">流路</param>
            <returns>指定した流路を含む場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.ImmutableNode.GetTotalFlow">
            <summary>接点に流れ込む流量合算値を計算する</summary>
            <returns>接点に流れ込む流量合算値</returns>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.ID">
            <summary>IDを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.Name">
            <summary>名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.Potential">
            <summary>エネルギーを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.Capacity">
            <summary>容量を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.ChannelNumber">
            <summary>接続されている流路の数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.ExternalFlow">
            <summary>外部の系への流出流量を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.ImmutableNode.IsBoundaryNode">
            <summary>境界条件節点か否かの情報を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Node.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Node.capacity">
            <summary>容量</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Node.potential">
            <summary>エネルギー</summary>
        </member>
        <member name="F:Popolo.Utility.FluidNetwork.Node.channels">
            <summary>節点に接続されている流路リスト</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.#ctor(System.String,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="name">名称</param>
            <param name="capacity">容量</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.#ctor(System.String,System.Double,System.Double)">
            <summary>コンストラクタ</summary>
            <param name="name">名称</param>
            <param name="capacity">容量</param>
            <param name="initialPotential">エネルギー初期値</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.AddChannel(Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>流路を追加する</summary>
            <param name="channel">流路</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.RemoveChannel(Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>流路を削除する</summary>
            <param name="channel">流路</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.ContainsChannel(Popolo.Utility.FluidNetwork.ImmutableChannel)">
            <summary>指定した流路を含むか否かを返す</summary>
            <param name="channel">流路</param>
            <returns>指定した流路を含む場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.GetChannels">
            <summary>接続されている流路リストを取得する</summary>
            <returns>接続されている流路リスト</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.SetPotential(System.Double)">
            <summary>エネルギーを設定する</summary>
            <param name="potential">エネルギー</param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.GetTotalFlow">
            <summary>接点に流れ込む流量合算値を計算する</summary>
            <returns>接点に流れ込む流量合算値</returns>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>シリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.FluidNetwork.Node.Clone">
            <summary>複製を返す</summary>
            <returns>複製</returns>
        </member>
        <member name="E:Popolo.Utility.FluidNetwork.Node.PotentialChangeEvent">
            <summary>エネルギー変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.ID">
            <summary>IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.ExternalFlow">
            <summary>外部の系への流出流量を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.IsBoundaryNode">
            <summary>境界条件節点か否かの情報を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.Potential">
            <summary>エネルギーを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.ChannelNumber">
            <summary>接続されている流路の数を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.FluidNetwork.Node.Capacity">
            <summary>容量を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.FluidNetwork.Node.PotentialChangeEventHandler">
            <summary>エネルギー変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.MultiRoom">
            <summary>多数室</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.ImmutableMultiRoom">
            <summary>読み取り専用の多数室</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.ImmutableMultiRoom.GetAirFlow(Popolo.Utility.LoadCalculation.ImmutableZone,Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>室間換気量[m3/h]を取得する</summary>
            <param name="upstreamZone">上流（空気が吹き出す側）の室</param>
            <param name="downstreamZone">下流（空気を吸い込む側）の室</param>
            <returns>室間換気量[m3/h]</returns>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableMultiRoom.TimeStep">
            <summary>計算時間間隔[sec]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableMultiRoom.Rooms">
            <summary>室リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.ImmutableMultiRoom.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.hasFIOChanged">
            <summary>壁および窓のFIO変更フラグ</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.rooms">
            <summary>計算対象のRoomリストを保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.zones">
            <summary>ゾーンリストを保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.surfaces">
            <summary>表面リスト</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.xa">
            <summary>表面温度計算式の逆行列</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.phi">
            <summary>放射熱伝達比率[-]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.bMatrix">
            <summary>ゾーン室温計算用行列</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.xbMatrix">
            <summary>ゾーン室温計算用行列</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.bVector">
            <summary>ゾーン室温計算用ベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.bbVector">
            <summary>ゾーン室温計算用ベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.axRmIndices">
            <summary>AX行列におけるRoom要素の開始列数を保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.axZnIndices">
            <summary>AX行列におけるZone要素の開始列数を保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.sfToRm">
            <summary>表面とRoomとの対応を保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.znToRm">
            <summary>ZoneとRoomとの対応を保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.surfaceTemperatures">
            <summary>壁表面の温度[C]を保持するベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.surfaceMRTs">
            <summary>他の表面の平均温度[C]を保持するベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.rxVector">
            <summary>各ゾーンのRX,RAを保持するベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.crxVector">
            <summary>定数項を保持するベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.craVector">
            <summary>定数項を保持するベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.tzVector">
            <summary>ゾーン空気温度を保持するベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.sfNumber">
            <summary>各Roomに含まれる壁表面の数を保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.znNumber">
            <summary>各Roomに含まれるゾーンの数を保持</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.arMatrix">
            <summary>ARマトリクス</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.caVector">
            <summary>CAベクトル</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.arbPerm">
            <summary>ARとBの置換行列配列</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.timeStep">
            <summary>計算時間間隔[sec]</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.MultiRoom.airFlowToZone">
            <summary>室間換気量[m3/h]を保持（室へ流入する流量）</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.#ctor(Popolo.Utility.LoadCalculation.Room[])">
            <summary>コンストラクタ</summary>
            <param name="rooms">計算対象のRoomリスト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.Initialize">
            <summary>初期化処理</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.sf_FIOChangeEvent(System.Object,System.EventArgs)">
            <summary>壁および窓のFIおよびFO変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.UpdateRoomHumidities">
            <summary>室の絶対湿度を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.isTimeStepCorrect">
            <summary>計算時間間隔が正常か否か</summary>
            <returns>正常の場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.UpdateRoomTemperatures">
            <summary>室の乾球温度を更新する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.SetTimeStep(System.Double)">
            <summary>計算時間間隔[s]を設定する</summary>
            <param name="timeStep">計算時間間隔[s]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.SetAirFlow(Popolo.Utility.LoadCalculation.ImmutableZone,Popolo.Utility.LoadCalculation.ImmutableZone,System.Double)">
            <summary>室間換気量[m3/h]を設定する</summary>
            <param name="upstreamZone">上流（空気が吹き出す側）の室</param>
            <param name="downstreamZone">下流（空気が吹き込む側）の室</param>
            <param name="airFlow">室間換気量[m3/h]</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.GetAirFlow(Popolo.Utility.LoadCalculation.ImmutableZone,Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>室間換気量[m3/h]を取得する</summary>
            <param name="upstreamZone">上流（空気が吹き出す側）の室</param>
            <param name="downstreamZone">下流（空気が吹き込む側）の室</param>
            <returns>室間換気量[m3/h]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.SetCurrentDateTime(System.DateTime)">
            <summary>現在の日時を設定する</summary>
            <param name="dTime">現在の日時</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.makeXAMatrix">
            <summary>表面温度計算式の逆行列を計算する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.makePermVectorDB">
            <summary>行列入れ替え配列を作成する</summary>
            <returns>空気温度が変動するゾーンの数</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.makePermVectorAH">
            <summary>行列入れ替え配列を作成する</summary>
            <returns>絶対湿度が変動するゾーンの数</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.setRadiationToSurface">
            <summary>各Roomの放射を表面に設定する</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.MultiRoom.makeARMatrixAndCAVector">
            <summary>AR行列とCAベクトルを作成する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.MultiRoom.TimeStep">
            <summary>計算時間間隔[sec]を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.MultiRoom.Rooms">
            <summary>室リストを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.LoadCalculation.MultiRoom.CurrentDateTime">
            <summary>現在の日時を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.LoadCalculation.InterZoneAirExchange">
            <summary>ゾーン間換気クラス</summary>
        </member>
        <member name="F:Popolo.Utility.LoadCalculation.InterZoneAirExchange.zones">
            <summary>ゾーンの換気量リスト</summary>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.InterZoneAirExchange.#ctor(Popolo.Utility.LoadCalculation.ImmutableZone[])">
            <summary>コンストラクタ</summary>
            <param name="zones">ゾーン間換気を行うゾーンリスト</param>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.InterZoneAirExchange.SetAirExchangeVolume(Popolo.Utility.LoadCalculation.ImmutableZone,Popolo.Utility.LoadCalculation.ImmutableZone,System.Double)">
            <summary>ゾーン間換気量[m3/h]を設定する</summary>
            <param name="zone1">ゾーン1</param>
            <param name="zone2">ゾーン2</param>
            <param name="airExchangeVolume">ゾーン間換気量[m3/h]</param>
            <returns>設定成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.InterZoneAirExchange.GetAirExchangeVolume(Popolo.Utility.LoadCalculation.ImmutableZone,Popolo.Utility.LoadCalculation.ImmutableZone)">
            <summary>ゾーン間換気量[m3/h]を取得する</summary>
            <param name="zone1">ゾーン1</param>
            <param name="zone2">ゾーン2</param>
            <returns>ゾーン間換気量[m3/h]</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.InterZoneAirExchange.GetZones">
            <summary>ゾーン一覧を取得する</summary>
            <returns>ゾーン一覧</returns>
        </member>
        <member name="M:Popolo.Utility.LoadCalculation.InterZoneAirExchange.GetExchangeAir(Popolo.Utility.LoadCalculation.ImmutableZone,Popolo.Utility.Property.ImmutableMoistAir@,System.Double@)">
            <summary>ゾーンへ流入する空気の状態と体積[m3/h]を取得する</summary>
            <param name="zone">ゾーン</param>
            <param name="airState">空気状態</param>
            <param name="volume">空気体積[m3/h]</param>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriods">
            <summary>時間帯クラス</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.ImmutableTimePeriods">
            <summary>読み取り専用TimePeriodsインターフェース</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableTimePeriods.GetTimePeriodName(System.Int32)">
            <summary>時間帯名称を取得する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <returns>時間帯名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableTimePeriods.GetTimePeriod(System.Int32,System.String@,System.DateTime@,System.DateTime@)">
            <summary>時間帯情報を取得する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <param name="timePeriodName">時間帯名称</param>
            <param name="timePeriodStartTime">時間帯開始時刻</param>
            <param name="timePeriodEndTime">時間帯終了時刻</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableTimePeriods.GetTimePeriods(System.String,System.DateTime[]@,System.DateTime[]@)">
            <summary>時間帯情報を取得する</summary>
            <param name="timePeriodName">時間帯名称</param>
            <param name="timePeriodStartDTimes">時間帯開始時刻リスト</param>
            <param name="timePeriodEndDTimes">時間帯終了リスト</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.ImmutableTimePeriods.Count">
            <summary>定義した時間帯数を取得する</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.YEAR">
            <summary>スケジュール定義する年（閏年に関係）</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.MONTH">
            <summary>スケジュール定義する月</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.DAY">
            <summary>スケジュール定義する日</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.id">
            <summary>ID</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.name">
            <summary>名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.timePeriodNames">
            <summary>時間帯名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.timePeriodStartTimes">
            <summary>時間帯開始時刻（名称リスト数+1のリストとなる）</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.#ctor(Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods)">
            <summary>コンストラクタ</summary>
            <param name="predefinedTimePeriods">定義済の時間帯</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.Initialize(Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods)">
            <summary>定義済の時間帯で初期化する</summary>
            <param name="predefinedTimePeriods">定義済の時間帯</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.AddTimePeriod(System.String,System.DateTime)">
            <summary>時間帯を追加する</summary>
            <param name="timePeriodName">時間帯名称</param>
            <param name="timePeriodStartTime">時間帯開始時刻</param>
            <returns>追加成功の真偽（指定時刻に既に時間帯が定義されている場合は失敗）</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.GetTimePeriodName(System.Int32)">
            <summary>時間帯名称を取得する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <returns>時間帯名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.GetTimePeriod(System.Int32,System.String@,System.DateTime@,System.DateTime@)">
            <summary>時間帯情報を取得する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <param name="timePeriodName">時間帯名称</param>
            <param name="timePeriodStartTime">時間帯開始時刻</param>
            <param name="timePeriodEndTime">時間帯終了時刻</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.GetTimePeriods(System.String,System.DateTime[]@,System.DateTime[]@)">
            <summary>時間帯情報を取得する</summary>
            <param name="timePeriodName">時間帯名称</param>
            <param name="timePeriodStartDTimes">時間帯開始時刻リスト</param>
            <param name="timePeriodEndDTimes">時間帯終了リスト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.RemoveTimePeriod(System.Int32)">
            <summary>時間帯を削除する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.ChangeTimePeriodName(System.Int32,System.String)">
            <summary>時間帯名称を変更する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <param name="timePeriodName">時間帯名称</param>
            <returns>名称変更成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.ChangeTimePeriodDateTime(System.Int32,System.DateTime,System.Boolean)">
            <summary>時間帯端部時刻を変更する</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <param name="timePeriodDateTime">時間帯端部時刻</param>
            <param name="isStartDateTime">時間帯開始時刻の設定か否か</param>
            <returns>時間帯端部時刻を変更成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.GetTermNames">
            <summary>時間帯名称リストを取得する</summary>
            <returns>時間帯名称リスト</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.GetTermName(System.DateTime)">
            <summary>時刻を指定して時間帯名称を取得する</summary>
            <param name="dateTime">時刻</param>
            <returns>時間帯名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.Clone">
            <summary>TimePeriodsクラスの複製を返す</summary>
            <returns>TimePeriodsクラスの複製</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriods.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>TimePeriodsシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="E:Popolo.Utility.Schedule.TimePeriods.NameChangeEvent">
            <summary>名称変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.TimePeriods.TimePeriodAddEvent">
            <summary>時刻帯追加イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.TimePeriods.TimePeriodChangeEvent">
            <summary>時刻帯変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.TimePeriods.TimePeriodRemoveEvent">
            <summary>時刻帯削除イベント</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriods.ID">
            <summary>時間帯IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriods.Name">
            <summary>時間帯名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriods.Count">
            <summary>定義した時間帯数を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriods.NameChangeEventHandler">
            <summary>名称変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriods.TimePeriodAddEventHandler">
            <summary>時刻帯追加イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriods.TimePeriodChangeEventHandler">
            <summary>時刻帯変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriods.TimePeriodRemoveEventHandler">
            <summary>時刻帯削除イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods">
            <summary>定義済みの時間帯</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods.AllDay">
            <summary>終日</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods.Hourly">
            <summary>時間別</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods.BusinessHours">
            <summary>営業時間</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriods.PredefinedTimePeriods.DayAndNight">
            <summary>昼夜</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.TimePeriodsEventArgs">
            <summary>時間帯関連のEventArgs</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriodsEventArgs.timePeriodIndex">
            <summary>時間帯番号</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriodsEventArgs.timePeriodName">
            <summary>時間帯名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriodsEventArgs.timePeriodStart">
            <summary>時間帯開始時刻</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.TimePeriodsEventArgs.timePeriodEnd">
            <summary>時間帯終了時刻</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.TimePeriodsEventArgs.#ctor(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>コンストラクタ</summary>
            <param name="timePeriodIndex">時間帯番号</param>
            <param name="timePeriodName">時間帯名称</param>
            <param name="timePeriodStart">時間帯開始時刻</param>
            <param name="timePeriodEnd">時間帯終了時刻</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriodsEventArgs.TimePeriodIndex">
            <summary>時間帯番号を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriodsEventArgs.TimePeriodName">
            <summary>時間帯名称を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriodsEventArgs.TimePeriodStart">
            <summary>時間帯開始時刻を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.TimePeriodsEventArgs.TimePeriodEnd">
            <summary>時間帯終了時刻を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Scheduler`1">
            <summary>季節や時間帯などの期間のスケジュールを管理するクラス</summary>
            <typeparam name="SCHEDULE">スケジュール設定する状態値</typeparam>
        </member>
        <member name="F:Popolo.Utility.Schedule.Scheduler`1.defaultValue">
            <summary>デフォルト値</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Scheduler`1.name">
            <summary>スケジュール名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Scheduler`1.schedules">
            <summary>スケジュール内容保持配列</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Scheduler`1.schedulers">
            <summary>スケジューラ保持配列</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Scheduler`1.termNames">
            <summary>季節や時間帯などの期間名称リスト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Scheduler`1.terms">
            <summary>季節や時間帯などの期間構造を持つオブジェクト</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.#ctor">
            <summary>デフォルトコンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.#ctor(System.String)">
            <summary>デフォルトコンストラクタ</summary>
            <param name="scheduleName">スケジューラ名称</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.#ctor(Popolo.Utility.Schedule.ImmutableITermStructure)">
            <summary>コンストラクタ</summary>
            <param name="terms">季節や時間帯などの期間構造を持つオブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.#ctor(System.String,Popolo.Utility.Schedule.ImmutableITermStructure)">
            <summary>デフォルトコンストラクタ</summary>
            <param name="scheduleName">スケジューラ名称</param>
            <param name="terms">季節や時間帯などの期間構造を持つオブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.Initialize">
            <summary>初期化する</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.Initialize(Popolo.Utility.Schedule.ImmutableITermStructure)">
            <summary>初期化する</summary>
            <param name="terms">季節や時間帯などの期間構造を持つオブジェクト</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.GetTermNames">
            <summary>季節や時間帯などの期間名称リストを取得する</summary>
            <returns>季節や時間帯などの期間名称リスト</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.SetSchedule(`0)">
            <summary>全期間についてスケジュール内容を設定する</summary>
            <param name="schedule">スケジュール内容</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.SetSchedule(System.DateTime,`0)">
            <summary>スケジュール内容を設定する</summary>
            <param name="dateTime">スケジュール内容を設定する月日</param>
            <param name="schedule">スケジュール内容</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.SetSchedule(System.String,`0)">
            <summary>スケジュール内容を設定する</summary>
            <param name="termName">スケジュール内容を設定する月日</param>
            <param name="schedule">スケジュール内容</param>
            <returns>設定成功の真偽（スケジューラが設定されている場合は設定できない）</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.GetSchedule(System.DateTime,`0@)">
            <summary>スケジュール内容を取得する</summary>
            <param name="dateTime">スケジュール内容を取得する月日</param>
            <param name="schedule">スケジュール内容</param>
            <returns>スケジュール内容取得成功の真偽（スケジューラが設定されている場合は取得できない）</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.GetSchedule(System.String,`0@)">
            <summary>スケジュール内容を取得する</summary>
            <param name="termName">スケジュール内容を取得する期間</param>
            <param name="schedule">取得されたスケジュール内容</param>
            <returns>スケジュール内容取得成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.SetScheduler(System.DateTime,Popolo.Utility.Schedule.Scheduler{`0})">
            <summary>スケジューラを設定する</summary>
            <param name="dateTime">スケジューラを設定する日時データ</param>
            <param name="scheduler">設定するスケジューラ</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.SetScheduler(System.String,Popolo.Utility.Schedule.Scheduler{`0})">
            <summary>スケジューラを設定する</summary>
            <param name="termName">スケジューラを設定する期間名称</param>
            <param name="scheduler">設定するスケジューラ</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.RemoveScheduler(System.DateTime)">
            <summary>指定日時を管理するスケジューラを削除する</summary>
            <param name="dateTime">日時</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.RemoveScheduler(System.String)">
            <summary>指定名称の期間を管理するスケジューラを削除する</summary>
            <param name="termName">期間名称</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.GetScheduler(System.DateTime,Popolo.Utility.Schedule.Scheduler{`0}@)">
            <summary>指定月日を管理するスケジューラを取得する</summary>
            <param name="dateTime">スケジューラを取得する月日</param>
            <param name="scheduler">指定月日を管理するスケジューラ</param>
            <returns>取得成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.GetScheduler(System.String,Popolo.Utility.Schedule.Scheduler{`0}@)">
            <summary>指定名称の期間を管理するスケジューラを取得する</summary>
            <param name="termName">期間名称</param>
            <param name="scheduler">指定名称の期間を管理するスケジューラ</param>
            <returns>取得成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.HasScheduler(System.DateTime)">
            <summary>指定月日を管理するスケジューラの有無を返す</summary>
            <param name="dateTime">スケジューラが管理する月日</param>
            <returns>存在する場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.HasScheduler(System.String)">
            <summary>指定名称の期間を管理するスケジューラの有無を返す</summary>
            <param name="termName">期間名称</param>
            <returns>存在する場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.CopyStructure``1">
            <summary>同一構造のスケジューラを作成する</summary>
            <typeparam name="T">スケジュール内容の型</typeparam>
            <returns>同一構造のスケジューラ</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.GetSchedulerPath(Popolo.Utility.Schedule.Scheduler{`0})">
            <summary>指定されたスケジューラへのパスを返す（\区切り）</summary>
            <param name="scheduler">スケジューラオブジェクト</param>
            <returns>指定されたスケジューラへのパス</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.UsingTerm(System.Int32)">
            <summary>指定IDの期間構造を使用しているか否かを返す</summary>
            <param name="termID">期間構造ID</param>
            <returns>使用している場合は真</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.getTermName(System.DateTime)">
            <summary>Term名称を取得する</summary>
            <param name="dateTime">日付</param>
            <returns>Term名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Scheduler`1.Clone">
            <summary>Schedulerの複製を返す</summary>
            <returns>Schedulerの複製</returns>
        </member>
        <member name="E:Popolo.Utility.Schedule.Scheduler`1.SchedulerInitializeEvent">
            <summary>スケジューラ初期化イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Scheduler`1.SchedulerNameChangeEvent">
            <summary>名称変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Scheduler`1.SchedulerSetEvent">
            <summary>スケジューラ設定イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Scheduler`1.SchedulerRemoveEvent">
            <summary>スケジューラ削除イベント</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Scheduler`1.DefaultValue">
            <summary>デフォルト値を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Scheduler`1.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Scheduler`1.Terms">
            <summary>Schedulerが管理する期間構造オブジェクトを取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Scheduler`1.SchedulerInitializeEventHandler">
            <summary>スケジューラ初期化イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Scheduler`1.SchedulerNameChangeEventHandler">
            <summary>名称変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Scheduler`1.SchedulerSetEventHandler">
            <summary>スケジューラ設定イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Scheduler`1.SchedulerRemoveEventHandler">
            <summary>スケジューラ削除イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.SerializableScheduler">
            <summary>Schedulerシリアル化用クラス</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SerializableScheduler.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SerializableScheduler.name">
            <summary>スケジュール名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SerializableScheduler.schedules">
            <summary>スケジュール内容保持配列</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SerializableScheduler.schedulers">
            <summary>スケジューラ保持配列</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SerializableScheduler.terms">
            <summary>季節や時間帯などの期間構造を持つオブジェクト</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SerializableScheduler.defaultValue">
            <summary>デフォルト値</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.SerializableScheduler.#ctor">
            <summary>デフォルトコンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.SerializableScheduler.ToScheduler``1">
            <summary>スケジューラに変換する</summary>
            <typeparam name="T">スケジューラのタイプ</typeparam>
            <returns>スケジューラ</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.SerializableScheduler.FromScheduler``1(Popolo.Utility.Schedule.Scheduler{``0})">
            <summary>シリアル化可能なスケジューラに変換する</summary>
            <typeparam name="T">スケジューラのタイプ</typeparam>
            <param name="scheduler">スケジューラ</param>
            <returns>シリアル化可能なスケジューラ</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.SerializableScheduler.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.SerializableScheduler.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Schedulerシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Popolo.Utility.Schedule.SchedulerEventArgs`1">
            <summary>スケジューラ関連のEventArgs</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SchedulerEventArgs`1.scheduler">
            <summary>スケジューラ</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.SchedulerEventArgs`1.termName">
            <summary>スケジューラに対応する期間名称</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.SchedulerEventArgs`1.#ctor(Popolo.Utility.Schedule.Scheduler{`0},System.String)">
            <summary>コンストラクタ</summary>
            <param name="scheduler">スケジューラオブジェクト</param>
            <param name="termName">スケジューラに対応する期間名称</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.SchedulerEventArgs`1.TargetScheduler">
            <summary>スケジューラを取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.SchedulerEventArgs`1.TermName">
            <summary>スケジューラに対応する期間名称を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Approximation.Region">
            <summary>3変数の空間近似クラス</summary>
        </member>
        <member name="F:Popolo.Utility.Approximation.Region.coefs">
            <summary>係数a</summary>
        </member>
        <member name="F:Popolo.Utility.Approximation.Region.zRootNumber">
            <summary>Zの根の番号</summary>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.GetZ(System.Double,System.Double)">
            <summary>変数Zの値を計算する</summary>
            <param name="x">変数X</param>
            <param name="y">変数Y</param>
            <returns>変数Zの値</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.convertX(System.Double)">
            <summary>Xを変換する</summary>
            <param name="x">変換するX</param>
            <returns>X'</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.revertX(System.Double)">
            <summary>X'を逆変換する</summary>
            <param name="x">逆変換するX'</param>
            <returns>X</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.convertY(System.Double)">
            <summary>Yを変換する</summary>
            <param name="y">変換するY</param>
            <returns>Y'</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.revertY(System.Double)">
            <summary>Y'を逆変換する</summary>
            <param name="y">逆変換するY'</param>
            <returns>Y</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.convertZ(System.Double)">
            <summary>Zを変換する</summary>
            <param name="z">変換するZ</param>
            <returns>Z'</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.revertZ(System.Double)">
            <summary>Z'を逆変換する</summary>
            <param name="z">逆変換するZ'</param>
            <returns>Z</returns>
        </member>
        <member name="M:Popolo.Utility.Approximation.Region.getCubicEQRoot(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>三次方程式(ax^3+bx^2+cx+d=0)の解を解析的に求める</summary>
            <param name="coefA">x^3の係数</param>
            <param name="coefB">x^2の係数</param>
            <param name="coefC">xの係数</param>
            <param name="coefD">切片</param>
            <param name="rootNumber">解の番号</param>
            <returns>三次方程式の解</returns>
        </member>
        <member name="P:Popolo.Utility.Approximation.Region.Coefficients">
            <summary>係数を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Approximation.Region.ZRootNumber">
            <summary>Zの根の番号を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Days">
            <summary>曜日クラス</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.ImmutableDays">
            <summary>読み取り専用Daysインターフェース</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.ImmutableDays.GetDays(System.String)">
            <summary>指定グループに属する曜日リストを取得する</summary>
            <param name="groupName">グループ名称</param>
            <returns>指定グループに属する曜日リスト</returns>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.YEAR">
            <summary>スケジュール定義する年（閏年に関係）</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.S_VERSION">
            <summary>シリアライズ用バージョン情報</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.id">
            <summary>ID</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.name">
            <summary>名称</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.termNames">
            <summary>グループ名称</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.#ctor(Popolo.Utility.Schedule.Days.PredefinedDays)">
            <summary>コンストラクタ</summary>
            <param name="predefinedDays">定義済みの曜日</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.Initialize(Popolo.Utility.Schedule.Days.PredefinedDays)">
            <summary>定義済の季節で初期化する</summary>
            <param name="predefinedDays">定義済みの季節</param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.SetTermName(System.DayOfWeek,System.String)">
            <summary>曜日グループ名称を変更する</summary>
            <param name="dayOfWeek">曜日</param>
            <param name="termName">曜日グループ名称</param>
            <returns>名称変更成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.GetTermName(System.DayOfWeek)">
            <summary>曜日グループ名称を取得する</summary>
            <param name="dayOfWeek">曜日</param>
            <returns>曜日グループ名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.GetDays(System.String)">
            <summary>指定グループに属する曜日リストを返す</summary>
            <param name="termName">グループ名称</param>
            <returns>指定グループに属する曜日リスト</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.GetTermNames">
            <summary>曜日グループ名称リストを取得する</summary>
            <returns>曜日グループ名称リスト</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.GetTermName(System.DateTime)">
            <summary>曜日を指定して曜日グループ名称を取得する</summary>
            <param name="dateTime">曜日</param>
            <returns>曜日グループ名称</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.Clone">
            <summary>DaysOfTheWeekクラスの複製を返す</summary>
            <returns>DaysOfTheWeekクラスの複製</returns>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>デシリアライズ用コンストラクタ</summary>
            <param name="sInfo"></param>
            <param name="context"></param>
        </member>
        <member name="M:Popolo.Utility.Schedule.Days.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>HvacSystemシリアル化処理</summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="E:Popolo.Utility.Schedule.Days.NameChangeEvent">
            <summary>名称変更イベント</summary>
        </member>
        <member name="E:Popolo.Utility.Schedule.Days.DayChangeEvent">
            <summary>曜日変更イベント</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Days.ID">
            <summary>IDを設定・取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.Days.Name">
            <summary>名称を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Days.NameChangeEventHandler">
            <summary>名称変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Days.DayChangeEventHandler">
            <summary>曜日変更イベントハンドラ</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.Days.PredefinedDays">
            <summary>定義済みの曜日</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.PredefinedDays.AllWeek">
            <summary>全曜日</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.PredefinedDays.WeekDayAndWeekEnd">
            <summary>週末</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.Days.PredefinedDays.OneWeek">
            <summary>曜日別</summary>
        </member>
        <member name="T:Popolo.Utility.Schedule.DaysEventArgs">
            <summary>曜日関連のEventArgs</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.DaysEventArgs.dayOfWeek">
            <summary>編集した曜日</summary>
        </member>
        <member name="F:Popolo.Utility.Schedule.DaysEventArgs.groupName">
            <summary>グループ名称</summary>
        </member>
        <member name="M:Popolo.Utility.Schedule.DaysEventArgs.#ctor(System.DayOfWeek,System.String)">
            <summary>コンストラクタ</summary>
            <param name="dayOfWeek">編集した曜日</param>
            <param name="groupName">グループ名称</param>
        </member>
        <member name="P:Popolo.Utility.Schedule.DaysEventArgs.DayOfWeek">
            <summary>編集した曜日を取得する</summary>
        </member>
        <member name="P:Popolo.Utility.Schedule.DaysEventArgs.GroupName">
            <summary>グループ名称を取得する</summary>
        </member>
        <member name="T:Popolo.Utility.Weather.Sky">
            <summary>天空に関する計算処理</summary>
            <remarks>
            数値計算で学ぶ光と熱の建築環境学, pp.20, 丸善, 宿谷昌則, 1993
            パソコンによる空気調和計算法, 宇田川光弘, 1986
            </remarks>
        </member>
        <member name="F:Popolo.Utility.Weather.Sky.DEG_TO_RAD">
            <summary>DegreeをRadianに変換する係数</summary>
        </member>
        <member name="F:Popolo.Utility.Weather.Sky.BLACK_RADIATION">
            <summary>黒体の放射定数[W/m2-K4]</summary>
        </member>
        <member name="M:Popolo.Utility.Weather.Sky.DegreeToRadian(System.Double)">
            <summary>度をラジアンに変換する</summary>
            <param name="degree">度</param>
            <returns>ラジアン</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sky.RadianToDegree(System.Double)">
            <summary>ラジアンを度に変換する</summary>
            <param name="radian">ラジアン</param>
            <returns>度</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sky.GetAtmosphericRadiation(System.Double,System.Double,System.Double)">
            <summary>大気放射量[W/m2]を計算する</summary>
            <param name="temperature">外気乾球温度[C]</param>
            <param name="cloudCover">雲量[-]</param>
            <param name="waterVaporPartialPressure">水蒸気分圧[kPa]</param>
            <returns>大気放射量[W/m2]</returns>
        </member>
        <member name="M:Popolo.Utility.Weather.Sky.GetNocturnalRadiation(System.Double,System.Double,System.Double)">
            <summary>夜間放射量[W/m2]を計算する</summary>
            <param name="temperature">外気乾球温度[C]</param>
            <param name="cloudCover">雲量[-]</param>
            <param name="waterVaporPartialPressure">水蒸気分圧[kPa]</param>
            <returns>夜間放射量[W/m2]</returns>
        </member>
        <member name="T:Popolo.Utility.ThermalComfort.SETStarCalculator">
            <summary>SET*計算クラス</summary>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.SETStarCalculator.TryCalculateSET(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>SET値[-]等を計算する</summary>
            <param name="dryBulbTemperature">乾球温度[CDB]</param>
            <param name="meanRadiantTemperature">平均放射温度[C]</param>
            <param name="relativeAirVelocity">気流速度[m/s]</param>
            <param name="relativeHumidity">相対湿度[%]</param>
            <param name="clothing">着衣量[clo]</param>
            <param name="rm">代謝量[W/m2]</param>
            <param name="externalWork">外部仕事量[W/m2]</param>
            <param name="pb">大気圧[kPa]</param>
            <param name="weight">体重[kg]</param>
            <param name="bodySurface">体表面積[m2]</param>
            <param name="et">ET*値[-]</param>
            <param name="setStar">SET*値[-]</param>
            <returns>計算成功の真偽</returns>
        </member>
        <member name="M:Popolo.Utility.ThermalComfort.SETStarCalculator.svpcal(System.Double)">
            <summary></summary>
            <param name="t"></param>
            <returns></returns>
        </member>
    </members>
</doc>
