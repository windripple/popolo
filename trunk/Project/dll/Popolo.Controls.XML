<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Popolo.Controls</name>
    </assembly>
    <members>
        <member name="T:Popolo.Schedule.SchedulerEditor`1">
            <summary>スケジューラエディタ</summary>
        </member>
        <member name="F:Popolo.Schedule.SchedulerEditor`1.defaultValue">
            <summary>デフォルト値</summary>
        </member>
        <member name="F:Popolo.Schedule.SchedulerEditor`1.iTermStructures">
            <summary>設定可能な期間定義オブジェクトリスト</summary>
        </member>
        <member name="F:Popolo.Schedule.SchedulerEditor`1.scheduler">
            <summary>編集するスケジューラ</summary>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.SetITermStructures(Popolo.Schedule.ITermStructure[])">
            <summary>設定可能な期間定義オブジェクトリストを設定する</summary>
            <param name="iTermStructures">設定可能な期間定義オブジェクトリスト</param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.SetScheduler(Popolo.Schedule.ITermStructure)">
            <summary>スケジューラを設定する</summary>
            <param name="iTermStructure">スケジューラで管理する期間定義オブジェクト</param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.SetScheduler(Popolo.Schedule.Scheduler{`0})">
            <summary>スケジューラを設定する</summary>
            <param name="scheduler">スケジューラ</param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.GetScheduler">
            <summary>編集中のスケジューラを取得する</summary>
            <returns>編集中のスケジューラ</returns>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.SetSchedule(`0)">
            <summary>選択中のスケジューラと期間にスケジュールを設定する</summary>
            <param name="schedule">スケジュール内容</param>
            <returns>設定成功の真偽</returns>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.GetSchedule(`0@)">
            <summary>選択中のスケジューラと期間のスケジュールを取得する</summary>
            <param name="schedule">スケジュール内容</param>
            <returns>取得成功の真偽</returns>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.SchedulerNodeSelected">
            <summary>スケジューラノードが選択されているか否かを取得する</summary>
            <returns>スケジューラノードが選択されている場合は真</returns>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.getTreeNodeFromSchedulerAndTermName(System.Windows.Forms.TreeNodeCollection,Popolo.Schedule.Scheduler{`0},System.String)">
            <summary>TreeNodeCollectionを検索してSchedulerと期間名称に対応するTreeNodeを特定する</summary>
            <param name="treeNodes">検索するTreeNodeCollection</param>
            <param name="scheduler">TreeNodeのタグに関連付けられたSchedulerオブジェクト</param>
            <param name="termName">ツリーノードに表示されているテキストの名称</param>
            <returns>Schedulerと期間名称に対応するTreeNode</returns>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.getTreeNodeFromScheduler(System.Windows.Forms.TreeNodeCollection,Popolo.Schedule.Scheduler{`0})">
            <summary>TreeNodeCollectionを検索してSchedulerに対応するTreeNodeを特定する</summary>
            <param name="treeNodes">検索するTreeNodeCollection</param>
            <param name="scheduler">TreeNodeのタグに関連付けられたSchedulerオブジェクト</param>
            <returns>Schedulerに対応するTreeNode</returns>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.scheduleTree_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>選択ノード変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.updateTSBtn">
            <summary>ToolStripButtonの状態を更新する</summary>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.scheduleTree_BeforeExpand(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>ノードを開く前の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.tsbtnAdd_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>スケジューラ追加ボタンクリック時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.tsbtnRemove_Click(System.Object,System.EventArgs)">
            <summary>スケジューラ削除ボタンクリック時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.tsbtnAdd_DropDownOpening(System.Object,System.EventArgs)">
            <summary>スケジューラ追加ボタンドロップダウンリスト表示前の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.tsbtnProperty_Click(System.Object,System.EventArgs)">
            <summary>プロパティボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.scheduler_SchedulerNameChangeEvent(System.Object,System.EventArgs)">
            <summary>スケジューラ名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.scheduler_SchedulerInitializeEvent(System.Object,System.EventArgs)">
            <summary>スケジューラ初期化イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.scheduler_SchedulerRemoveEvent(System.Object,Popolo.Schedule.SchedulerEventArgs{`0})">
            <summary>スケジューラ削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.scheduler_SchedulerSetEvent(System.Object,Popolo.Schedule.SchedulerEventArgs{`0})">
            <summary>スケジューラ設定イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Popolo.Schedule.SchedulerEditor`1.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Schedule.SchedulerEditor`1.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="E:Popolo.Schedule.SchedulerEditor`1.SchedulerAddButtonOpeningEvent">
            <summary>スケジューラ追加ボタンリスト表示イベント</summary>
        </member>
        <member name="E:Popolo.Schedule.SchedulerEditor`1.SchedulerSetEvent">
            <summary>スケジューラ追加イベント</summary>
        </member>
        <member name="E:Popolo.Schedule.SchedulerEditor`1.TreeViewAfterSelectEvent">
            <summary>スケジューラ選択イベント</summary>
        </member>
        <member name="P:Popolo.Schedule.SchedulerEditor`1.DefaultValue">
            <summary>デフォルト値を設定・取得する</summary>
        </member>
        <member name="P:Popolo.Schedule.SchedulerEditor`1.SelectedNodeLevel">
            <summary>選択中のノードの階層を取得する</summary>
        </member>
        <member name="T:Popolo.Schedule.SchedulerEditor`1.SchedulerEditorEventHandler">
            <summary>スケジューライベントハンドラ</summary>
        </member>
        <member name="T:Popolo.ThermophysicalProperty.PsychrometricChartDrawer">
            <summary>空気線図描画クラス</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.L_MARGIN">
            <summary>左側マージン</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.R_MARGIN">
            <summary>右側マージン</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.T_MARGIN">
            <summary>上側マージン</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.B_MARGIN">
            <summary>下側マージン</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.BPEN">
            <summary>黒ペン</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.barometricPressure">
            <summary>気圧[kPa]</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.canvasSize">
            <summary>空気線図描画サイズ</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.lineProperties">
            <summary>等状態値線の描画範囲</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.#cctor">
            <summary>静的コンストラクタ</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.DrawChart(System.Drawing.Image)">
            <summary>Imageに空気線図を描画する</summary>
            <param name="image">描画対象のイメージ</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.DrawChart(System.Drawing.Image,Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation[])">
            <summary>Imageに空気線図および状態点を描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="plotInfos">空気状態点</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.DrawPlots(System.Drawing.Image,Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation)">
            <summary>プロットを描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="plotInfo">プロット情報</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.DrawPlots(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Single,System.Double[],System.Double[])">
            <summary>プロットを描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="fillColor">プロットカラー</param>
            <param name="lineColor">境界線色</param>
            <param name="plotSize">プロットサイズ</param>
            <param name="dbTemps">乾球温度リスト</param>
            <param name="aHumids">絶対湿度リスト</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.DrawLine(System.Drawing.Image,Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation)">
            <summary>多角形を描画する</summary>
            <param name="image">描画対象のイメージ</param>
            <param name="plotInfo">プロット情報</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.GetAirStateFromPoint(System.Drawing.PointF)">
            <summary>座標に基づいて空気状態を取得する</summary>
            <param name="ptf">座標</param>
            <returns>空気状態</returns>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.GetPointFromDBandAH(System.Double,System.Double)">
            <summary>乾球温度と絶対湿度に基づいて座標を計算する</summary>
            <param name="dryBulbTemperature">乾球温度</param>
            <param name="absoluteHumidity">絶対湿度</param>
            <returns>座標</returns>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.SetLineProperty(Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines,Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty)">
            <summary>等状態値線の描画範囲を設定する</summary>
            <param name="line">線種</param>
            <param name="lineProperty">等状態値線の描画範囲</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.GetLineProperty(Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines)">
            <summary>等状態値線の描画範囲を取得する</summary>
            <param name="line">線種</param>
            <returns>等状態値線の描画範囲</returns>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.getPointFromDBandAH(System.Double,System.Double,System.Double,System.Double)">
            <summary>乾球温度および絶対湿度から描画位置を計算する</summary>
            <param name="dbTemp">乾球温度</param>
            <param name="absoluteHumidity">絶対湿度</param>
            <param name="xRate">x方向レート</param>
            <param name="yRate">y方向レート</param>
            <returns>描画位置</returns>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawSaturatedLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>飽和線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">x方向レート</param>
            <param name="yRate">y方向レート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawDryBulbTemperatureLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等乾球温度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawAbsoluteHumidityLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等絶対湿度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawEnthalpyLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等エンタルピー線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawWetBulbTemperatureLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等湿球温度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawSpecificVolumeLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等比容積線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawRelativeHumidityLine(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>等相対湿度線を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.drawAxis(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>軸・目盛りおよび数値を描画する</summary>
            <param name="gr">Graphicsオブジェクト</param>
            <param name="xRate">xレート</param>
            <param name="yRate">yレート</param>
        </member>
        <member name="P:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.BarometricPressure">
            <summary>気圧を設定・取得する</summary>
        </member>
        <member name="P:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.CanvasSize">
            <summary>描画キャンバスサイズを設定</summary>
        </member>
        <member name="T:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines">
            <summary>描画線の種類</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.SaturatedLine">
            <summary>飽和線</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.WetBulbTemperatureLine">
            <summary>湿球温度</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.EnthalpyLine">
            <summary>エンタルピー</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.AbsoluteHumidityLine">
            <summary>絶対湿度</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.DryBulbTemperatureLine">
            <summary>乾球温度</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.RelativeHumidityLine">
            <summary>相対湿度</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.SpecificVoluemLine">
            <summary>比容積線</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.Lines.All">
            <summary>すべて</summary>
        </member>
        <member name="T:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty">
            <summary>等状態値線描画範囲保持構造体</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty.#ctor(System.Double,System.Double,System.Double,System.Drawing.Pen,System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="minValue">状態値下限</param>
            <param name="maxValue">状態値上限</param>
            <param name="spacing">状態値間隔</param>
            <param name="pen">描画するペン種類</param>
            <param name="drawLine">描画するか否か</param>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty.MinimumValue">
            <summary>状態値下限</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty.MaximumValue">
            <summary>状態値上限</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty.Spacing">
            <summary>状態値間隔</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty.DrawingPen">
            <summary>描画ペン</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.LineProperty.DrawLine">
            <summary>描画するか否か</summary>
        </member>
        <member name="T:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation">
            <summary>プロット情報</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation.DrybulbTemperatures">
            <summary>乾球温度リスト</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation.AbsoluteHumidities">
            <summary>絶対湿度リスト</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation.FillColor">
            <summary>描画色</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation.LineColor">
            <summary>線の色</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation.Diameter">
            <summary>直径</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.PsychrometricChartDrawer.PlotsInformation.#ctor(System.Double[],System.Double[],System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>コンストラクタ</summary>
            <param name="dbTemps">乾球温度リスト</param>
            <param name="aHumids">絶対湿度リスト</param>
            <param name="fillColor">描画色</param>
            <param name="lineColor">線の色</param>
            <param name="diameter">直径</param>
        </member>
        <member name="T:Popolo.Schedule.SeasonsEditor">
            <summary>Seasons編集コントロール</summary>
        </member>
        <member name="F:Popolo.Schedule.SeasonsEditor.seasons">
            <summary>編集中のSeasonsオブジェクト</summary>
        </member>
        <member name="F:Popolo.Schedule.SeasonsEditor.initializing">
            <summary>初期化中か否かのフラグ</summary>
        </member>
        <member name="F:Popolo.Schedule.SeasonsEditor.editable">
            <summary>編集可能か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.SetSeasons(Popolo.Schedule.Seasons)">
            <summary>編集するSeasonsオブジェクトを設定する</summary>
            <param name="seasons">編集するSeasonsオブジェクト</param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.seasons_NameChangeEvent(System.Object,System.EventArgs)">
            <summary>名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.seasons_SeasonRemoveEvent(System.Object,Popolo.Schedule.SeasonsEventArgs)">
            <summary>季節削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.seasons_SeasonChangeEvent(System.Object,Popolo.Schedule.SeasonsEventArgs)">
            <summary>季節編集イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.seasons_SeasonAddEvent(System.Object,Popolo.Schedule.SeasonsEventArgs)">
            <summary>季節追加イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.tbxSeasonsName_TextChanged(System.Object,System.EventArgs)">
            <summary>季節定義オブジェクト名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.tbxSeasonName_TextChanged(System.Object,System.EventArgs)">
            <summary>季節名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>季節追加ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.btnRemove_Click(System.Object,System.EventArgs)">
            <summary>季節削除ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.dtPickerStart_ValueChanged(System.Object,System.EventArgs)">
            <summary>季節開始月日変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.dtPickerEnd_ValueChanged(System.Object,System.EventArgs)">
            <summary>季節終了月日変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.lbxSeasons_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>選択中のSeasonsオブジェクト変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.updateControl">
            <summary>コントロールを更新する</summary>
        </member>
        <member name="F:Popolo.Schedule.SeasonsEditor.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Schedule.SeasonsEditor.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:Popolo.Schedule.SeasonsEditor.EdittingSeasons">
            <summary>編集中のSeasonsオブジェクトを取得する</summary>
        </member>
        <member name="P:Popolo.Schedule.SeasonsEditor.Editable">
            <summary>編集可能か否かを取得・設定する</summary>
        </member>
        <member name="T:Popolo.Schedule.TimePeriodsEditor">
            <summary>TimePeriods編集コントロール</summary>
        </member>
        <member name="F:Popolo.Schedule.TimePeriodsEditor.timePeriods">
            <summary>編集中のTimePeriodsオブジェクト</summary>
        </member>
        <member name="F:Popolo.Schedule.TimePeriodsEditor.initializing">
            <summary>初期化中か否かのフラグ</summary>
        </member>
        <member name="F:Popolo.Schedule.TimePeriodsEditor.editable">
            <summary>編集可能か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.SetTimePeriods(Popolo.Schedule.TimePeriods)">
            <summary>編集するTimePeriodsオブジェクトを設定する</summary>
            <param name="timePeriods">編集するTimePeriodsオブジェクト</param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.timePeriods_NameChangeEvent(System.Object,System.EventArgs)">
            <summary>名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.timePeriods_TimePeriodRemoveEvent(System.Object,Popolo.Schedule.TimePeriodsEventArgs)">
            <summary>時間帯削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.timePeriods_TimePeriodChangeEvent(System.Object,Popolo.Schedule.TimePeriodsEventArgs)">
            <summary>時間帯編集イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.timePeriods_TimePeriodAddEvent(System.Object,Popolo.Schedule.TimePeriodsEventArgs)">
            <summary>時間帯追加イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.tbxTimePeriodsName_TextChanged(System.Object,System.EventArgs)">
            <summary>時間帯定義オブジェクト名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.tbxTimePeriodName_TextChanged(System.Object,System.EventArgs)">
            <summary>名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>時間帯追加ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.btnRemove_Click(System.Object,System.EventArgs)">
            <summary>時間帯削除ボタンクリックイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.dtPickerStart_ValueChanged(System.Object,System.EventArgs)">
            <summary>時間帯開始時刻変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.dtPickerEnd_ValueChanged(System.Object,System.EventArgs)">
            <summary>時間帯終了時刻変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.lbxTimePeriods_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>選択中のTimePeriodsオブジェクト変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.updateControl">
            <summary>コントロールを更新する</summary>
        </member>
        <member name="F:Popolo.Schedule.TimePeriodsEditor.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Schedule.TimePeriodsEditor.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:Popolo.Schedule.TimePeriodsEditor.EdittingTimePeriods">
            <summary>編集中のTimePeriodsオブジェクトを取得する</summary>
        </member>
        <member name="P:Popolo.Schedule.TimePeriodsEditor.Editable">
            <summary>編集可能か否かを取得・設定する</summary>
        </member>
        <member name="T:Popolo.Controls.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:Popolo.Controls.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:Popolo.Controls.Properties.Resources.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="T:Popolo.ThermophysicalProperty.MoistAirTable">
            <summary>湿り空気状態表示テーブル</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.MoistAirTable.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.MoistAirTable.properties">
            <summary>空気状態の種類と列番号の対応</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.MoistAirTable.initializing">
            <summary>初期化中フラグ</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.MoistAirTable.editColsList">
            <summary>編集中の列番号リスト（行の数だけ存在）</summary>
        </member>
        <member name="F:Popolo.ThermophysicalProperty.MoistAirTable.barometricPressure">
            <summary>気圧[kPa]</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.dgAirTable_CellValueChanged(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>セル編集イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.dgAirTable_RowsAdded(System.Object,System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
            <summary>列追加イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.dgAirTable_RowsRemoved(System.Object,System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
            <summary>列削除イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.dgAirTable_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>キーダウンイベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.updateRow(System.Int32,System.Int32)">
            <summary>行を更新する</summary>
            <param name="rowIndex">更新に利用するセルの列方向番号</param>
            <param name="colIndex">更新に利用するセルの行方向番号</param>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.PasteClipboardData">
            <summary>クリップボードの値を貼り付ける</summary>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.GetClipboardContent">
            <summary>選択されたテーブルの内容を取得する</summary>
            <returns>選択されたテーブルの内容</returns>
        </member>
        <member name="M:Popolo.ThermophysicalProperty.MoistAirTable.OutputDataToCSVFile(System.String)">
            <summary>データをCSVファイルに書き出す</summary>
            <param name="filePath">CSVファイルへのパス</param>
        </member>
        <member name="P:Popolo.ThermophysicalProperty.MoistAirTable.BarometricPressure">
            <summary>気圧[kPa]を設定・取得する</summary>
        </member>
        <member name="T:Popolo.Schedule.PhasedTreeNode">
            <summary>子ノードの追加履歴を保存するプロパティを持つ段階的ツリーノード</summary>
        </member>
        <member name="F:Popolo.Schedule.PhasedTreeNode.isSubFoldersAdded">
            <summary>子ノード追加処理済か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Schedule.PhasedTreeNode.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="text">ツリーノードに表示する文字列</param>
        </member>
        <member name="P:Popolo.Schedule.PhasedTreeNode.SubFoldersAdded">
            <summary>子ノード追加処理済か否かのフラグを設定・取得する</summary>
        </member>
        <member name="T:Popolo.Schedule.DaysEditor">
            <summary>曜日定義編集コントロール</summary>
        </member>
        <member name="F:Popolo.Schedule.DaysEditor.components">
            <summary> 
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.InitializeComponent">
            <summary> 
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="F:Popolo.Schedule.DaysEditor.days">
            <summary>編集中のSeasonsオブジェクト</summary>
        </member>
        <member name="F:Popolo.Schedule.DaysEditor.initializing">
            <summary>初期化中か否かのフラグ</summary>
        </member>
        <member name="F:Popolo.Schedule.DaysEditor.editable">
            <summary>編集可能か否かのフラグ</summary>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.SetDays(Popolo.Schedule.Days)">
            <summary>Daysオブジェクトを設定する</summary>
            <param name="days">Daysオブジェクト</param>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.days_NameChangeEvent(System.Object,System.EventArgs)">
            <summary>名称変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.days_DayChangeEvent(System.Object,Popolo.Schedule.DaysEventArgs)">
            <summary>曜日グループ変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.tbxDaysName_TextChanged(System.Object,System.EventArgs)">
            <summary>Days名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.tbxGroupName_TextChanged(System.Object,System.EventArgs)">
            <summary>グループ名称テキストボックス変更イベント発生時の処理</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Popolo.Schedule.DaysEditor.updateControl">
            <summary>コントロールを更新する</summary>
        </member>
        <member name="P:Popolo.Schedule.DaysEditor.EdittingDays">
            <summary>編集中のDaysオブジェクトを取得する</summary>
        </member>
        <member name="P:Popolo.Schedule.DaysEditor.Editable">
            <summary>編集可能か否かを取得・設定する</summary>
        </member>
    </members>
</doc>
